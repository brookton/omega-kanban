webpackHotUpdate_N_E("pages/index",{

/***/ "./components/board.tsx":
/*!******************************!*\
  !*** ./components/board.tsx ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-beautiful-dnd */ \"./node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n/* harmony import */ var _top__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./top */ \"./components/top.tsx\");\n/* harmony import */ var _column__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./column */ \"./components/column.tsx\");\n/* harmony import */ var _add_section__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./add-section */ \"./components/add-section.tsx\");\n/* harmony import */ var _archive__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./archive */ \"./components/archive.tsx\");\n/* harmony import */ var _card_modal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./card-modal */ \"./components/card-modal.tsx\");\n/* harmony import */ var notistack__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! notistack */ \"./node_modules/notistack/dist/notistack.esm.js\");\n\n\n\n\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\n\n\n\n\nfunction Board(props) {\n  _s();\n\n  var _this = this;\n\n  var _useSnackbar = Object(notistack__WEBPACK_IMPORTED_MODULE_12__[\"useSnackbar\"])(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])({\n    columns: {\n      'column-0': {\n        id: 'column-0',\n        title: 'Plan',\n        cards: [{\n          id: Object(uuid__WEBPACK_IMPORTED_MODULE_6__[\"v4\"])(),\n          cardTitle: 'Create HTML skeleton',\n          note: '',\n          isCardCompleted: false,\n          isArchived: false,\n          checklists: [],\n          activities: [],\n          dueDate: new Date(2020, 9, 11),\n          createdAt: new Date(2020, 8, 11),\n          updatedAt: new Date(2020, 8, 11)\n        }],\n        colorIndex: 0,\n        createdAt: new Date(2020, 8, 1),\n        updatedAt: new Date(2020, 8, 11)\n      },\n      'column-1': {\n        id: 'column-1',\n        title: 'Progress',\n        cards: [],\n        colorIndex: 1,\n        createdAt: new Date(2020, 8, 2),\n        updatedAt: new Date(2020, 8, 2)\n      },\n      'column-2': {\n        id: 'column-2',\n        title: 'Complete',\n        cards: [],\n        colorIndex: 2,\n        createdAt: new Date(2020, 8, 3),\n        updatedAt: new Date(2020, 8, 3)\n      }\n    },\n    columnOrder: ['column-0', 'column-1', 'column-2'],\n    archive: {\n      id: 'archive',\n      title: 'Archive',\n      cards: [],\n      colorIndex: 0,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    }\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(0),\n      colorIndex = _useState2[0],\n      setColorIndex = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])({}),\n      currentCard = _useState3[0],\n      setCurrentCard = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])({}),\n      currentColumn = _useState4[0],\n      setCurrentColumn = _useState4[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(function () {\n    setColorIndex(state.columnOrder.length - 1);\n  }, []);\n\n  var addSection = function addSection(sectionTitle, card) {\n    var newSection = {\n      id: Object(uuid__WEBPACK_IMPORTED_MODULE_6__[\"v4\"])(),\n      title: sectionTitle,\n      cards: [],\n      colorIndex: colorIndex + 1,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n\n    if (card) {\n      newSection.cards.push(card);\n    }\n\n    setColorIndex(colorIndex + 1);\n    state.columns[newSection.id] = newSection;\n    state.columnOrder.push(newSection.id);\n    setState(_objectSpread({}, state));\n  };\n\n  var addCard = function addCard(columnId, cardTitle) {\n    var newCard = {\n      id: Object(uuid__WEBPACK_IMPORTED_MODULE_6__[\"v4\"])(),\n      cardTitle: cardTitle,\n      note: '',\n      isCardCompleted: false,\n      isArchived: false,\n      checklists: [],\n      activities: [],\n      dueDate: null,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    addActivity(columnId, newCard.id, 'This card is created');\n    updateDate(columnId, null);\n    state.columns[columnId].cards.push(newCard);\n    setState(_objectSpread({}, state));\n  };\n\n  var completeCard = function completeCard(columnId, cardId) {\n    var completeCard = null;\n    state.columns[columnId].cards.map(function (card, index) {\n      if (card.id === cardId) {\n        card.isCardCompleted = true;\n        completeCard = card;\n        state.columns[columnId].cards.splice(index, 1);\n      }\n    });\n    state.columns[columnId].cards.push(completeCard);\n    updateDate(columnId, cardId);\n    addActivity(columnId, cardId, \"Card is completed\");\n    setState(_objectSpread({}, state));\n  };\n\n  var updateSectionTitle = function updateSectionTitle(columnId, sectionTitle) {\n    state.columns[columnId].title = sectionTitle;\n    state.columns[columnId].updatedAt = new Date();\n    setState(_objectSpread({}, state));\n  };\n\n  var updateCardTitle = function updateCardTitle(columnId, cardId, cardTitle) {\n    state.columns[columnId].cards.map(function (card) {\n      if (card.id === cardId) {\n        card.cardTitle = cardTitle;\n      }\n    });\n    updateDate(columnId, cardId);\n    addActivity(columnId, cardId, \"Card title is changed to \".concat(cardTitle));\n    setState(_objectSpread({}, state));\n  };\n\n  var updateCardNote = function updateCardNote(columnId, cardId, note) {\n    state.columns[columnId].cards.map(function (card) {\n      if (card.id === cardId) {\n        card.note = note;\n      }\n    });\n    updateDate(columnId, cardId);\n    addActivity(columnId, cardId, \"Card note is changed to ||\".concat(note));\n    setState(_objectSpread({}, state));\n  };\n\n  var deleteColumn = function deleteColumn(id) {\n    delete state.columns[id];\n    state.columnOrder.splice(state.columnOrder.indexOf(id), 1);\n    setState(_objectSpread({}, state));\n  };\n\n  var deleteCard = function deleteCard(columnId, cardId) {\n    state.columns[columnId].cards.map(function (card, index) {\n      if (card.id === cardId) {\n        state.columns[columnId].cards.splice(index, 1);\n      }\n    });\n    updateDate(columnId, cardId);\n    setState(_objectSpread({}, state));\n  };\n\n  var archiveCard = function archiveCard(columnId, cardId) {\n    var tempCard = null;\n    state.columns[columnId].cards.map(function (card, index) {\n      if (card.id === cardId) {\n        card.isArchived = true;\n        tempCard = card;\n        state.columns[columnId].cards.splice(index, 1);\n      }\n    });\n    updateDate(columnId, cardId);\n    state.archive.cards.push(tempCard);\n    addActivity('archive', cardId, \"Card is archived\");\n    setState(_objectSpread({}, state));\n  };\n\n  var onDragEnd = function onDragEnd(result) {\n    var _objectSpread3;\n\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === 'column') {\n      var columnOrder = reorder(state.columnOrder, result.source.index, result.destination.index);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        columnOrder: columnOrder\n      }));\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      var column = state.columns[result.source.droppableId];\n      var cards = reorder(column.cards, result.source.index, result.destination.index);\n\n      var _newState = _objectSpread(_objectSpread({}, state), {}, {\n        columns: _objectSpread(_objectSpread({}, state.columns), {}, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, column.id, _objectSpread(_objectSpread({}, column), {}, {\n          cards: cards\n        })))\n      });\n\n      setState(_newState);\n      return;\n    }\n\n    var sourceColumn = state.columns[result.source.droppableId];\n    var destinationColumn = state.columns[result.destination.droppableId];\n    var card = sourceColumn.cards[result.source.index];\n\n    var newSourceColumn = _objectSpread(_objectSpread({}, sourceColumn), {}, {\n      cards: Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(sourceColumn.cards)\n    });\n\n    newSourceColumn.cards.splice(result.source.index, 1);\n\n    var newDestinationColumn = _objectSpread(_objectSpread({}, destinationColumn), {}, {\n      cards: Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(destinationColumn.cards)\n    });\n\n    newDestinationColumn.cards.splice(result.destination.index, 0, card);\n\n    var newState = _objectSpread(_objectSpread({}, state), {}, {\n      columns: _objectSpread(_objectSpread({}, state.columns), {}, (_objectSpread3 = {}, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_objectSpread3, newSourceColumn.id, newSourceColumn), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_objectSpread3, newDestinationColumn.id, newDestinationColumn), _objectSpread3))\n    });\n\n    setState(newState);\n  };\n\n  var getItemStyle = function getItemStyle(isDragging, draggableStyle) {\n    return _objectSpread({\n      display: 'flex',\n      flexDirection: 'row'\n    }, draggableStyle);\n  };\n\n  var reorder = function reorder(list, startIndex, endIndex) {\n    var result = Array.from(list);\n\n    var _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_result$splice, 1),\n        removed = _result$splice2[0];\n\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_4___default.a.useState(false),\n      _React$useState2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var setCardForOpen = function setCardForOpen(columnId, cardId) {\n    if (columnId === 'archive') {\n      var card = state.archive.cards.filter(function (card) {\n        return card.id === cardId;\n      });\n      setCurrentCard(card[0]);\n      setCurrentColumn(state.archive);\n    } else {\n      var _card = state.columns[columnId].cards.filter(function (card) {\n        return card.id === cardId;\n      });\n\n      setCurrentCard(_card[0]);\n      setCurrentColumn(state.columns[columnId]);\n    }\n  };\n\n  var handleModalClose = function handleModalClose() {\n    setOpen(false);\n  };\n\n  var addChecklist = function addChecklist(columnId, cardId, checklist) {\n    state.columns[columnId].cards.map(function (card) {\n      if (card.id === cardId) {\n        card.checklists.push({\n          id: Object(uuid__WEBPACK_IMPORTED_MODULE_6__[\"v4\"])(),\n          checklist: checklist,\n          isChecked: false,\n          date: new Date()\n        });\n      }\n    });\n    addActivity(columnId, cardId, \"\".concat(checklist, \" is added to the checklist\"));\n    updateDate(columnId, cardId);\n    setState(_objectSpread({}, state));\n  };\n\n  var updateDate = function updateDate(columnId, cardId) {\n    if (cardId) {\n      state.columns[columnId].cards.map(function (card) {\n        if (card.id === cardId) {\n          card.updatedAt = new Date();\n        }\n      });\n    }\n\n    state.columns[columnId].updatedAt = new Date();\n    setState(_objectSpread({}, state));\n  };\n\n  var updateChecklist = function updateChecklist(columnId, cardId, checklistId, checklistContent) {\n    state.columns[columnId].cards.map(function (card) {\n      if (card.id === cardId) {\n        card.checklists.map(function (checklist) {\n          if (checklist.id === checklistId) {\n            checklist.checklist = checklistContent;\n          }\n        });\n      }\n    });\n    updateDate(columnId, cardId);\n    addActivity(columnId, cardId, \"A checklist is updated to \".concat(checklistContent));\n    setState(_objectSpread({}, state));\n  };\n\n  var completeChecklist = function completeChecklist(columnId, cardId, checklistId, isChecked) {\n    state.columns[columnId].cards.map(function (card) {\n      if (card.id === cardId) {\n        card.checklists.map(function (checklist) {\n          if (checklist.id === checklistId) {\n            checklist.isChecked = isChecked;\n          }\n        });\n      }\n    });\n    updateDate(columnId, cardId);\n    if (isChecked) addActivity(columnId, cardId, \"A checklist is completed\");else addActivity(columnId, cardId, \"A checklist is changed to incomplete\");\n    setState(_objectSpread({}, state));\n  };\n\n  var deleteChecklist = function deleteChecklist(columnId, cardId, checklistId) {\n    state.columns[columnId].cards.map(function (card) {\n      if (card.id === cardId) {\n        card.checklists = card.checklists.filter(function (checklist) {\n          return checklist.id !== checklistId;\n        });\n      }\n    });\n    updateDate(columnId, cardId);\n    addActivity(columnId, cardId, \"A checklist is deleted\");\n    setState(_objectSpread({}, state));\n  };\n\n  var convertDate = function convertDate(date) {\n    var month = date.toString().split(' ')[1];\n    var day = date.toString().split(' ')[2];\n    var year = date.toString().split(' ')[3];\n    return \"\".concat(month, \" \").concat(day, \", \").concat(year);\n  };\n\n  var setDueDate = function setDueDate(columnId, cardId, date) {\n    state.columns[columnId].cards.map(function (card) {\n      if (card.id === cardId) {\n        card.dueDate = new Date(date);\n      }\n    });\n    updateDate(columnId, cardId);\n    addActivity(columnId, cardId, \"A due date is set to \".concat(convertDate(date)));\n    setState(_objectSpread({}, state));\n  };\n\n  var addActivity = function addActivity(columnId, cardId, activity) {\n    if (columnId === 'archive') {\n      state.archive.cards.map(function (card) {\n        if (card.id === cardId) {\n          card.activities.unshift({\n            id: Object(uuid__WEBPACK_IMPORTED_MODULE_6__[\"v4\"])(),\n            activity: activity,\n            createdAt: new Date()\n          });\n        }\n      });\n    } else {\n      state.columns[columnId].cards.map(function (card) {\n        if (card.id === cardId) {\n          card.activities.unshift({\n            id: Object(uuid__WEBPACK_IMPORTED_MODULE_6__[\"v4\"])(),\n            activity: activity,\n            createdAt: new Date()\n          });\n        }\n      });\n    }\n\n    console.log('aaa');\n    enqueueSnackbar(activity);\n    handleClickVariant(activity, 'success');\n    setState(_objectSpread({}, state));\n  };\n\n  var handleClickVariant = function handleClickVariant(message, variant) {\n    return function () {\n      console.log(message);\n      enqueueSnackbar(message, {\n        variant: variant\n      });\n    };\n  };\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(_top__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    setView: props.setView,\n    setProjectName: props.setProjectName,\n    projectName: props.projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }\n  }, __jsx(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__[\"DragDropContext\"], {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }\n  }, __jsx(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__[\"Droppable\"], {\n    direction: \"horizontal\",\n    droppableId: \"all-droppables\",\n    type: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 11\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      style: getItemStyle(snapshot.isDragging, provided.droppableProps.style),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 15\n      }\n    }), state.columnOrder.map(function (columnId, index) {\n      return __jsx(_column__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n        key: columnId,\n        column: state.columns[columnId],\n        index: index,\n        reorder: reorder,\n        addCard: addCard,\n        setOpen: setOpen,\n        setCardForOpen: setCardForOpen,\n        updateSectionTitle: updateSectionTitle,\n        deleteColumn: deleteColumn,\n        onDragEnd: onDragEnd,\n        convertDate: convertDate,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }\n      });\n    }), provided.placeholder);\n  })), state.archive.cards.length > 0 && __jsx(_archive__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n    archive: state.archive,\n    setCardForOpen: setCardForOpen,\n    convertDate: convertDate,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 11\n    }\n  }), __jsx(_add_section__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    colorIndex: colorIndex,\n    addSection: addSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }\n  })), open && __jsx(_card_modal__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n    open: true,\n    projectName: props.projectName,\n    currentColumn: currentColumn,\n    handleModalClose: handleModalClose,\n    currentCard: currentCard,\n    addChecklist: addChecklist,\n    updateChecklist: updateChecklist,\n    addActivity: addActivity,\n    updateDate: updateDate,\n    updateCardTitle: updateCardTitle,\n    updateCardNote: updateCardNote,\n    completeChecklist: completeChecklist,\n    deleteChecklist: deleteChecklist,\n    setDueDate: setDueDate,\n    convertDate: convertDate,\n    completeCard: completeCard,\n    deleteCard: deleteCard,\n    archiveCard: archiveCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Board, \"FIEu9tFVc+MBkJ8vU23PhDgjSwE=\", false, function () {\n  return [notistack__WEBPACK_IMPORTED_MODULE_12__[\"useSnackbar\"]];\n});\n\n_c = Board;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/board.tsx\n");

/***/ })

})