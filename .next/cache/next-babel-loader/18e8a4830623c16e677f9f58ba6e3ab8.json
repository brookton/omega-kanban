{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      cards = _useState[0],\n      setCards = _useState[1];\n\n  var _useState2 = useState(false),\n      isAdding = _useState2[0],\n      setIsAdding = _useState2[1];\n\n  var _useState3 = useState(false),\n      isDragging = _useState3[0],\n      setIsDragging = _useState3[1];\n\n  var _useState4 = useState(''),\n      cardTitle = _useState4[0],\n      setCardTitle = _useState4[1];\n\n  var _useState5 = useState(''),\n      cardBoxTitle = _useState5[0],\n      setCardBoxTitle = _useState5[1];\n\n  useEffect(function () {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []); // const onDragStart = (result: any) => {\n  //   setIsDragging(true);\n  //   if (cardTitle.length < 1) {\n  //     setIsAdding(false);\n  //   }\n  // };\n  // const onDragEnd = (result: any) => {\n  //   setIsDragging(false);\n  //   props.onDragEnd(result);\n  // };\n\n  var handleAddCard = function handleAddCard() {\n    setIsAdding(true);\n  };\n\n  var handleAddCardBlur = function handleAddCardBlur() {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  var handleKeyDownForAddCard = function handleKeyDownForAddCard(event) {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  var handleCardTitleSubmit = function handleCardTitleSubmit() {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column.id, cardTitle);\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  return __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Droppable, {\n    droppableId: props.column.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), props.column.cards.map(function (card, index) {\n      return __jsx(Draggable, {\n        key: card.id,\n        draggableId: card.id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, function (provided, snapshot) {\n        return __jsx(Card, {\n          card: card,\n          provided: provided,\n          isDragging: snapshot.isDragging,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }\n        });\n      });\n    }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n      \"in\": isAdding,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"h-top flex-center mb-25px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      className: \"box-shadow-1 w-100per add-card-title\",\n      value: cardTitle,\n      autoFocus: true,\n      onBlur: function onBlur() {\n        return handleAddCardBlur();\n      },\n      onKeyDown: function onKeyDown(event) {\n        return handleKeyDownForAddCard(event);\n      },\n      onChange: function onChange(e) {\n        return setCardTitle(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }))) : __jsx(\"div\", {\n      className: \"h-top flex-center mb-25px cursor-pointer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, __jsx(\"i\", {\n      onClick: function onClick() {\n        return handleAddCard();\n      },\n      className: \"add-card-icon box-shadow-1 fas fa-plus\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    })), props.column.cards.length === 0 && __jsx(\"div\", {\n      className: \"no-task flex-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, __jsx(\"i\", {\n      className: \"far fa-check-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"No Task\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Drag tasks here\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"or click + to add new tasks\")), provided.placeholder);\n  }));\n}\n\n_s(CardBody, \"1u3TID+rGIBJjfUAIMH41XsN3KI=\");\n\n_c = CardBody;\nexport default CardBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardBody\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx"],"names":["React","useState","useEffect","Droppable","Draggable","Card","Zoom","CardBody","props","cards","setCards","isAdding","setIsAdding","isDragging","setIsDragging","cardTitle","setCardTitle","cardBoxTitle","setCardBoxTitle","handleAddCard","handleAddCardBlur","length","handleKeyDownForAddCard","event","key","handleCardTitleSubmit","addCard","column","id","provided","snapshot","innerRef","droppableProps","map","card","index","e","target","value","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props: any) {\n  const [cards, setCards] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cardTitle, setCardTitle] = useState('');\n  const [cardBoxTitle, setCardBoxTitle] = useState('');\n\n  useEffect(() => {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []);\n\n  // const onDragStart = (result: any) => {\n  //   setIsDragging(true);\n  //   if (cardTitle.length < 1) {\n  //     setIsAdding(false);\n  //   }\n  // };\n\n  // const onDragEnd = (result: any) => {\n  //   setIsDragging(false);\n  //   props.onDragEnd(result);\n  // };\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column.id, cardTitle);\n      setCardTitle('');\n    }\n    setIsAdding(false);\n  };\n\n  return (\n    <div className=\"card-body\">\n      <Droppable droppableId={props.column.id}>\n        {(provided: any, snapshot: any) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            {props.column.cards.map((card: any, index: any) => {\n              return (\n                <Draggable key={card.id} draggableId={card.id} index={index}>\n                  {(provided: any, snapshot: any) => (\n                    <Card\n                      card={card}\n                      provided={provided}\n                      isDragging={snapshot.isDragging}\n                    />\n                  )}\n                </Draggable>\n              );\n            })}\n            {isDragging ? (\n              ''\n            ) : isAdding ? (\n              <Zoom in={isAdding}>\n                <div className=\"h-top flex-center mb-25px\">\n                  <input\n                    className=\"box-shadow-1 w-100per add-card-title\"\n                    value={cardTitle}\n                    autoFocus\n                    onBlur={() => handleAddCardBlur()}\n                    onKeyDown={(event) => handleKeyDownForAddCard(event)}\n                    onChange={(e) => setCardTitle(e.target.value)}\n                  ></input>\n                </div>\n              </Zoom>\n            ) : (\n              <div className=\"h-top flex-center mb-25px cursor-pointer\">\n                <i\n                  onClick={() => handleAddCard()}\n                  className=\"add-card-icon box-shadow-1 fas fa-plus\"\n                ></i>\n              </div>\n            )}\n            {props.column.cards.length === 0 && (\n              <div className=\"no-task flex-center\">\n                <div>\n                  <i className=\"far fa-check-circle\"></i>\n                </div>\n                <div>No Task</div>\n                <div>Drag tasks here</div>\n                <div>or click + to add new tasks</div>\n              </div>\n            )}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n}\nexport default CardBody;\n"]},"metadata":{},"sourceType":"module"}