{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nvar StyledMenu = withStyles({\n  paper: {\n    border: '1px solid rgb(239, 243, 244)'\n  }\n})(function (props) {\n  return __jsx(Menu, _extends({\n    elevation: 0,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    }\n  }, props));\n});\n\nfunction CardHead(props) {\n  var _useState = useState(false),\n      isCardBoxTileChanging = _useState[0],\n      setIsCardBoxTileChanging = _useState[1];\n\n  var _useState2 = useState(props.column.title),\n      cardBoxTitle = _useState2[0],\n      setCardBoxTitle = _useState2[1];\n\n  var _useState3 = useState(false),\n      showAngle = _useState3[0],\n      setShowAngle = _useState3[1];\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var handleCardBoxTitleBlur = function handleCardBoxTitleBlur() {};\n\n  var handleKeyDownForCardBoxTitle = function handleKeyDownForCardBoxTitle(event) {\n    if (event.key === 'Enter') {\n      handleCardBoxTitleSubmit();\n    }\n  };\n\n  var handleCardBoxTitleSubmit = function handleCardBoxTitleSubmit() {\n    if (cardBoxTitle.trim().length > 0) {\n      props.updateColumnTitle(props.column._id, cardBoxTitle);\n    }\n\n    setIsCardBoxTileChanging(false);\n  };\n\n  var handleDeleteColClick = function handleDeleteColClick() {\n    props.deleteColumn(props.column._id);\n    handleClose();\n  };\n\n  var iconElement = null;\n\n  switch (true) {\n    case props.column.title.toLowerCase().includes('plan'):\n      iconElement = __jsx(\"i\", {\n        className: \"far fa-lightbulb\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('progress'):\n      iconElement = __jsx(\"i\", {\n        className: \"fas fa-spinner\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('done'):\n      iconElement = __jsx(\"i\", {\n        className: \"far fa-check-circle\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('complete'):\n      iconElement = __jsx(\"i\", {\n        className: \"far fa-check-circle\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('task'):\n      iconElement = __jsx(\"i\", {\n        className: \"fas fa-tasks\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('step'):\n      iconElement = __jsx(\"i\", {\n        className: \"fas fa-walking\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('archive'):\n      iconElement = __jsx(\"i\", {\n        className: \"fas fa-archive\"\n      });\n      break;\n\n    default:\n      iconElement = __jsx(\"i\", {\n        className: \"fas fa-bolt\"\n      });\n  }\n\n  return __jsx(React.Fragment, null, props.column._id === props.archiveColumnId ? __jsx(\"div\", {\n    className: \"subtitle-box h-top bg-grey-2\"\n  }, __jsx(\"div\", {\n    className: \"icon-box\"\n  }, iconElement), __jsx(\"div\", {\n    className: \"section-title w-60per h-top\"\n  }, __jsx(\"div\", {\n    className: \"p-10px\"\n  }, props.column.title)), __jsx(\"div\", {\n    className: \"card-head-angle\"\n  }), __jsx(\"div\", {\n    className: \"cards-num flex-center\"\n  }, props.column.cards.length)) : __jsx(\"div\", {\n    className: \"subtitle-box h-top bg-head-\".concat(props.column.colorIndex % 7, \" text-white\"),\n    onMouseOver: function onMouseOver() {\n      return setShowAngle(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setShowAngle(false);\n    }\n  }, __jsx(\"div\", _extends({}, props.dragHandleProps, {\n    className: \"icon-box\"\n  }), iconElement), __jsx(\"div\", {\n    onClick: function onClick() {\n      return setIsCardBoxTileChanging(true);\n    },\n    className: \"section-title w-60per h-top cursor-text\"\n  }, isCardBoxTileChanging ? __jsx(\"div\", {\n    className: \"h-top flex-center w-90per\",\n    onBlur: function onBlur() {\n      return handleCardBoxTitleBlur();\n    }\n  }, __jsx(\"input\", {\n    className: \"w-100per change-section-title\",\n    value: cardBoxTitle,\n    autoFocus: true,\n    onKeyDown: function onKeyDown(event) {\n      return handleKeyDownForCardBoxTitle(event);\n    },\n    onBlur: function onBlur() {\n      return setIsCardBoxTileChanging(false);\n    },\n    onChange: function onChange(e) {\n      if (e.target.value.trim().length < 1) {\n        setCardBoxTitle(e.target.value.trim());\n      } else {\n        setCardBoxTitle(e.target.value);\n      }\n    }\n  })) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"p-10px\"\n  }, props.column.title))), __jsx(\"div\", {\n    className: \"card-head-angle cursor-pointer\"\n  }, !isCardBoxTileChanging && showAngle && __jsx(Tooltip, {\n    title: \"Click to delete a section\",\n    arrow: true\n  }, __jsx(\"i\", {\n    onClick: handleClick,\n    className: \"fas fa-angle-down\"\n  })), __jsx(StyledMenu, {\n    id: \"delete-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, __jsx(MenuItem, {\n    onClick: function onClick() {\n      return handleDeleteColClick();\n    }\n  }, __jsx(ListItemText, {\n    primary: \"Delete\"\n  })))), __jsx(\"div\", {\n    className: \"cards-num flex-center\"\n  }, props.column.cards.length)));\n}\n\nexport default CardHead;","map":null,"metadata":{},"sourceType":"module"}