{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props) {\n  const {\n    0: cards,\n    1: setCards\n  } = useState([]);\n  const {\n    0: isAdding,\n    1: setIsAdding\n  } = useState(false);\n  const {\n    0: isDragging,\n    1: setIsDragging\n  } = useState(false);\n  const {\n    0: cardTitle,\n    1: setCardTitle\n  } = useState('');\n  const {\n    0: cardBoxTitle,\n    1: setCardBoxTitle\n  } = useState('');\n  useEffect(() => {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []);\n\n  const getItemStyle = (isDragging, draggableStyle) => _objectSpread(_objectSpread({\n    userSelect: 'none',\n    padding: '15px',\n    margin: '5px 10px',\n    border: isDragging ? '2px solid rgb(0, 170, 255)' : '1px solid rgb(225,225,225)',\n    borderRadius: '10px',\n    boxShadow: 'rgba(0, 0, 0, 0.02) 0px 0px 0px 1px rgba(0, 0, 0, 0.05), 0px 1px 2px 0px, rgba(0, 0, 0, 0.05) 0px 2px 8px 0px',\n    background: isDragging ? 'rgb(241,251,255)' : 'white'\n  }, draggableStyle), {}, {\n    height: isDragging ? '100px' : '150px'\n  });\n\n  const onDragStart = result => {\n    setIsDragging(true);\n\n    if (cardTitle.length < 1) {\n      setIsAdding(false);\n    }\n  };\n\n  const onDragEnd = result => {\n    setIsDragging(false);\n    props.onDragEnd(result);\n  };\n\n  const handleAddCard = () => {\n    setIsAdding(true); // setCards([...cards, 1]);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = event => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      // setCards([...cards, { cardTitle }] as any);\n      props.addCard(props.column.id, {\n        cardTitle\n      });\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  return __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(DragDropContext, {\n    onDragEnd: props.onDragEnd,\n    onDragStart: onDragStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(Droppable, {\n    type: \"ROW\",\n    droppableId: props.column.id,\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), props.column.cards.map((card, index) => {\n    return __jsx(Draggable, {\n      key: index,\n      draggableId: index.toString(),\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, (provided, snapshot) => __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }), __jsx(Card, {\n      cardTitle: card.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    })));\n  }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n    in: isAdding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"h-top flex-center mb-25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    className: \"box-shadow-1 w-100per add-card-title\",\n    value: cardTitle,\n    autoFocus: true,\n    onBlur: () => handleAddCardBlur(),\n    onKeyDown: event => handleKeyDownForAddCard(event),\n    onChange: e => setCardTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }))) : __jsx(\"div\", {\n    className: \"h-top flex-center mb-25px cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    onClick: () => handleAddCard(),\n    className: \"add-card-icon box-shadow-1 fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  })), provided.placeholder))));\n}\n\nexport default CardBody;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx"],"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Card","Zoom","CardBody","props","cards","setCards","isAdding","setIsAdding","isDragging","setIsDragging","cardTitle","setCardTitle","cardBoxTitle","setCardBoxTitle","getItemStyle","draggableStyle","userSelect","padding","margin","border","borderRadius","boxShadow","background","height","onDragStart","result","length","onDragEnd","handleAddCard","handleAddCardBlur","handleKeyDownForAddCard","event","key","handleCardTitleSubmit","addCard","column","id","provided","snapshot","innerRef","droppableProps","map","card","index","toString","draggableProps","dragHandleProps","style","e","target","value","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props: any) {\n  const [cards, setCards] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cardTitle, setCardTitle] = useState('');\n  const [cardBoxTitle, setCardBoxTitle] = useState('');\n\n  useEffect(() => {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []);\n\n  const getItemStyle = (isDragging: any, draggableStyle: any) => ({\n    userSelect: 'none',\n    padding: '15px',\n    margin: '5px 10px',\n    border: isDragging\n      ? '2px solid rgb(0, 170, 255)'\n      : '1px solid rgb(225,225,225)',\n    borderRadius: '10px',\n    boxShadow:\n      'rgba(0, 0, 0, 0.02) 0px 0px 0px 1px rgba(0, 0, 0, 0.05), 0px 1px 2px 0px, rgba(0, 0, 0, 0.05) 0px 2px 8px 0px',\n    background: isDragging ? 'rgb(241,251,255)' : 'white',\n    ...draggableStyle,\n    height: isDragging ? '100px' : '150px',\n  });\n\n  const onDragStart = (result: any) => {\n    setIsDragging(true);\n    if (cardTitle.length < 1) {\n      setIsAdding(false);\n    }\n  };\n\n  const onDragEnd = (result: any) => {\n    setIsDragging(false);\n    props.onDragEnd(result);\n  };\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n    // setCards([...cards, 1]);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      // setCards([...cards, { cardTitle }] as any);\n      props.addCard(props.column.id, { cardTitle });\n      setCardTitle('');\n    }\n    setIsAdding(false);\n  };\n\n  return (\n    <div className=\"card-body\">\n      <DragDropContext onDragEnd={props.onDragEnd} onDragStart={onDragStart}>\n        <Droppable\n          type=\"ROW\"\n          droppableId={props.column.id}\n          direction=\"vertical\"\n        >\n          {(provided: any, snapshot: any) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {props.column.cards.map((card: any, index: any) => {\n                return (\n                  <Draggable\n                    key={index}\n                    draggableId={index.toString()}\n                    index={index}\n                  >\n                    {(provided: any, snapshot: any) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        <Card cardTitle={card.cardTitle} />\n                      </div>\n                    )}\n                  </Draggable>\n                );\n              })}\n              {isDragging ? (\n                ''\n              ) : isAdding ? (\n                <Zoom in={isAdding}>\n                  <div className=\"h-top flex-center mb-25px\">\n                    <input\n                      className=\"box-shadow-1 w-100per add-card-title\"\n                      value={cardTitle}\n                      autoFocus\n                      onBlur={() => handleAddCardBlur()}\n                      onKeyDown={(event) => handleKeyDownForAddCard(event)}\n                      onChange={(e) => setCardTitle(e.target.value)}\n                    ></input>\n                  </div>\n                </Zoom>\n              ) : (\n                <div className=\"h-top flex-center mb-25px cursor-pointer\">\n                  <i\n                    onClick={() => handleAddCard()}\n                    className=\"add-card-icon box-shadow-1 fas fa-plus\"\n                  ></i>\n                </div>\n              )}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n}\nexport default CardBody;\n"]},"metadata":{},"sourceType":"module"}