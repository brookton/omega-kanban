{"ast":null,"code":"import Router from '../../middleware/models/router';\nimport Column from '../../middleware/models/column';\nimport Card from '../../middleware/models/card';\n\nrequire('../../middleware/db/mongoose');\n\nexport default (async (request, response) => {\n  const {\n    projectId,\n    columnId\n  } = request.body;\n\n  try {\n    const project = await Router.findOne({\n      _id: projectId\n    });\n    const newProject = project.columnOrder.map(item => {\n      return item.toString() !== columnId;\n    });\n    project.save();\n    console.log(newProject);\n    await Column.deleteOne({\n      columnId\n    });\n    await Card.deleteMany({\n      columnId\n    });\n    return response.status(201).json({\n      success: true,\n      message: 'successfully deleted'\n    });\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to delete a column'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/pages/api/delete-column.tsx"],"names":["Router","Column","Card","require","request","response","projectId","columnId","body","project","findOne","_id","newProject","columnOrder","map","item","toString","save","console","log","deleteOne","deleteMany","status","json","success","message","e"],"mappings":"AACA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;;AACAC,OAAO,CAAC,8BAAD,CAAP;;AAEA,gBAAe,OAAOC,OAAP,EAAgCC,QAAhC,KAA8D;AAC3E,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BH,OAAO,CAACI,IAAxC;;AACA,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMT,MAAM,CAACU,OAAP,CAAe;AAAEC,MAAAA,GAAG,EAAEL;AAAP,KAAf,CAAtB;AACA,UAAMM,UAAU,GAAGH,OAAO,CAACI,WAAR,CAAoBC,GAApB,CAAyBC,IAAD,IAAkB;AAC3D,aAAOA,IAAI,CAACC,QAAL,OAAoBT,QAA3B;AACD,KAFkB,CAAnB;AAGAE,IAAAA,OAAO,CAACQ,IAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,UAAMX,MAAM,CAACmB,SAAP,CAAiB;AAAEb,MAAAA;AAAF,KAAjB,CAAN;AACA,UAAML,IAAI,CAACmB,UAAL,CAAgB;AAAEd,MAAAA;AAAF,KAAhB,CAAN;AAEA,WAAOF,QAAQ,CACZiB,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAFD,CAAP;AAGD,GAbD,CAaE,OAAOC,CAAP,EAAU;AACV,WAAOrB,QAAQ,CACZiB,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAFD,CAAP;AAGD;AACF,CApBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport Router from '../../middleware/models/router';\nimport Column from '../../middleware/models/column';\nimport Card from '../../middleware/models/card';\nrequire('../../middleware/db/mongoose');\n\nexport default async (request: NextApiRequest, response: NextApiResponse) => {\n  const { projectId, columnId } = request.body;\n  try {\n    const project = await Router.findOne({ _id: projectId });\n    const newProject = project.columnOrder.map((item: object) => {\n      return item.toString() !== columnId;\n    });\n    project.save();\n    console.log(newProject);\n    await Column.deleteOne({ columnId });\n    await Card.deleteMany({ columnId });\n\n    return response\n      .status(201)\n      .json({ success: true, message: 'successfully deleted' });\n  } catch (e) {\n    return response\n      .status(500)\n      .json({ success: false, message: 'failed to delete a column' });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}