{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Checklist from './checklist';\nimport CardHeader from './card-header';\nimport CardNote from './card-note';\nimport DueDate from './due-date';\nimport CardInfo from './card-info';\nimport CardDetailHead from './card-detail-head';\nimport Activity from './activity';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    backdrop: {\n      backgroundColor: 'rgb(144,144,144,0.6)'\n    }\n  });\n});\n\nfunction CardModal(props) {\n  var _props$currentCard;\n\n  var classes = useStyles();\n\n  var _useState = useState('delete'),\n      category = _useState[0],\n      setCategory = _useState[1];\n\n  var _useState2 = useState(false),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setCategory('delete');\n    setOpen(false);\n  };\n\n  var handleDeleteBtn = function handleDeleteBtn() {\n    props.deleteCard(props.currentColumn._id, props.currentCard._id);\n    handleClose();\n    props.handleModalClose();\n  };\n\n  var handleArchiveBtn = function handleArchiveBtn() {\n    var newCard = {\n      _id: props.currentCard._id,\n      columnId: 'archive',\n      cardTitle: undefined,\n      note: undefined,\n      isCardCompleted: undefined,\n      isArchived: true,\n      dueDate: null\n    }; // props.updateCard(props.currentColumn._id, newCard);\n\n    props.archiveCard(props.currentColumn._id, props.currentCard._id);\n    handleClose();\n    props.handleModalClose();\n  };\n\n  var modalElement = null;\n\n  switch (category) {\n    case 'archive':\n      modalElement = __jsx(\"div\", {\n        className: \"modal-delete\"\n      }, __jsx(\"div\", {\n        className: \"delete-btn-desc text-center\"\n      }, \"You cannot redo this.\"), __jsx(\"div\", {\n        className: \"delete-btn-desc text-center\"\n      }, \"Do you want to archive this card?\"), __jsx(\"div\", {\n        className: \"delete-btn-box\"\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return handleArchiveBtn();\n        },\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"primary\"\n      }, \"Archive\"), __jsx(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: function onClick() {\n          return handleClose();\n        }\n      }, \"Cancel\")));\n      break;\n\n    default:\n      modalElement = __jsx(\"div\", {\n        className: \"modal-delete\"\n      }, __jsx(\"div\", {\n        className: \"delete-btn-desc\"\n      }, \"Do you want to delete this card?\"), __jsx(\"div\", {\n        className: \"delete-btn-box\"\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return handleDeleteBtn();\n        },\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"secondary\"\n      }, \"Delete\"), __jsx(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: function onClick() {\n          return handleClose();\n        }\n      }, \"Cancel\")));\n      break;\n  }\n\n  return __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: props.open,\n    onClose: props.handleModalClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500,\n      classes: {\n        root: classes.backdrop\n      }\n    }\n  }, __jsx(Fade, {\n    \"in\": props.open\n  }, __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"modal-paper\"\n  }, __jsx(CardHeader, _extends({}, props, {\n    setCategory: setCategory,\n    handleOpen: handleOpen\n  })), __jsx(\"div\", {\n    className: \"card-detail-body\"\n  }, __jsx(\"div\", {\n    className: \"card-detail-left\"\n  }, __jsx(CardDetailHead, props), __jsx(\"div\", null, __jsx(CardNote, props), __jsx(Checklist, props), __jsx(Activity, props))), __jsx(\"div\", {\n    className: \"card-detail-right bg-grey-1\"\n  }, __jsx(DueDate, props), __jsx(CardInfo, props), !((_props$currentCard = props.currentCard) === null || _props$currentCard === void 0 ? void 0 : _props$currentCard.isArchived) && __jsx(\"div\", {\n    className: \"flex-center\"\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return handleOpen();\n    },\n    className: \"delete-card-btn border-none text-red cursor-pointer\"\n  }, \"Delete\"))))), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    }\n  }, __jsx(Fade, {\n    \"in\": open\n  }, modalElement)))));\n}\n\nexport default CardModal;","map":null,"metadata":{},"sourceType":"module"}