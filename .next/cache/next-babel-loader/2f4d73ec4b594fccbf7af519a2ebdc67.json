{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/top.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nexport default function Top(props) {\n  const {\n    0: isProjectNameChanging,\n    1: setIsProjectNameChanging\n  } = useState(false);\n  const {\n    0: projectName,\n    1: setProjectName\n  } = useState(props.projectName);\n\n  const handleProjectNameChange = () => {};\n\n  const handleKeyDownForProjectName = () => {};\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"top h-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    onClick: () => props.setView('project-name'),\n    className: \"top-home cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    onClick: e => setIsProjectNameChanging(true),\n    className: \"top-title cursor-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, isProjectNameChanging ? __jsx(\"input\", {\n    className: \"w-100per change-section-title\",\n    value: projectName,\n    autoFocus: true,\n    onKeyDown: event => handleKeyDownForProjectName(event),\n    onBlur: () => setIsProjectNameChanging(false),\n    onChange: e => {\n      if (e.target.value.trim().length < 1) {\n        setProjectName(e.target.value.trim());\n      } else {\n        setProjectName(e.target.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, props.projectName))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/top.tsx"],"names":["React","useState","Top","props","isProjectNameChanging","setIsProjectNameChanging","projectName","setProjectName","handleProjectNameChange","handleKeyDownForProjectName","setView","e","event","target","value","trim","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAyB;AACtC,QAAM;AAAA,OAACC,qBAAD;AAAA,OAAwBC;AAAxB,MAAoDJ,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM;AAAA,OAACK,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAACE,KAAK,CAACG,WAAP,CAA9C;;AAEA,QAAME,uBAAuB,GAAG,MAAM,CAAE,CAAxC;;AACA,QAAMC,2BAA2B,GAAG,MAAM,CAAE,CAA5C;;AACA,SACE,4BACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAMN,KAAK,CAACO,OAAN,CAAc,cAAd,CADjB;AAEE,IAAA,SAAS,EAAC,yBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE;AACE,IAAA,OAAO,EAAGC,CAAD,IAAON,wBAAwB,CAAC,IAAD,CAD1C;AAEE,IAAA,SAAS,EAAC,uBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGD,qBAAqB,GACpB;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,KAAK,EAAEE,WAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,SAAS,EAAGM,KAAD,IAAWH,2BAA2B,CAACG,KAAD,CAJnD;AAKE,IAAA,MAAM,EAAE,MAAMP,wBAAwB,CAAC,KAAD,CALxC;AAME,IAAA,QAAQ,EAAGM,CAAD,IAAO;AACf,UAAIA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,GAAsBC,MAAtB,GAA+B,CAAnC,EAAsC;AACpCT,QAAAA,cAAc,CAACI,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,EAAD,CAAd;AACD,OAFD,MAEO;AACLR,QAAAA,cAAc,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;AACD;AACF,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoB,GAgBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,KAAK,CAACG,WAAZ,CApBJ,CAPF,CADF,CADF;AAmCD","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Top(props: any) {\n  const [isProjectNameChanging, setIsProjectNameChanging] = useState(false);\n  const [projectName, setProjectName] = useState(props.projectName);\n\n  const handleProjectNameChange = () => {};\n  const handleKeyDownForProjectName = () => {};\n  return (\n    <>\n      <div className=\"top h-top\">\n        <div\n          onClick={() => props.setView('project-name')}\n          className=\"top-home cursor-pointer\"\n        >\n          <i className=\"fas fa-home\"></i>\n        </div>\n        <div\n          onClick={(e) => setIsProjectNameChanging(true)}\n          className=\"top-title cursor-text\"\n        >\n          {isProjectNameChanging ? (\n            <input\n              className=\"w-100per change-section-title\"\n              value={projectName}\n              autoFocus\n              onKeyDown={(event) => handleKeyDownForProjectName(event)}\n              onBlur={() => setIsProjectNameChanging(false)}\n              onChange={(e) => {\n                if (e.target.value.trim().length < 1) {\n                  setProjectName(e.target.value.trim());\n                } else {\n                  setProjectName(e.target.value);\n                }\n              }}\n            ></input>\n          ) : (\n            <div>{props.projectName}</div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}