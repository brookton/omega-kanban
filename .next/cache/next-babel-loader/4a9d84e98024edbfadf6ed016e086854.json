{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/project-name.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useRouter } from 'next/router';\n\nconst randomWords = require('random-words');\n\nfunction ProjectName() {\n  const router = useRouter();\n  const {\n    0: projectName,\n    1: setProjectName\n  } = useState('');\n  const {\n    0: isBtnClick,\n    1: setIsBtnClick\n  } = useState(false);\n  const {\n    0: errMessage,\n    1: setErrMessage\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const addRouter = project => {\n    fetch(`/api/add-router`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        project\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        router.replace(`/${data.data._id}/${data.data.project}`); // setIsBtnClick(false);\n      } else {\n        setTimeout(() => {\n          setError(false);\n          setMessage('');\n        }, 500);\n        setError(true);\n        setMessage('failed to create a project');\n        setIsBtnClick(false);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while adding a route:${err.message}`);\n    });\n  };\n\n  const handleStartBtnClick = () => {\n    setIsBtnClick(true);\n\n    if (projectName.length === 0) {\n      addRouter(randomWords());\n    } else {\n      addRouter(projectName);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"home flex-center bg-head-0 flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, isBtnClick ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Creating a new board...\") : __jsx(\"form\", {\n    className: \"project-name\",\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: () => handleStartBtnClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    className: \"project-name-text\",\n    id: \"standard-basic\",\n    label: \"project name\",\n    error: error,\n    disabled: isBtnClick,\n    value: projectName,\n    helperText: errMessage,\n    onChange: e => setProjectName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    disabled: isBtnClick,\n    onClick: () => handleStartBtnClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Start\")));\n}\n\nexport default ProjectName;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/project-name.tsx"],"names":["React","useState","TextField","Button","useRouter","randomWords","require","ProjectName","router","projectName","setProjectName","isBtnClick","setIsBtnClick","errMessage","setErrMessage","error","setError","addRouter","project","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","replace","_id","setTimeout","setMessage","catch","err","console","message","handleStartBtnClick","length","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IRouterData from './interfaces/irouterdata';\nimport { useRouter } from 'next/router';\n\nconst randomWords = require('random-words' as string);\n\nfunction ProjectName() {\n  const router = useRouter();\n  const [projectName, setProjectName] = useState<string>('');\n  const [isBtnClick, setIsBtnClick] = useState(false);\n  const [errMessage, setErrMessage] = useState('');\n  const [error, setError] = useState(false);\n\n  const addRouter = (project: String) => {\n    fetch(`/api/add-router`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        project,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: IRouterData) => {\n        if (data.success) {\n          router.replace(`/${data.data._id}/${data.data.project}`);\n          // setIsBtnClick(false);\n        } else {\n          setTimeout(() => {\n            setError(false);\n            setMessage('');\n          }, 500);\n          setError(true);\n          setMessage('failed to create a project');\n          setIsBtnClick(false);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while adding a route:${err.message}`\n        );\n      });\n  };\n\n  const handleStartBtnClick = () => {\n    setIsBtnClick(true);\n    if (projectName.length === 0) {\n      addRouter(randomWords());\n    } else {\n      addRouter(projectName);\n    }\n  };\n\n  return (\n    <div className=\"home flex-center bg-head-0 flex-column\">\n      {isBtnClick ? (\n        <div>Creating a new board...</div>\n      ) : (\n        <form\n          className=\"project-name\"\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={() => handleStartBtnClick()}\n        >\n          <TextField\n            className=\"project-name-text\"\n            id=\"standard-basic\"\n            label=\"project name\"\n            error={error}\n            disabled={isBtnClick}\n            value={projectName}\n            helperText={errMessage}\n            onChange={(e) => setProjectName(e.target.value)}\n          />\n          <Button disabled={isBtnClick} onClick={() => handleStartBtnClick()}>\n            Start\n          </Button>\n        </form>\n      )}\n    </div>\n  );\n}\nexport default ProjectName;\n"]},"metadata":{},"sourceType":"module"}