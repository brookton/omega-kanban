{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport CardBox from './card-box';\nimport AddSection from './add-section';\n\nfunction Board(props) {\n  const {\n    0: cardBoxes,\n    1: setCardBoxes\n  } = useState([{\n    title: 'progress'\n  }]);\n\n  const onBeforeCapture = () => {\n    /*...*/\n  };\n\n  const onBeforeDragStart = () => {\n    /*...*/\n  };\n\n  const onDragStart = () => {\n    /*...*/\n  };\n\n  const onDragUpdate = () => {\n    /*...*/\n  };\n\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(cardBoxes, result.source.index, result.destination.index);\n    setCardBoxes(items);\n    this.setState({\n      items\n    });\n  };\n\n  const getItemStyle = (isDragging, draggableStyle) => ({\n    display: 'flex'\n  });\n\n  const createCardBox = cardBox => {\n    setCardBoxes([...cardBoxes, cardBox]);\n  };\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Top, {\n    projectName: props.projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(DragDropContext, {\n    onBeforeCapture: onBeforeCapture,\n    onBeforeDragStart: onBeforeDragStart,\n    onDragStart: onDragStart,\n    onDragUpdate: onDragUpdate,\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Droppable, {\n    droppableId: \"droppable-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    style: getItemStyle(snapshot.isDragging, provided.droppableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), cardBoxes.map((cardBox, index) => {\n    console.log(cardBox);\n    return __jsx(Draggable, {\n      key: index,\n      draggableId: index.toString(),\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, (provided, snapshot) => __jsx(React.Fragment, null, __jsx(CardBox, {\n      reorder: reorder,\n      cardBoxTitle: cardBox.title,\n      innerRef: provided.innerRef,\n      draggableProps: provided.draggableProps,\n      dragHandleProps: provided.dragHandleProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 27\n      }\n    }), provided.placeholder));\n  }), provided.placeholder))), __jsx(AddSection, {\n    createCardBox: createCardBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx"],"names":["React","useState","DragDropContext","Droppable","Draggable","Top","CardBox","AddSection","Board","props","cardBoxes","setCardBoxes","title","onBeforeCapture","onBeforeDragStart","onDragStart","onDragUpdate","onDragEnd","result","destination","items","reorder","source","index","setState","getItemStyle","isDragging","draggableStyle","display","createCardBox","cardBox","list","startIndex","endIndex","Array","from","removed","splice","projectName","provided","snapshot","innerRef","droppableProps","style","map","console","log","toString","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport CardBox from './card-box';\nimport AddSection from './add-section';\n\nfunction Board(props: any) {\n  const [cardBoxes, setCardBoxes] = useState([{ title: 'progress' }]);\n  const onBeforeCapture = () => {\n    /*...*/\n  };\n\n  const onBeforeDragStart = () => {\n    /*...*/\n  };\n\n  const onDragStart = () => {\n    /*...*/\n  };\n  const onDragUpdate = () => {\n    /*...*/\n  };\n  const onDragEnd = (result: any) => {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      cardBoxes,\n      result.source.index,\n      result.destination.index\n    );\n    setCardBoxes(items);\n    this.setState({\n      items,\n    });\n  };\n\n  const getItemStyle = (isDragging: any, draggableStyle: any) => ({\n    display: 'flex',\n  });\n\n  const createCardBox = (cardBox: any) => {\n    setCardBoxes([...cardBoxes, cardBox] as any);\n  };\n\n  const reorder = (list: any, startIndex: any, endIndex: any) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  return (\n    <>\n      <Top projectName={props.projectName} />\n      <div className=\"board\">\n        <DragDropContext\n          onBeforeCapture={onBeforeCapture}\n          onBeforeDragStart={onBeforeDragStart}\n          onDragStart={onDragStart}\n          onDragUpdate={onDragUpdate}\n          onDragEnd={onDragEnd}\n        >\n          <Droppable droppableId=\"droppable-1\">\n            {(provided: any, snapshot: any) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.droppableProps.style\n                )}\n              >\n                {cardBoxes.map((cardBox: any, index: any) => {\n                  console.log(cardBox);\n                  return (\n                    <Draggable\n                      key={index}\n                      draggableId={index.toString()}\n                      index={index}\n                    >\n                      {(provided: any, snapshot: any) => (\n                        <>\n                          <CardBox\n                            reorder={reorder}\n                            cardBoxTitle={cardBox.title}\n                            innerRef={provided.innerRef}\n                            draggableProps={provided.draggableProps}\n                            dragHandleProps={provided.dragHandleProps}\n                          />\n                          {provided.placeholder}\n                        </>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <AddSection createCardBox={createCardBox} />\n      </div>\n    </>\n  );\n}\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}