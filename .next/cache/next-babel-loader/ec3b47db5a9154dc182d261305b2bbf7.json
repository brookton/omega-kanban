{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid rgb(239, 243, 244)'\n  }\n})(props => __jsx(Menu, _extends({\n  elevation: 0,\n  getContentAnchorEl: null,\n  anchorOrigin: {\n    vertical: 'bottom',\n    horizontal: 'center'\n  },\n  transformOrigin: {\n    vertical: 'top',\n    horizontal: 'center'\n  }\n}, props)));\n\nfunction CardHead(props) {\n  const {\n    0: isCardBoxTileChanging,\n    1: setIsCardBoxTileChanging\n  } = useState(false);\n  const {\n    0: cardBoxTitle,\n    1: setCardBoxTitle\n  } = useState(props.column.title);\n  const {\n    0: showAngle,\n    1: setShowAngle\n  } = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleCardBoxTitleBlur = () => {};\n\n  const handleKeyDownForCardBoxTitle = event => {\n    if (event.key === 'Enter') {\n      handleCardBoxTitleSubmit();\n    }\n  };\n\n  const handleCardBoxTitleSubmit = () => {\n    if (cardBoxTitle.trim().length > 0) {\n      props.updateSectionTitle(props.column.id, cardBoxTitle);\n    }\n\n    setIsCardBoxTileChanging(false);\n  };\n\n  const handleDeleteColClick = () => {\n    props.deleteColumn(props.column.id);\n    handleClose();\n  };\n\n  let iconElement = null;\n\n  switch (true) {\n    case props.column.title.toLowerCase().includes('plan'):\n      iconElement = __jsx(\"i\", {\n        className: \"far fa-lightbulb\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('progress'):\n      iconElement = __jsx(\"i\", {\n        className: \"fas fa-spinner\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('done'):\n      iconElement = __jsx(\"i\", {\n        className: \"far fa-check-circle\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('complete'):\n      iconElement = __jsx(\"i\", {\n        className: \"far fa-check-circle\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('task'):\n      iconElement = __jsx(\"i\", {\n        className: \"fas fa-tasks\"\n      });\n      break;\n\n    case props.column.title.toLowerCase().includes('step'):\n      iconElement = __jsx(\"i\", {\n        className: \"fas fa-walking\"\n      });\n      break;\n\n    default:\n      iconElement = __jsx(\"i\", {\n        className: \"fas fa-bolt\"\n      });\n  }\n\n  return __jsx(\"div\", {\n    className: `subtitle-box h-top bg-head-${props.column.colorIndex % 7} text-white`,\n    onMouseOver: () => setShowAngle(true),\n    onMouseLeave: () => setShowAngle(false)\n  }, __jsx(\"div\", _extends({}, props.dragHandleProps, {\n    className: \"icon-box\"\n  }), iconElement), __jsx(\"div\", {\n    onClick: () => setIsCardBoxTileChanging(true),\n    className: \"section-title w-60per h-top cursor-text\"\n  }, isCardBoxTileChanging ? __jsx(\"div\", {\n    className: \"h-top flex-center w-90per\",\n    onBlur: () => handleCardBoxTitleBlur()\n  }, __jsx(\"input\", {\n    className: \"w-100per change-section-title\",\n    value: cardBoxTitle,\n    autoFocus: true,\n    onKeyDown: event => handleKeyDownForCardBoxTitle(event),\n    onBlur: () => setIsCardBoxTileChanging(false),\n    onChange: e => {\n      if (e.target.value.trim().length < 1) {\n        setCardBoxTitle(e.target.value.trim());\n      } else {\n        setCardBoxTitle(e.target.value);\n      }\n    }\n  })) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"p-10px\"\n  }, props.column.title))), __jsx(\"div\", {\n    className: \"card-head-angle cursor-pointer\"\n  }, !isCardBoxTileChanging && showAngle && __jsx(React.Fragment, null, __jsx(\"i\", {\n    onClick: handleClick,\n    className: \"fas fa-angle-down\"\n  })), __jsx(StyledMenu, {\n    id: \"delete-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, __jsx(MenuItem, {\n    onClick: () => handleDeleteColClick()\n  }, __jsx(ListItemText, {\n    primary: \"Delete\"\n  })))), __jsx(\"div\", {\n    className: \"cards-num flex-center\"\n  }, props.column.cards.length));\n}\n\nexport default CardHead;","map":null,"metadata":{},"sourceType":"module"}