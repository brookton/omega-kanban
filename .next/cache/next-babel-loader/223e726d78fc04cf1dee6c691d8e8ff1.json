{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-modal.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    backdrop: {\n      backgroundColor: 'rgb(144,144,144,0.6)'\n    }\n  });\n});\n\nfunction CardModal(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      cardDetailTitle = _useState[0],\n      setCardDetailTitle = _useState[1];\n\n  useEffect(function () {\n    setCardDetailTitle(props.currentCard.cardTitle);\n  }, []);\n\n  var _useState2 = useState(''),\n      note = _useState2[0],\n      setNote = _useState2[1];\n\n  var _useState3 = useState(false),\n      isNoting = _useState3[0],\n      setIsNoting = _useState3[1];\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      console.log(event.target);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: props.open,\n    onClose: props.handleModalClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500,\n      classes: {\n        root: classes.backdrop\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(Fade, {\n    \"in\": props.open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"card-detail-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"complete-btn cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Complete\")), __jsx(\"div\", {\n    className: \"card-detail-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    id: \"transition-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    id: props.card.id,\n    className: \"card-deatil-title border-none\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setCardDetailTitle(e.target.value);\n    },\n    value: cardDetailTitle,\n    onKeyDown: function onKeyDown(e) {\n      return handleKeyDown(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, isNoting ? __jsx(\"input\", {\n    id: props.card.id,\n    className: \"card-deatil-note border-none\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setNote(e.target.value);\n    },\n    value: note,\n    onKeyDown: function onKeyDown(e) {\n      return handleKeyDown(e);\n    },\n    onBlur: function onBlur() {\n      return setIsNoting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }) : __jsx(\"div\", {\n    onClick: function onClick() {\n      return setIsNoting(true);\n    },\n    className: \"card-detail-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"This task has no notes.\")))))));\n}\n\n_s(CardModal, \"6mN79WqsuVMa456JcWvkpKbRc88=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardModal;\nexport default CardModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardModal\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-modal.tsx"],"names":["React","useState","useEffect","Modal","Backdrop","Fade","makeStyles","createStyles","useStyles","theme","modal","display","alignItems","justifyContent","backdrop","backgroundColor","CardModal","props","classes","cardDetailTitle","setCardDetailTitle","currentCard","cardTitle","note","setNote","isNoting","setIsNoting","handleKeyDown","event","key","console","log","target","open","handleModalClose","timeout","root","card","id","e","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { notEqual } from 'assert';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    backdrop: {\n      backgroundColor: 'rgb(144,144,144,0.6)',\n    },\n  })\n);\n\nfunction CardModal(props: any) {\n  const classes = useStyles();\n  const [cardDetailTitle, setCardDetailTitle] = useState('');\n  useEffect(() => {\n    setCardDetailTitle(props.currentCard.cardTitle);\n  }, []);\n  const [note, setNote] = useState('');\n  const [isNoting, setIsNoting] = useState(false);\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === 'Enter') {\n      console.log(event.target);\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.open}\n        onClose={props.handleModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n          classes: {\n            root: classes.backdrop,\n          },\n        }}\n      >\n        <Fade in={props.open}>\n          <div className=\"modal-paper\">\n            <div className=\"card-detail-header\">\n              <button className=\"complete-btn cursor-pointer\">Complete</button>\n            </div>\n            <div className=\"card-detail-left\">\n              <div id=\"transition-modal-title\">\n                <input\n                  id={props.card.id}\n                  className=\"card-deatil-title border-none\"\n                  type=\"text\"\n                  onChange={(e) => setCardDetailTitle(e.target.value)}\n                  value={cardDetailTitle}\n                  onKeyDown={(e) => handleKeyDown(e)}\n                />\n              </div>\n              <div>\n                {isNoting ? (\n                  <input\n                    id={props.card.id}\n                    className=\"card-deatil-note border-none\"\n                    type=\"text\"\n                    onChange={(e) => setNote(e.target.value)}\n                    value={note}\n                    onKeyDown={(e) => handleKeyDown(e)}\n                    onBlur={() => setIsNoting(false)}\n                  />\n                ) : (\n                  <div\n                    onClick={() => setIsNoting(true)}\n                    className=\"card-detail-note\"\n                  >\n                    This task has no notes.\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </>\n  );\n}\nexport default CardModal;\n"]},"metadata":{},"sourceType":"module"}