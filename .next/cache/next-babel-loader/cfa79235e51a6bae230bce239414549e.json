{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props) {\n  // const [cards, setCards] = useState([]);\n  const {\n    0: isAdding,\n    1: setIsAdding\n  } = useState(false);\n  const {\n    0: isDragging,\n    1: setIsDragging\n  } = useState(false);\n  const {\n    0: cardTitle,\n    1: setCardTitle\n  } = useState(''); // const [cardBoxTitle, setCardBoxTitle] = useState('');\n  // useEffect(() => {\n  //   if (props.cardBoxTitle) {\n  //     setCardBoxTitle(props.cardBoxTitle);\n  //   }\n  // }, []);\n  // const onDragStart = (result: any) => {\n  //   setIsDragging(true);\n  //   if (cardTitle.length < 1) {\n  //     setIsAdding(false);\n  //   }\n  // };\n  // const onDragEnd = (result: any) => {\n  //   setIsDragging(false);\n  //   props.onDragEnd(result);\n  // };\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = event => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column.id, cardTitle);\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  return __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Droppable, {\n    droppableId: props.column.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), props.column.cards.map((card, index) => {\n    return __jsx(Draggable, {\n      key: card.id,\n      draggableId: card.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, (provided, snapshot) => __jsx(Card, {\n      card: card,\n      setOpen: props.setOpen,\n      column: props.column,\n      provided: provided,\n      isDragging: snapshot.isDragging,\n      setCardForOpen: props.setCardForOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }));\n  }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n    in: isAdding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"h-top mt-5px flex-center mb-25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    className: \"box-shadow-1 w-100per add-card-title\",\n    value: cardTitle,\n    autoFocus: true,\n    onBlur: () => handleAddCardBlur(),\n    onKeyDown: event => handleKeyDownForAddCard(event),\n    onChange: e => setCardTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }))) : __jsx(\"div\", {\n    className: \"h-top flex-center mb-25px cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, __jsx(\"i\", {\n    onClick: () => handleAddCard(),\n    className: \"add-card-icon box-shadow-1 fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), !isAdding && props.column.cards.length === 0 && __jsx(\"div\", {\n    className: \"no-task flex-center flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    className: \"no-task-check text-grey far fa-check-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    className: \"no-task-title text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"No Task\"), __jsx(\"div\", {\n    className: \"no-task-desc text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Drag tasks here\"), __jsx(\"div\", {\n    className: \"no-task-desc text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"or click + to add new tasks\")), provided.placeholder)));\n}\n\nexport default CardBody;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx"],"names":["React","useState","Droppable","Draggable","Card","Zoom","CardBody","props","isAdding","setIsAdding","isDragging","setIsDragging","cardTitle","setCardTitle","handleAddCard","handleAddCardBlur","length","handleKeyDownForAddCard","event","key","handleCardTitleSubmit","addCard","column","id","provided","snapshot","innerRef","droppableProps","cards","map","card","index","setOpen","setCardForOpen","e","target","value","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props: any) {\n  // const [cards, setCards] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cardTitle, setCardTitle] = useState('');\n  // const [cardBoxTitle, setCardBoxTitle] = useState('');\n\n  // useEffect(() => {\n  //   if (props.cardBoxTitle) {\n  //     setCardBoxTitle(props.cardBoxTitle);\n  //   }\n  // }, []);\n\n  // const onDragStart = (result: any) => {\n  //   setIsDragging(true);\n  //   if (cardTitle.length < 1) {\n  //     setIsAdding(false);\n  //   }\n  // };\n\n  // const onDragEnd = (result: any) => {\n  //   setIsDragging(false);\n  //   props.onDragEnd(result);\n  // };\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column.id, cardTitle);\n      setCardTitle('');\n    }\n    setIsAdding(false);\n  };\n\n  return (\n    <div className=\"card-body\">\n      <Droppable droppableId={props.column.id}>\n        {(provided: any, snapshot: any) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            {props.column.cards.map((card: any, index: any) => {\n              return (\n                <Draggable key={card.id} draggableId={card.id} index={index}>\n                  {(provided: any, snapshot: any) => (\n                    <Card\n                      card={card}\n                      setOpen={props.setOpen}\n                      column={props.column}\n                      provided={provided}\n                      isDragging={snapshot.isDragging}\n                      setCardForOpen={props.setCardForOpen}\n                    />\n                  )}\n                </Draggable>\n              );\n            })}\n            {isDragging ? (\n              ''\n            ) : isAdding ? (\n              <Zoom in={isAdding}>\n                <div className=\"h-top mt-5px flex-center mb-25px\">\n                  <input\n                    className=\"box-shadow-1 w-100per add-card-title\"\n                    value={cardTitle}\n                    autoFocus\n                    onBlur={() => handleAddCardBlur()}\n                    onKeyDown={(event) => handleKeyDownForAddCard(event)}\n                    onChange={(e) => setCardTitle(e.target.value)}\n                  ></input>\n                </div>\n              </Zoom>\n            ) : (\n              <div className=\"h-top flex-center mb-25px cursor-pointer\">\n                <i\n                  onClick={() => handleAddCard()}\n                  className=\"add-card-icon box-shadow-1 fas fa-plus\"\n                ></i>\n              </div>\n            )}\n            {!isAdding && props.column.cards.length === 0 && (\n              <div className=\"no-task flex-center flex-column\">\n                <div>\n                  <i className=\"no-task-check text-grey far fa-check-circle\"></i>\n                </div>\n                <div className=\"no-task-title text-grey\">No Task</div>\n                <div className=\"no-task-desc text-grey\">Drag tasks here</div>\n                <div className=\"no-task-desc text-grey\">\n                  or click + to add new tasks\n                </div>\n              </div>\n            )}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n}\nexport default CardBody;\n"]},"metadata":{},"sourceType":"module"}