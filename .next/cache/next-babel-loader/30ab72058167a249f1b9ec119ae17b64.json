{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-detail-head.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nfunction CardDetailHead(props) {\n  _s();\n\n  var _useState = useState(props.currentCard.cardTitle),\n      cardDetailTitle = _useState[0],\n      setCardDetailTitle = _useState[1];\n\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      var newCard = {\n        _id: props.currentCard._id,\n        cardTitle: cardDetailTitle,\n        note: undefined,\n        isCardCompleted: undefined,\n        isArchived: undefined,\n        dueDate: undefined\n      };\n      props.updateCard(props.currentColumn._id, newCard); // props.updateCardTitle(\n      //   props.currentColumn._id,\n      //   props.currentCard._id,\n      //   cardDetailTitle\n      // );\n    }\n  };\n\n  return __jsx(\"div\", {\n    id: \"transition-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    id: props.currentCard._id,\n    disabled: props.currentCard.isArchived,\n    className: \"card-deatil-title border-none\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setCardDetailTitle(e.target.value);\n    },\n    value: cardDetailTitle,\n    onKeyDown: function onKeyDown(e) {\n      return handleKeyDown(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(CardDetailHead, \"eZYQlU5Xfu/umu2vgpopBT3jYVo=\");\n\n_c = CardDetailHead;\nexport default CardDetailHead;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDetailHead\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-detail-head.tsx"],"names":["React","useState","CardDetailHead","props","currentCard","cardTitle","cardDetailTitle","setCardDetailTitle","handleKeyDown","e","key","newCard","_id","note","undefined","isCardCompleted","isArchived","dueDate","updateCard","currentColumn","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+C,OAA/C;;AAOA,SAASC,cAAT,CAAwBC,KAAxB,EAAqD;AAAA;;AAAA,kBACLF,QAAQ,CACpDE,KAAK,CAACC,WAAN,CAAkBC,SADkC,CADH;AAAA,MAC5CC,eAD4C;AAAA,MAC3BC,kBAD2B;;AAKnD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAsB;AAC1C,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB,UAAMC,OAAO,GAAG;AACdC,QAAAA,GAAG,EAAET,KAAK,CAACC,WAAN,CAAkBQ,GADT;AAEdP,QAAAA,SAAS,EAAEC,eAFG;AAGdO,QAAAA,IAAI,EAAEC,SAHQ;AAIdC,QAAAA,eAAe,EAAED,SAJH;AAKdE,QAAAA,UAAU,EAAEF,SALE;AAMdG,QAAAA,OAAO,EAAEH;AANK,OAAhB;AAQAX,MAAAA,KAAK,CAACe,UAAN,CAAiBf,KAAK,CAACgB,aAAN,CAAoBP,GAArC,EAA0CD,OAA1C,EATqB,CAUrB;AACA;AACA;AACA;AACA;AACD;AACF,GAjBD;;AAkBA,SACE;AAAK,IAAA,EAAE,EAAC,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAER,KAAK,CAACC,WAAN,CAAkBQ,GADxB;AAEE,IAAA,QAAQ,EAAET,KAAK,CAACC,WAAN,CAAkBY,UAF9B;AAGE,IAAA,SAAS,EAAC,+BAHZ;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EAAE,kBAACP,CAAD;AAAA,aAAOF,kBAAkB,CAACE,CAAC,CAACW,MAAF,CAASC,KAAV,CAAzB;AAAA,KALZ;AAME,IAAA,KAAK,EAAEf,eANT;AAOE,IAAA,SAAS,EAAE,mBAACG,CAAD;AAAA,aAAsBD,aAAa,CAACC,CAAD,CAAnC;AAAA,KAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD;;GApCQP,c;;KAAAA,c;AAqCT,eAAeA,cAAf","sourcesContent":["import React, { useState, KeyboardEvent } from 'react';\nimport ICommonProps from './interfaces/icommonprops';\n\ninterface ICardDetailHeadProps extends ICommonProps {\n  updateCard: (columnId: string, card: ICard) => void;\n}\n\nfunction CardDetailHead(props: ICardDetailHeadProps) {\n  const [cardDetailTitle, setCardDetailTitle] = useState(\n    props.currentCard.cardTitle\n  );\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      const newCard = {\n        _id: props.currentCard._id,\n        cardTitle: cardDetailTitle,\n        note: undefined,\n        isCardCompleted: undefined,\n        isArchived: undefined,\n        dueDate: undefined,\n      };\n      props.updateCard(props.currentColumn._id, newCard);\n      // props.updateCardTitle(\n      //   props.currentColumn._id,\n      //   props.currentCard._id,\n      //   cardDetailTitle\n      // );\n    }\n  };\n  return (\n    <div id=\"transition-modal-title\">\n      <input\n        id={props.currentCard._id}\n        disabled={props.currentCard.isArchived}\n        className=\"card-deatil-title border-none\"\n        type=\"text\"\n        onChange={(e) => setCardDetailTitle(e.target.value)}\n        value={cardDetailTitle}\n        onKeyDown={(e: KeyboardEvent) => handleKeyDown(e)}\n      />\n    </div>\n  );\n}\nexport default CardDetailHead;\n"]},"metadata":{},"sourceType":"module"}