{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-box.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBox(props) {\n  const {\n    0: cards,\n    1: setCards\n  } = useState([0]);\n  const {\n    0: isAdding,\n    1: setIsAdding\n  } = useState(false);\n  const {\n    0: isDragging,\n    1: setIsDragging\n  } = useState(false);\n  const {\n    0: cardTitle,\n    1: setCardTitle\n  } = useState('');\n  const {\n    0: isCardBoxTileChanging,\n    1: setIsCardBoxTileChanging\n  } = useState(false);\n  const {\n    0: cardBoxTitle,\n    1: setCardBoxTitle\n  } = useState('');\n  useEffect(() => {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []);\n\n  const getItemStyle = (isDragging, draggableStyle) => _objectSpread({\n    userSelect: 'none',\n    padding: '15px',\n    margin: '5px 10px',\n    border: isDragging ? '2px solid rgb(0, 170, 255)' : '1px solid rgb(225,225,225)',\n    borderRadius: '10px',\n    boxShadow: 'rgba(0, 0, 0, 0.02) 0px 0px 0px 1px rgba(0, 0, 0, 0.05), 0px 1px 2px 0px, rgba(0, 0, 0, 0.05) 0px 2px 8px 0px',\n    background: isDragging ? 'rgb(241,251,255)' : 'white'\n  }, draggableStyle);\n\n  const onDragStart = result => {\n    // dropped outside the list\n    setIsDragging(true);\n\n    if (cardTitle.length < 1) {\n      console.log('aaa');\n      setIsAdding(false);\n    }\n  };\n\n  const onDragEnd = result => {\n    setIsDragging(false); // dropped outside the list\n  };\n\n  const handleAddCard = () => {\n    console.log(1);\n    setIsAdding(true); // setCards([...cards, 1]);\n\n    console.log(cards);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleCardBoxTitleBlur = () => {};\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      setCards([...cards, 1]);\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  const handleCardBoxTitleSubmit = () => {\n    if (cardBoxTitle.trim().length > 0) {// do something\n    }\n\n    setIsCardBoxTileChanging(false);\n  };\n\n  return __jsx(\"div\", _extends({}, props.draggableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"card-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"subtitle-box h-top bg-skyblue text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", _extends({\n    ref: props.innerRef\n  }, props.dragHandleProps, {\n    className: \"icon-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), __jsx(\"i\", {\n    className: \"far fa-lightbulb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    onClick: () => setIsCardBoxTileChanging(true),\n    className: \"project-title w-65per h-top cursor-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, isCardBoxTileChanging ? __jsx(\"div\", {\n    className: \"h-top flex-center w-90per\",\n    onBlur: () => handleCardBoxTitleBlur(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    className: \"w-100per change-project-title\",\n    value: cardBoxTitle,\n    autoFocus: true,\n    onKeyDown: event => handleKeyDown(event),\n    onBlur: () => setIsCardBoxTileChanging(false),\n    onChange: e => {\n      if (e.target.value.trim().length < 1) {\n        setCardBoxTitle(e.target.value.trim());\n      } else {\n        setCardBoxTitle(e.target.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })) : __jsx(\"div\", {\n    className: \"p-10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, props.cardBoxTitle)), __jsx(\"div\", {\n    className: \"cards-num flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, cards.length)), __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    onDragStart: onDragStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(Droppable, {\n    droppableId: \"droppable-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), cards.map((card, index) => {\n    return __jsx(Draggable, {\n      key: index,\n      draggableId: index.toString(),\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 23\n      }\n    }, (provided, snapshot) => __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }\n    }), __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    })));\n  }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n    in: isAdding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    className: \"h-top flex-center mb-25px\",\n    onSubmit: () => handleCardTitleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    className: \"box-shadow-1 w-100per add-card-title\",\n    value: cardTitle,\n    autoFocus: true,\n    onBlur: () => handleAddCardBlur(),\n    onChange: e => setCardTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }))) : __jsx(\"div\", {\n    className: \"h-top flex-center mb-25px cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, __jsx(\"i\", {\n    onClick: () => handleAddCard(),\n    className: \"add-card-icon box-shadow-1 fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  })), provided.placeholder))))));\n}\n\nexport default CardBox;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-box.tsx"],"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Card","Zoom","CardBox","props","cards","setCards","isAdding","setIsAdding","isDragging","setIsDragging","cardTitle","setCardTitle","isCardBoxTileChanging","setIsCardBoxTileChanging","cardBoxTitle","setCardBoxTitle","getItemStyle","draggableStyle","userSelect","padding","margin","border","borderRadius","boxShadow","background","onDragStart","result","length","console","log","onDragEnd","handleAddCard","handleAddCardBlur","handleCardBoxTitleBlur","handleCardTitleSubmit","handleCardBoxTitleSubmit","trim","draggableProps","innerRef","dragHandleProps","event","handleKeyDown","e","target","value","provided","snapshot","droppableProps","map","card","index","toString","style","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBox(props: any) {\n  const [cards, setCards] = useState([0]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cardTitle, setCardTitle] = useState('');\n  const [isCardBoxTileChanging, setIsCardBoxTileChanging] = useState(false);\n  const [cardBoxTitle, setCardBoxTitle] = useState('');\n\n  useEffect(() => {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []);\n\n  const getItemStyle = (isDragging: any, draggableStyle: any) => ({\n    userSelect: 'none',\n    padding: '15px',\n    margin: '5px 10px',\n    border: isDragging\n      ? '2px solid rgb(0, 170, 255)'\n      : '1px solid rgb(225,225,225)',\n    borderRadius: '10px',\n    boxShadow:\n      'rgba(0, 0, 0, 0.02) 0px 0px 0px 1px rgba(0, 0, 0, 0.05), 0px 1px 2px 0px, rgba(0, 0, 0, 0.05) 0px 2px 8px 0px',\n    background: isDragging ? 'rgb(241,251,255)' : 'white',\n    ...draggableStyle,\n  });\n\n  const onDragStart = (result: any) => {\n    // dropped outside the list\n    setIsDragging(true);\n    if (cardTitle.length < 1) {\n      console.log('aaa');\n      setIsAdding(false);\n    }\n  };\n\n  const onDragEnd = (result: any) => {\n    setIsDragging(false);\n\n    // dropped outside the list\n  };\n\n  const handleAddCard = () => {\n    console.log(1);\n    setIsAdding(true);\n    // setCards([...cards, 1]);\n    console.log(cards);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleCardBoxTitleBlur = () => {};\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      setCards([...cards, 1]);\n      setCardTitle('');\n    }\n    setIsAdding(false);\n  };\n\n  const handleCardBoxTitleSubmit = () => {\n    if (cardBoxTitle.trim().length > 0) {\n      // do something\n    }\n    setIsCardBoxTileChanging(false);\n  };\n\n  return (\n    <div {...props.draggableProps}>\n      <div className=\"card-box\">\n        <div className=\"subtitle-box h-top bg-skyblue text-white\">\n          <div\n            ref={props.innerRef}\n            {...props.dragHandleProps}\n            className=\"icon-box\"\n          >\n            <i className=\"far fa-lightbulb\"></i>\n          </div>\n          <div\n            onClick={() => setIsCardBoxTileChanging(true)}\n            className=\"project-title w-65per h-top cursor-text\"\n          >\n            {isCardBoxTileChanging ? (\n              <div\n                className=\"h-top flex-center w-90per\"\n                onBlur={() => handleCardBoxTitleBlur()}\n              >\n                <input\n                  className=\"w-100per change-project-title\"\n                  value={cardBoxTitle}\n                  autoFocus\n                  onKeyDown={(event) => handleKeyDown(event)}\n                  onBlur={() => setIsCardBoxTileChanging(false)}\n                  onChange={(e) => {\n                    if (e.target.value.trim().length < 1) {\n                      setCardBoxTitle(e.target.value.trim());\n                    } else {\n                      setCardBoxTitle(e.target.value);\n                    }\n                  }}\n                ></input>\n              </div>\n            ) : (\n              <div className=\"p-10px\">{props.cardBoxTitle}</div>\n            )}\n          </div>\n          <div className=\"cards-num flex-center\">{cards.length}</div>\n        </div>\n        <div className=\"card-body\">\n          <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\n            <Droppable droppableId=\"droppable-2\">\n              {(provided: any, snapshot: any) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {cards.map((card, index) => {\n                    return (\n                      <Draggable\n                        key={index}\n                        draggableId={index.toString()}\n                        index={index}\n                      >\n                        {(provided: any, snapshot: any) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                          >\n                            <Card />\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {isDragging ? (\n                    ''\n                  ) : isAdding ? (\n                    <Zoom in={isAdding}>\n                      <form\n                        className=\"h-top flex-center mb-25px\"\n                        onSubmit={() => handleCardTitleSubmit()}\n                      >\n                        <input\n                          className=\"box-shadow-1 w-100per add-card-title\"\n                          value={cardTitle}\n                          autoFocus\n                          onBlur={() => handleAddCardBlur()}\n                          onChange={(e) => setCardTitle(e.target.value)}\n                        ></input>\n                      </form>\n                    </Zoom>\n                  ) : (\n                    <div className=\"h-top flex-center mb-25px cursor-pointer\">\n                      <i\n                        onClick={() => handleAddCard()}\n                        className=\"add-card-icon box-shadow-1 fas fa-plus\"\n                      ></i>\n                    </div>\n                  )}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default CardBox;\n"]},"metadata":{},"sourceType":"module"}