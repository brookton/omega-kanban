{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props) {\n  _s();\n\n  var _this = this;\n\n  // const [cards, setCards] = useState([]);\n  var _useState = useState(false),\n      isAdding = _useState[0],\n      setIsAdding = _useState[1];\n\n  var _useState2 = useState(false),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n\n  var _useState3 = useState(''),\n      cardTitle = _useState3[0],\n      setCardTitle = _useState3[1]; // const [cardBoxTitle, setCardBoxTitle] = useState('');\n  // useEffect(() => {\n  //   if (props.cardBoxTitle) {\n  //     setCardBoxTitle(props.cardBoxTitle);\n  //   }\n  // }, []);\n  // const onDragStart = (result: any) => {\n  //   setIsDragging(true);\n  //   if (cardTitle.length < 1) {\n  //     setIsAdding(false);\n  //   }\n  // };\n  // const onDragEnd = (result: any) => {\n  //   setIsDragging(false);\n  //   props.onDragEnd(result);\n  // };\n\n\n  var handleAddCard = function handleAddCard() {\n    setIsAdding(true);\n  };\n\n  var handleAddCardBlur = function handleAddCardBlur() {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  var handleKeyDownForAddCard = function handleKeyDownForAddCard(event) {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  var handleCardTitleSubmit = function handleCardTitleSubmit() {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column.id, cardTitle);\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  return __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, props.column.id === 'Archive' ? __jsx(Droppable, {\n    droppableId: props.column.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), props.column.cards.map(function (card, index) {\n      return __jsx(Draggable, {\n        key: card.id,\n        draggableId: card.id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, function (provided, snapshot) {\n        return __jsx(Card, {\n          card: card,\n          setOpen: props.setOpen,\n          column: props.column,\n          provided: provided,\n          isDragging: snapshot.isDragging,\n          setCardForOpen: props.setCardForOpen,\n          convertDate: props.convertDate,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }\n        });\n      });\n    }), provided.placeholder);\n  }) : __jsx(Droppable, {\n    droppableId: props.column.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), props.column.cards.map(function (card, index) {\n      return __jsx(Draggable, {\n        key: card.id,\n        draggableId: card.id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, function (provided, snapshot) {\n        return __jsx(Card, {\n          card: card,\n          setOpen: props.setOpen,\n          column: props.column,\n          provided: provided,\n          isDragging: snapshot.isDragging,\n          setCardForOpen: props.setCardForOpen,\n          convertDate: props.convertDate,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }\n        });\n      });\n    }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n      \"in\": isAdding,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"h-top mt-5px flex-center mb-25px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, __jsx(\"input\", {\n      className: \"box-shadow-1 w-100per add-card-title\",\n      value: cardTitle,\n      autoFocus: true,\n      onBlur: function onBlur() {\n        return handleAddCardBlur();\n      },\n      onKeyDown: function onKeyDown(event) {\n        return handleKeyDownForAddCard(event);\n      },\n      onChange: function onChange(e) {\n        return setCardTitle(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }))) : __jsx(\"div\", {\n      className: \"h-top flex-center mb-25px cursor-pointer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, __jsx(\"i\", {\n      onClick: function onClick() {\n        return handleAddCard();\n      },\n      className: \"add-card-icon box-shadow-1 fas fa-plus\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    })), !isAdding && props.column.cards.length === 0 && __jsx(\"div\", {\n      className: \"no-task flex-center flex-column\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, __jsx(\"i\", {\n      className: \"no-task-check text-grey far fa-check-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"no-task-title text-grey\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, \"No Task\"), __jsx(\"div\", {\n      className: \"no-task-desc text-grey\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, \"Drag tasks here\"), __jsx(\"div\", {\n      className: \"no-task-desc text-grey\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, \"or click + to add new tasks\")), provided.placeholder);\n  }));\n}\n\n_s(CardBody, \"9nh3/Fb5fTSaOX5aoNDvBd3dE7Y=\");\n\n_c = CardBody;\nexport default CardBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardBody\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx"],"names":["React","useState","Droppable","Draggable","Card","Zoom","CardBody","props","isAdding","setIsAdding","isDragging","setIsDragging","cardTitle","setCardTitle","handleAddCard","handleAddCardBlur","length","handleKeyDownForAddCard","event","key","handleCardTitleSubmit","addCard","column","id","provided","snapshot","innerRef","droppableProps","cards","map","card","index","setOpen","setCardForOpen","convertDate","placeholder","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props: any) {\n  // const [cards, setCards] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cardTitle, setCardTitle] = useState('');\n  // const [cardBoxTitle, setCardBoxTitle] = useState('');\n\n  // useEffect(() => {\n  //   if (props.cardBoxTitle) {\n  //     setCardBoxTitle(props.cardBoxTitle);\n  //   }\n  // }, []);\n\n  // const onDragStart = (result: any) => {\n  //   setIsDragging(true);\n  //   if (cardTitle.length < 1) {\n  //     setIsAdding(false);\n  //   }\n  // };\n\n  // const onDragEnd = (result: any) => {\n  //   setIsDragging(false);\n  //   props.onDragEnd(result);\n  // };\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column.id, cardTitle);\n      setCardTitle('');\n    }\n    setIsAdding(false);\n  };\n\n  return (\n    <div className=\"card-body\">\n      {props.column.id === 'Archive' ? (\n        <Droppable droppableId={props.column.id}>\n          {(provided: any, snapshot: any) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {props.column.cards.map((card: any, index: any) => {\n                return (\n                  <Draggable key={card.id} draggableId={card.id} index={index}>\n                    {(provided: any, snapshot: any) => (\n                      <Card\n                        card={card}\n                        setOpen={props.setOpen}\n                        column={props.column}\n                        provided={provided}\n                        isDragging={snapshot.isDragging}\n                        setCardForOpen={props.setCardForOpen}\n                        convertDate={props.convertDate}\n                      />\n                    )}\n                  </Draggable>\n                );\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      ) : (\n        <Droppable droppableId={props.column.id}>\n          {(provided: any, snapshot: any) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {props.column.cards.map((card: any, index: any) => {\n                return (\n                  <Draggable key={card.id} draggableId={card.id} index={index}>\n                    {(provided: any, snapshot: any) => (\n                      <Card\n                        card={card}\n                        setOpen={props.setOpen}\n                        column={props.column}\n                        provided={provided}\n                        isDragging={snapshot.isDragging}\n                        setCardForOpen={props.setCardForOpen}\n                        convertDate={props.convertDate}\n                      />\n                    )}\n                  </Draggable>\n                );\n              })}\n              {isDragging ? (\n                ''\n              ) : isAdding ? (\n                <Zoom in={isAdding}>\n                  <div className=\"h-top mt-5px flex-center mb-25px\">\n                    <input\n                      className=\"box-shadow-1 w-100per add-card-title\"\n                      value={cardTitle}\n                      autoFocus\n                      onBlur={() => handleAddCardBlur()}\n                      onKeyDown={(event) => handleKeyDownForAddCard(event)}\n                      onChange={(e) => setCardTitle(e.target.value)}\n                    ></input>\n                  </div>\n                </Zoom>\n              ) : (\n                <div className=\"h-top flex-center mb-25px cursor-pointer\">\n                  <i\n                    onClick={() => handleAddCard()}\n                    className=\"add-card-icon box-shadow-1 fas fa-plus\"\n                  ></i>\n                </div>\n              )}\n              {!isAdding && props.column.cards.length === 0 && (\n                <div className=\"no-task flex-center flex-column\">\n                  <div>\n                    <i className=\"no-task-check text-grey far fa-check-circle\"></i>\n                  </div>\n                  <div className=\"no-task-title text-grey\">No Task</div>\n                  <div className=\"no-task-desc text-grey\">Drag tasks here</div>\n                  <div className=\"no-task-desc text-grey\">\n                    or click + to add new tasks\n                  </div>\n                </div>\n              )}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      )}\n    </div>\n  );\n}\nexport default CardBody;\n"]},"metadata":{},"sourceType":"module"}