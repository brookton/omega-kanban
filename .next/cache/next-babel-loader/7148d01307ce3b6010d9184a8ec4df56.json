{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/column.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport CardBody from './card-body';\nimport CardHead from './card-head';\nimport { Draggable } from 'react-beautiful-dnd';\n\nfunction Column(props) {\n  var _this = this;\n\n  return __jsx(Draggable, {\n    draggableId: props.column.id,\n    index: props.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, function (provided) {\n    return __jsx(\"div\", _extends({\n      className: \"column\"\n    }, provided.draggableProps, {\n      ref: provided.innerRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"card-box bg-grey-\".concat(props.index % 2),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, __jsx(CardHead, {\n      column: props.column,\n      index: props.index,\n      updateSectionTitle: props.updateSectionTitle,\n      deleteColumn: props.deleteColumn,\n      dragHandleProps: provided.dragHandleProps,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }), __jsx(CardBody, {\n      reorder: props.reorder,\n      column: props.column,\n      index: props.index,\n      onDragEnd: props.onDragEnd,\n      addCard: props.addCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    })));\n  });\n}\n\n_c = Column;\nexport default Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/column.tsx"],"names":["React","CardBody","CardHead","Draggable","Column","props","column","id","index","provided","draggableProps","innerRef","updateSectionTitle","deleteColumn","dragHandleProps","reorder","onDragEnd","addCard"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAAA;;AAC1B,SACE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAEA,KAAK,CAACC,MAAN,CAAaC,EAArC;AAAyC,IAAA,KAAK,EAAEF,KAAK,CAACG,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACC,QAAD;AAAA,WACC;AACE,MAAA,SAAS,EAAC;AADZ,OAEMA,QAAQ,CAACC,cAFf;AAGE,MAAA,GAAG,EAAED,QAAQ,CAACE,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKE;AAAK,MAAA,SAAS,6BAAsBN,KAAK,CAACG,KAAN,GAAc,CAApC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AACE,MAAA,MAAM,EAAEH,KAAK,CAACC,MADhB;AAEE,MAAA,KAAK,EAAED,KAAK,CAACG,KAFf;AAGE,MAAA,kBAAkB,EAAEH,KAAK,CAACO,kBAH5B;AAIE,MAAA,YAAY,EAAEP,KAAK,CAACQ,YAJtB;AAKE,MAAA,eAAe,EAAEJ,QAAQ,CAACK,eAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,MAAC,QAAD;AACE,MAAA,OAAO,EAAET,KAAK,CAACU,OADjB;AAEE,MAAA,MAAM,EAAEV,KAAK,CAACC,MAFhB;AAGE,MAAA,KAAK,EAAED,KAAK,CAACG,KAHf;AAIE,MAAA,SAAS,EAAEH,KAAK,CAACW,SAJnB;AAKE,MAAA,OAAO,EAAEX,KAAK,CAACY,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CALF,CADD;AAAA,GADH,CADF;AA4BD;;KA7BQb,M;AA8BT,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport CardBody from './card-body';\nimport CardHead from './card-head';\nimport { Draggable } from 'react-beautiful-dnd';\n\nfunction Column(props: any) {\n  return (\n    <Draggable draggableId={props.column.id} index={props.index}>\n      {(provided: any) => (\n        <div\n          className=\"column\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <div className={`card-box bg-grey-${props.index % 2}`}>\n            <CardHead\n              column={props.column}\n              index={props.index}\n              updateSectionTitle={props.updateSectionTitle}\n              deleteColumn={props.deleteColumn}\n              dragHandleProps={provided.dragHandleProps}\n            />\n            <CardBody\n              reorder={props.reorder}\n              column={props.column}\n              index={props.index}\n              onDragEnd={props.onDragEnd}\n              addCard={props.addCard}\n            />\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}