{"ast":null,"code":"import Card from '../../middleware/models/card';\nexport default (async (request, response) => {\n  const {\n    columnId,\n    cards\n  } = request.body;\n\n  try {\n    const currentCards = await Card.find({\n      columnId\n    }).sort({\n      order: 1\n    });\n\n    if (!currentCards.length) {\n      return response.status(404).send({\n        error: 'Failed to find cards in a column'\n      });\n    }\n\n    console.log(currentCards);\n    currentCards.map(currentCard => {\n      cards.map(card => {\n        if (currentCard._id === card._id) {\n          currentCard.order = card.order;\n        }\n      });\n    });\n    console.log(currentCards);\n    await currentCards.save();\n    return response.status(200).json({\n      success: true\n    });\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to reorder cards in a same column'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/pages/api/reorder-card.tsx"],"names":["Card","request","response","columnId","cards","body","currentCards","find","sort","order","length","status","send","error","console","log","map","currentCard","card","_id","save","json","success","e","message"],"mappings":"AACA,OAAOA,IAAP,MAAiB,8BAAjB;AAGA,gBAAe,OAAOC,OAAP,EAAgCC,QAAhC,KAA8D;AAC3E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBH,OAAO,CAACI,IAApC;;AACA,MAAI;AACF,UAAMC,YAAY,GAAG,MAAMN,IAAI,CAACO,IAAL,CAAU;AAAEJ,MAAAA;AAAF,KAAV,EAAwBK,IAAxB,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAA3B;;AACA,QAAI,CAACH,YAAY,CAACI,MAAlB,EAA0B;AACxB,aAAOR,QAAQ,CACZS,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFD,CAAP;AAGD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACAA,IAAAA,YAAY,CAACU,GAAb,CAAkBC,WAAD,IAAwB;AACvCb,MAAAA,KAAK,CAACY,GAAN,CAAWE,IAAD,IAAiB;AACzB,YAAID,WAAW,CAACE,GAAZ,KAAoBD,IAAI,CAACC,GAA7B,EAAkC;AAChCF,UAAAA,WAAW,CAACR,KAAZ,GAAoBS,IAAI,CAACT,KAAzB;AACD;AACF,OAJD;AAKD,KAND;AAOAK,IAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACA,UAAMA,YAAY,CAACc,IAAb,EAAN;AACA,WAAOlB,QAAQ,CAACS,MAAT,CAAgB,GAAhB,EAAqBU,IAArB,CAA0B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA1B,CAAP;AACD,GAlBD,CAkBE,OAAOC,CAAP,EAAU;AACV,WAAOrB,QAAQ,CAACS,MAAT,CAAgB,GAAhB,EAAqBU,IAArB,CAA0B;AAC/BC,MAAAA,OAAO,EAAE,KADsB;AAE/BE,MAAAA,OAAO,EAAE;AAFsB,KAA1B,CAAP;AAID;AACF,CA1BD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport Card from '../../middleware/models/card';\nimport ICard from '../../components/interfaces/icard';\n\nexport default async (request: NextApiRequest, response: NextApiResponse) => {\n  const { columnId, cards } = request.body;\n  try {\n    const currentCards = await Card.find({ columnId }).sort({ order: 1 });\n    if (!currentCards.length) {\n      return response\n        .status(404)\n        .send({ error: 'Failed to find cards in a column' });\n    }\n    console.log(currentCards);\n    currentCards.map((currentCard: ICard) => {\n      cards.map((card: ICard) => {\n        if (currentCard._id === card._id) {\n          currentCard.order = card.order;\n        }\n      });\n    });\n    console.log(currentCards);\n    await currentCards.save();\n    return response.status(200).json({ success: true });\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to reorder cards in a same column',\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}