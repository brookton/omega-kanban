{"ast":null,"code":"import Card from '../../middleware/models/card';\n\nrequire('../../middleware/db/mongoose');\n\nexport default (async (request, response) => {\n  const {\n    columnId,\n    cardTitle\n  } = request.body;\n\n  try {\n    const newCard = new Card({\n      columnId,\n      cardTitle\n    });\n    await newCard.save();\n\n    try {\n      return response.status(200).json({\n        success: true,\n        data: newCard\n      });\n    } catch (e) {\n      return response.status(500).json({\n        success: false,\n        message: 'failed to add a card'\n      });\n    }\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to add a card'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/pages/api/add-card.tsx"],"names":["Card","require","request","response","columnId","cardTitle","body","newCard","save","status","json","success","data","e","message"],"mappings":"AACA,OAAOA,IAAP,MAAiB,8BAAjB;;AACAC,OAAO,CAAC,8BAAD,CAAP;;AAEA,gBAAe,OAAOC,OAAP,EAAgCC,QAAhC,KAA8D;AAC3E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BH,OAAO,CAACI,IAAxC;;AACA,MAAI;AACF,UAAMC,OAAO,GAAG,IAAIP,IAAJ,CAAS;AAAEI,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAT,CAAhB;AACA,UAAME,OAAO,CAACC,IAAR,EAAN;;AACA,QAAI;AACF,aAAOL,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,IAAI,EAAEL;AAAvB,OAA1B,CAAP;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACV,aAAOV,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BC,QAAAA,OAAO,EAAE,KADsB;AAE/BG,QAAAA,OAAO,EAAE;AAFsB,OAA1B,CAAP;AAID;AACF,GAXD,CAWE,OAAOD,CAAP,EAAU;AACV,WAAOV,QAAQ,CACZM,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBG,MAAAA,OAAO,EAAE;AAA3B,KAFD,CAAP;AAGD;AACF,CAlBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport Card from '../../middleware/models/card';\nrequire('../../middleware/db/mongoose');\n\nexport default async (request: NextApiRequest, response: NextApiResponse) => {\n  const { columnId, cardTitle } = request.body;\n  try {\n    const newCard = new Card({ columnId, cardTitle });\n    await newCard.save();\n    try {\n      return response.status(200).json({ success: true, data: newCard });\n    } catch (e) {\n      return response.status(500).json({\n        success: false,\n        message: 'failed to add a card',\n      });\n    }\n  } catch (e) {\n    return response\n      .status(500)\n      .json({ success: false, message: 'failed to add a card' });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}