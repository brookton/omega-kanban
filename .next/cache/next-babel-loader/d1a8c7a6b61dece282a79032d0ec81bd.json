{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-box.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBox(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      cards = _useState[0],\n      setCards = _useState[1];\n\n  var _useState2 = useState(false),\n      isAdding = _useState2[0],\n      setIsAdding = _useState2[1];\n\n  var _useState3 = useState(false),\n      isDragging = _useState3[0],\n      setIsDragging = _useState3[1];\n\n  var _useState4 = useState(''),\n      cardTitle = _useState4[0],\n      setCardTitle = _useState4[1];\n\n  var _useState5 = useState(false),\n      isCardBoxTileChanging = _useState5[0],\n      setIsCardBoxTileChanging = _useState5[1];\n\n  var _useState6 = useState(''),\n      cardBoxTitle = _useState6[0],\n      setCardBoxTitle = _useState6[1];\n\n  useEffect(function () {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []);\n\n  var getItemStyle = function getItemStyle(isDragging, draggableStyle) {\n    return _objectSpread(_objectSpread({\n      userSelect: 'none',\n      padding: '15px',\n      margin: '5px 10px',\n      border: isDragging ? '2px solid rgb(0, 170, 255)' : '1px solid rgb(225,225,225)',\n      borderRadius: '10px',\n      boxShadow: 'rgba(0, 0, 0, 0.02) 0px 0px 0px 1px rgba(0, 0, 0, 0.05), 0px 1px 2px 0px, rgba(0, 0, 0, 0.05) 0px 2px 8px 0px',\n      background: isDragging ? 'rgb(241,251,255)' : 'white'\n    }, draggableStyle), {}, {\n      height: isDragging ? '100px' : '150px'\n    });\n  };\n\n  var onDragStart = function onDragStart(result) {\n    setIsDragging(true);\n\n    if (cardTitle.length < 1) {\n      setIsAdding(false);\n    }\n  }; // const reorder = (list: any, startIndex: any, endIndex: any) => {\n  //   const result = Array.from(list);\n  //   const [removed] = result.splice(startIndex, 1);\n  //   result.splice(endIndex, 0, removed);\n  //   return result;\n  // };\n\n\n  var onDragEnd = function onDragEnd(result) {\n    setIsDragging(false);\n\n    if (!result.destination) {\n      return;\n    }\n\n    var items = props.reorder(cards, result.source.index, result.destination.index);\n    setCards(items);\n  };\n\n  var handleCardBoxTitleBlur = function handleCardBoxTitleBlur() {};\n\n  var handleAddCard = function handleAddCard() {\n    setIsAdding(true); // setCards([...cards, 1]);\n  };\n\n  var handleAddCardBlur = function handleAddCardBlur() {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  var handleCardBoxTitleSubmit = function handleCardBoxTitleSubmit() {\n    if (cardBoxTitle.trim().length > 0) {// do something\n    }\n\n    setIsCardBoxTileChanging(false);\n  };\n\n  var handleKeyDownForCardBoxTitle = function handleKeyDownForCardBoxTitle(event) {\n    if (event.key === 'Enter') {\n      handleCardBoxTitleSubmit();\n    }\n  };\n\n  var handleKeyDownForAddCard = function handleKeyDownForAddCard(event) {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  var handleCardTitleSubmit = function handleCardTitleSubmit() {\n    console.log(cardTitle);\n\n    if (cardTitle.length > 0) {\n      setCards([].concat(_toConsumableArray(cards), [{\n        cardTitle: cardTitle\n      }]));\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  return __jsx(\"div\", _extends({}, props.draggableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"card-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"subtitle-box h-top bg-skyblue text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", _extends({\n    ref: props.innerRef\n  }, props.dragHandleProps, {\n    className: \"icon-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), __jsx(\"i\", {\n    className: \"far fa-lightbulb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    onClick: function onClick() {\n      return setIsCardBoxTileChanging(true);\n    },\n    className: \"project-title w-65per h-top cursor-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, isCardBoxTileChanging ? __jsx(\"div\", {\n    className: \"h-top flex-center w-90per\",\n    onBlur: function onBlur() {\n      return handleCardBoxTitleBlur();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    className: \"w-100per change-project-title\",\n    value: cardBoxTitle,\n    autoFocus: true,\n    onKeyDown: function onKeyDown(event) {\n      return handleKeyDownForCardBoxTitle(event);\n    },\n    onBlur: function onBlur() {\n      return setIsCardBoxTileChanging(false);\n    },\n    onChange: function onChange(e) {\n      if (e.target.value.trim().length < 1) {\n        setCardBoxTitle(e.target.value.trim());\n      } else {\n        setCardBoxTitle(e.target.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })) : __jsx(\"div\", {\n    className: \"p-10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, props.cardBoxTitle)), __jsx(\"div\", {\n    className: \"cards-num flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, cards.length)), __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    onDragStart: onDragStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, __jsx(Droppable, {\n    droppableId: \"droppable-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), cards.map(function (card, index) {\n      return __jsx(Draggable, {\n        key: index,\n        draggableId: index.toString(),\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 23\n        }\n      }, function (provided, snapshot) {\n        return __jsx(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 27\n          }\n        }), __jsx(Card, {\n          cardTitle: card.cardTitle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }\n        }));\n      });\n    }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n      \"in\": isAdding,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"h-top flex-center mb-25px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    }, __jsx(\"input\", {\n      className: \"box-shadow-1 w-100per add-card-title\",\n      value: cardTitle,\n      autoFocus: true,\n      onBlur: function onBlur() {\n        return handleAddCardBlur();\n      },\n      onKeyDown: function onKeyDown(event) {\n        return handleKeyDownForAddCard(event);\n      },\n      onChange: function onChange(e) {\n        return setCardTitle(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }))) : __jsx(\"div\", {\n      className: \"h-top flex-center mb-25px cursor-pointer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, __jsx(\"i\", {\n      onClick: function onClick() {\n        return handleAddCard();\n      },\n      className: \"add-card-icon box-shadow-1 fas fa-plus\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    })), provided.placeholder);\n  })))));\n}\n\n_s(CardBox, \"pBSvy1GqAwXRSuuBZwdpMxjMPXA=\");\n\n_c = CardBox;\nexport default CardBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardBox\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-box.tsx"],"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Card","Zoom","CardBox","props","cards","setCards","isAdding","setIsAdding","isDragging","setIsDragging","cardTitle","setCardTitle","isCardBoxTileChanging","setIsCardBoxTileChanging","cardBoxTitle","setCardBoxTitle","getItemStyle","draggableStyle","userSelect","padding","margin","border","borderRadius","boxShadow","background","height","onDragStart","result","length","onDragEnd","destination","items","reorder","source","index","handleCardBoxTitleBlur","handleAddCard","handleAddCardBlur","handleCardBoxTitleSubmit","trim","handleKeyDownForCardBoxTitle","event","key","handleKeyDownForAddCard","handleCardTitleSubmit","console","log","draggableProps","innerRef","dragHandleProps","e","target","value","provided","snapshot","droppableProps","map","card","toString","style","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBox(props: any) {\n  const [cards, setCards] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cardTitle, setCardTitle] = useState('');\n  const [isCardBoxTileChanging, setIsCardBoxTileChanging] = useState(false);\n  const [cardBoxTitle, setCardBoxTitle] = useState('');\n\n  useEffect(() => {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []);\n\n  const getItemStyle = (isDragging: any, draggableStyle: any) => ({\n    userSelect: 'none',\n    padding: '15px',\n    margin: '5px 10px',\n    border: isDragging\n      ? '2px solid rgb(0, 170, 255)'\n      : '1px solid rgb(225,225,225)',\n    borderRadius: '10px',\n    boxShadow:\n      'rgba(0, 0, 0, 0.02) 0px 0px 0px 1px rgba(0, 0, 0, 0.05), 0px 1px 2px 0px, rgba(0, 0, 0, 0.05) 0px 2px 8px 0px',\n    background: isDragging ? 'rgb(241,251,255)' : 'white',\n    ...draggableStyle,\n    height: isDragging ? '100px' : '150px',\n  });\n\n  const onDragStart = (result: any) => {\n    setIsDragging(true);\n    if (cardTitle.length < 1) {\n      setIsAdding(false);\n    }\n  };\n\n  // const reorder = (list: any, startIndex: any, endIndex: any) => {\n  //   const result = Array.from(list);\n  //   const [removed] = result.splice(startIndex, 1);\n  //   result.splice(endIndex, 0, removed);\n  //   return result;\n  // };\n\n  const onDragEnd = (result: any) => {\n    setIsDragging(false);\n    if (!result.destination) {\n      return;\n    }\n    const items = props.reorder(\n      cards,\n      result.source.index,\n      result.destination.index\n    );\n    setCards(items as any);\n  };\n\n  const handleCardBoxTitleBlur = () => {};\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n    // setCards([...cards, 1]);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleCardBoxTitleSubmit = () => {\n    if (cardBoxTitle.trim().length > 0) {\n      // do something\n    }\n    setIsCardBoxTileChanging(false);\n  };\n\n  const handleKeyDownForCardBoxTitle = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardBoxTitleSubmit();\n    }\n  };\n\n  const handleKeyDownForAddCard = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    console.log(cardTitle);\n    if (cardTitle.length > 0) {\n      setCards([...cards, { cardTitle }] as any);\n      setCardTitle('');\n    }\n    setIsAdding(false);\n  };\n\n  return (\n    <div {...props.draggableProps}>\n      <div className=\"card-box\">\n        <div className=\"subtitle-box h-top bg-skyblue text-white\">\n          <div\n            ref={props.innerRef}\n            {...props.dragHandleProps}\n            className=\"icon-box\"\n          >\n            <i className=\"far fa-lightbulb\"></i>\n          </div>\n          <div\n            onClick={() => setIsCardBoxTileChanging(true)}\n            className=\"project-title w-65per h-top cursor-text\"\n          >\n            {isCardBoxTileChanging ? (\n              <div\n                className=\"h-top flex-center w-90per\"\n                onBlur={() => handleCardBoxTitleBlur()}\n              >\n                <input\n                  className=\"w-100per change-project-title\"\n                  value={cardBoxTitle}\n                  autoFocus\n                  onKeyDown={(event) => handleKeyDownForCardBoxTitle(event)}\n                  onBlur={() => setIsCardBoxTileChanging(false)}\n                  onChange={(e) => {\n                    if (e.target.value.trim().length < 1) {\n                      setCardBoxTitle(e.target.value.trim());\n                    } else {\n                      setCardBoxTitle(e.target.value);\n                    }\n                  }}\n                ></input>\n              </div>\n            ) : (\n              <div className=\"p-10px\">{props.cardBoxTitle}</div>\n            )}\n          </div>\n          <div className=\"cards-num flex-center\">{cards.length}</div>\n        </div>\n        <div className=\"card-body\">\n          <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\n            <Droppable droppableId=\"droppable-2\">\n              {(provided: any, snapshot: any) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {cards.map((card: any, index) => {\n                    return (\n                      <Draggable\n                        key={index}\n                        draggableId={index.toString()}\n                        index={index}\n                      >\n                        {(provided: any, snapshot: any) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                          >\n                            <Card cardTitle={card.cardTitle} />\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {isDragging ? (\n                    ''\n                  ) : isAdding ? (\n                    <Zoom in={isAdding}>\n                      <div className=\"h-top flex-center mb-25px\">\n                        <input\n                          className=\"box-shadow-1 w-100per add-card-title\"\n                          value={cardTitle}\n                          autoFocus\n                          onBlur={() => handleAddCardBlur()}\n                          onKeyDown={(event) => handleKeyDownForAddCard(event)}\n                          onChange={(e) => setCardTitle(e.target.value)}\n                        ></input>\n                      </div>\n                    </Zoom>\n                  ) : (\n                    <div className=\"h-top flex-center mb-25px cursor-pointer\">\n                      <i\n                        onClick={() => handleAddCard()}\n                        className=\"add-card-icon box-shadow-1 fas fa-plus\"\n                      ></i>\n                    </div>\n                  )}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default CardBox;\n"]},"metadata":{},"sourceType":"module"}