{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/project-name.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useRouter } from 'next/router';\n\nvar randomWords = require('random-words');\n\nfunction ProjectName() {\n  _s();\n\n  var router = useRouter();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      projectName = _React$useState2[0],\n      setProjectName = _React$useState2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isBtnClick = _useState2[0],\n      setIsBtnClick = _useState2[1];\n\n  var addRouter = function addRouter(project) {\n    fetch(\"/api/add-router\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        project: project\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        router.replace(\"/\".concat(data.data._id, \"/\").concat(data.data.project));\n      } else {\n        console.log('no data found');\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while adding a route:\".concat(err.message));\n    });\n  };\n\n  var handleStartBtnClick = function handleStartBtnClick() {\n    if (projectName.length === 0) {\n      var randomProjectName = randomWords();\n      addRouter(randomProjectName);\n    } else {\n      addRouter(projectName);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"home flex-center bg-head-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    className: \"project-name\",\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: function onSubmit() {\n      return handleStartBtnClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    className: \"project-name-text\",\n    id: \"standard-basic\",\n    label: \"project name\",\n    value: projectName,\n    onChange: function onChange(e) {\n      return setProjectName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: function onClick() {\n      return handleStartBtnClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Start\")));\n}\n\n_s(ProjectName, \"xtmu7T6aB8cM1ovYdoRhUCVDYAw=\", false, function () {\n  return [useRouter];\n});\n\n_c = ProjectName;\nexport default ProjectName;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectName\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/project-name.tsx"],"names":["React","TextField","Button","useRouter","randomWords","require","ProjectName","router","useState","projectName","setProjectName","isBtnClick","setIsBtnClick","addRouter","project","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","replace","_id","console","log","err","error","message","handleStartBtnClick","length","randomProjectName","e","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AADqB,wBAEiBH,KAAK,CAACQ,QAAN,CAAuB,EAAvB,CAFjB;AAAA;AAAA,MAEdC,WAFc;AAAA,MAEDC,cAFC;;AAAA,kBAGeF,QAAQ,CAAC,KAAD,CAHvB;AAAA;AAAA,MAGdG,UAHc;AAAA,MAGFC,aAHE;;AAIrB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAqB;AACrCC,IAAAA,KAAK,oBAAoB;AACvBC,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFc;AAKvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,QAAAA,OAAO,EAAPA;AADmB,OAAf;AALiB,KAApB,CAAL,CASGO,IATH,CASQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KATR,EAUGF,IAVH,CAUQ,UAACG,IAAD,EAAuB;AAC3B,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBlB,QAAAA,MAAM,CAACmB,OAAP,YAAmBF,IAAI,CAACA,IAAL,CAAUG,GAA7B,cAAoCH,IAAI,CAACA,IAAL,CAAUV,OAA9C;AACD,OAFD,MAEO;AACLc,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF,KAhBH,WAiBS,UAACC,GAAD,EAAS;AACdF,MAAAA,OAAO,CAACG,KAAR,yDACmDD,GAAG,CAACE,OADvD;AAGD,KArBH;AAsBD,GAvBD;;AAyBA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,QAAIxB,WAAW,CAACyB,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,UAAMC,iBAAiB,GAAG/B,WAAW,EAArC;AACAS,MAAAA,SAAS,CAACsB,iBAAD,CAAT;AACD,KAHD,MAGO;AACLtB,MAAAA,SAAS,CAACJ,WAAD,CAAT;AACD;AACF,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,YAAY,EAAC,KAHf;AAIE,IAAA,QAAQ,EAAE;AAAA,aAAMwB,mBAAmB,EAAzB;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,EAAE,EAAC,gBAFL;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,KAAK,EAAExB,WAJT;AAKE,IAAA,QAAQ,EAAE,kBAAC2B,CAAD;AAAA,aAAO1B,cAAc,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAArB;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAaE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAML,mBAAmB,EAAzB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,CADF,CADF;AAmBD;;GAzDQ3B,W;UACQH,S;;;KADRG,W;AA0DT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IRouterData from './interfaces/irouterdata';\nimport { useRouter } from 'next/router';\n\nconst randomWords = require('random-words' as string);\n\nfunction ProjectName() {\n  const router = useRouter();\n  const [projectName, setProjectName] = React.useState<string>('');\n  const [isBtnClick, setIsBtnClick] = useState(false);\n  const addRouter = (project: String) => {\n    fetch(`/api/add-router`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        project,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: IRouterData) => {\n        if (data.success) {\n          router.replace(`/${data.data._id}/${data.data.project}`);\n        } else {\n          console.log('no data found');\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while adding a route:${err.message}`\n        );\n      });\n  };\n\n  const handleStartBtnClick = () => {\n    if (projectName.length === 0) {\n      const randomProjectName = randomWords();\n      addRouter(randomProjectName);\n    } else {\n      addRouter(projectName);\n    }\n  };\n\n  return (\n    <div className={`home flex-center bg-head-0`}>\n      <form\n        className=\"project-name\"\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={() => handleStartBtnClick()}\n      >\n        <TextField\n          className=\"project-name-text\"\n          id=\"standard-basic\"\n          label=\"project name\"\n          value={projectName}\n          onChange={(e) => setProjectName(e.target.value)}\n        />\n        <Button onClick={() => handleStartBtnClick()}>Start</Button>\n      </form>\n    </div>\n  );\n}\nexport default ProjectName;\n"]},"metadata":{},"sourceType":"module"}