{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport Column from './column';\nimport AddSection from './add-section';\n\nfunction Board(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([{\n    title: 'progress'\n  }]),\n      cardBoxes = _useState[0],\n      setCardBoxes = _useState[1];\n\n  var _useState2 = useState({\n    columns: {\n      'column-0': {\n        id: 'column-0',\n        title: 'First column',\n        items: []\n      },\n      'column-1': {\n        id: 'column-1',\n        title: 'Second column',\n        items: [11, 12, 13, 14, 15, 16, 17, 18]\n      }\n    },\n    columnOrder: ['column-0', 'column-1']\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onDragEnd = function onDragEnd(result) {\n    var _objectSpread3;\n\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === 'column') {\n      var columnOrder = reorder(state.columnOrder, result.source.index, result.destination.index);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        columnOrder: columnOrder\n      }));\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      var column = state.columns[result.source.droppableId];\n      var items = reorder(column.items, result.source.index, result.destination.index); // updating column entry\n\n      var _newState = _objectSpread(_objectSpread({}, state), {}, {\n        columns: _objectSpread(_objectSpread({}, state.columns), {}, _defineProperty({}, column.id, _objectSpread(_objectSpread({}, column), {}, {\n          items: items\n        })))\n      });\n\n      setState(_newState);\n      return;\n    }\n\n    var sourceColumn = state.columns[result.source.droppableId];\n    var destinationColumn = state.columns[result.destination.droppableId];\n    var item = sourceColumn.items[result.source.index];\n\n    var newSourceColumn = _objectSpread(_objectSpread({}, sourceColumn), {}, {\n      items: _toConsumableArray(sourceColumn.items)\n    });\n\n    newSourceColumn.items.splice(result.source.index, 1);\n\n    var newDestinationColumn = _objectSpread(_objectSpread({}, destinationColumn), {}, {\n      items: _toConsumableArray(destinationColumn.items)\n    });\n\n    newDestinationColumn.items.splice(result.destination.index, 0, item);\n\n    var newState = _objectSpread(_objectSpread({}, state), {}, {\n      columns: _objectSpread(_objectSpread({}, state.columns), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, newSourceColumn.id, newSourceColumn), _defineProperty(_objectSpread3, newDestinationColumn.id, newDestinationColumn), _objectSpread3))\n    });\n\n    setState(newState);\n  };\n\n  var getItemStyle = function getItemStyle(isDragging, draggableStyle) {\n    return _objectSpread({\n      display: 'flex',\n      flexDirection: 'row'\n    }, draggableStyle);\n  };\n\n  var createCardBox = function createCardBox(cardBox) {\n    setCardBoxes([].concat(_toConsumableArray(cardBoxes), [cardBox]));\n  };\n\n  var reorder = function reorder(list, startIndex, endIndex) {\n    var result = Array.from(list);\n\n    var _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = _slicedToArray(_result$splice, 1),\n        removed = _result$splice2[0];\n\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Top, {\n    projectName: props.projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Droppable, {\n    direction: \"horizontal\",\n    droppableId: \"all-droppables\",\n    type: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      style: getItemStyle(snapshot.isDragging, provided.droppableProps.style),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), state.columnOrder.map(function (columnId, index) {\n      return __jsx(Column, {\n        key: columnId,\n        column: state.columns[columnId],\n        index: index,\n        reorder: reorder,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      });\n    }), provided.placeholder);\n  })), __jsx(AddSection, {\n    createCardBox: createCardBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Board, \"jXDHc8FtyBiiEqhKnodPFxoBoX4=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx"],"names":["React","useState","DragDropContext","Droppable","Top","Column","AddSection","Board","props","title","cardBoxes","setCardBoxes","columns","id","items","columnOrder","state","setState","onDragEnd","result","destination","type","reorder","source","index","droppableId","column","newState","sourceColumn","destinationColumn","item","newSourceColumn","splice","newDestinationColumn","getItemStyle","isDragging","draggableStyle","display","flexDirection","createCardBox","cardBox","list","startIndex","endIndex","Array","from","removed","projectName","provided","snapshot","innerRef","droppableProps","style","map","columnId","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport Column from './column';\nimport AddSection from './add-section';\n\nfunction Board(props: any) {\n  const [cardBoxes, setCardBoxes] = useState([{ title: 'progress' }]);\n  const [state, setState] = useState({\n    columns: {\n      'column-0': {\n        id: 'column-0',\n        title: 'First column',\n        items: [],\n      },\n      'column-1': {\n        id: 'column-1',\n        title: 'Second column',\n        items: [11, 12, 13, 14, 15, 16, 17, 18],\n      },\n    },\n    columnOrder: ['column-0', 'column-1'],\n  } as any);\n\n  const onDragEnd = (result: any) => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === 'column') {\n      const columnOrder = reorder(\n        state.columnOrder,\n        result.source.index,\n        result.destination.index\n      );\n      setState({\n        ...state,\n        columnOrder,\n      } as any);\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      const column = state.columns[result.source.droppableId];\n      const items = reorder(\n        column.items,\n        result.source.index,\n        result.destination.index\n      );\n\n      // updating column entry\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [column.id]: {\n            ...column,\n            items,\n          },\n        },\n      };\n      setState(newState);\n      return;\n    }\n\n    const sourceColumn = state.columns[result.source.droppableId];\n    const destinationColumn = state.columns[result.destination.droppableId];\n    const item = sourceColumn.items[result.source.index];\n\n    const newSourceColumn = {\n      ...sourceColumn,\n      items: [...sourceColumn.items],\n    };\n    newSourceColumn.items.splice(result.source.index, 1);\n\n    const newDestinationColumn = {\n      ...destinationColumn,\n      items: [...destinationColumn.items],\n    };\n    newDestinationColumn.items.splice(result.destination.index, 0, item);\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newSourceColumn.id]: newSourceColumn,\n        [newDestinationColumn.id]: newDestinationColumn,\n      },\n    };\n\n    setState(newState);\n  };\n\n  const getItemStyle = (isDragging: any, draggableStyle: any) => ({\n    display: 'flex',\n    flexDirection: 'row',\n    ...draggableStyle,\n  });\n\n  const createCardBox = (cardBox: any) => {\n    setCardBoxes([...cardBoxes, cardBox] as any);\n  };\n\n  const reorder = (list: any, startIndex: any, endIndex: any) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  return (\n    <>\n      <Top projectName={props.projectName} />\n      <div className=\"board\">\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable\n            direction=\"horizontal\"\n            droppableId=\"all-droppables\"\n            type=\"column\"\n          >\n            {(provided: any, snapshot: any) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.droppableProps.style\n                )}\n              >\n                {state.columnOrder.map((columnId: any, index: any) => {\n                  return (\n                    <Column\n                      key={columnId}\n                      column={state.columns[columnId]}\n                      index={index}\n                      reorder={reorder}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <AddSection createCardBox={createCardBox} />\n      </div>\n    </>\n  );\n}\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}