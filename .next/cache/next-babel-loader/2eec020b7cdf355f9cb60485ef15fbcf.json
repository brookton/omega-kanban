{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/main.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Disclaimer from './disclaimer';\nimport Board from './board';\nimport { useRouter } from 'next/router';\nexport default function Main() {\n  const [projectName, setProjectName] = React.useState(props.porjectName);\n  const {\n    0: isAcceptDisclaimer,\n    1: setIsAcceptDisclaimer\n  } = useState(false);\n  const router = useRouter();\n  const {\n    _id,\n    project\n  } = router.query;\n  useEffect(() => {\n    if (localStorage.getItem('omegakanbanaccept')) {\n      setIsAcceptDisclaimer(true);\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Board // setView={setView}\n  , {\n    setProjectName: setProjectName,\n    projectName: projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), !isAcceptDisclaimer && __jsx(Disclaimer, {\n    setIsAcceptDisclaimer: setIsAcceptDisclaimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/main.tsx"],"names":["React","useState","useEffect","Disclaimer","Board","useRouter","Main","projectName","setProjectName","props","porjectName","isAcceptDisclaimer","setIsAcceptDisclaimer","router","_id","project","query","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAMA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,KAAK,CAACC,QAAN,CAAeQ,KAAK,CAACC,WAArB,CAAtC;AACA,QAAM;AAAA,OAACC,kBAAD;AAAA,OAAqBC;AAArB,MAA8CX,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAMY,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAmBF,MAAM,CAACG,KAAhC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAJ,EAA+C;AAC7CN,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;AACF,GAJQ,CAAT;AAMA,SACE,4BACE,MAAC,KAAD,CACE;AADF;AAEE,IAAA,cAAc,EAAEJ,cAFlB;AAGE,IAAA,WAAW,EAAED,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMG,CAACI,kBAAD,IACC,MAAC,UAAD;AAAY,IAAA,qBAAqB,EAAEC,qBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF;AAYD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectName from './project-name';\nimport Disclaimer from './disclaimer';\nimport Board from './board';\nimport { useRouter } from 'next/router';\n\ninterface iProjectProps {\n  projectName: string;\n}\n\nexport default function Main() {\n  const [projectName, setProjectName] = React.useState(props.porjectName);\n  const [isAcceptDisclaimer, setIsAcceptDisclaimer] = useState(false);\n  const router = useRouter();\n  const { _id, project } = router.query;\n\n  useEffect(() => {\n    if (localStorage.getItem('omegakanbanaccept')) {\n      setIsAcceptDisclaimer(true);\n    }\n  });\n\n  return (\n    <>\n      <Board\n        // setView={setView}\n        setProjectName={setProjectName}\n        projectName={projectName}\n      />\n      {!isAcceptDisclaimer && (\n        <Disclaimer setIsAcceptDisclaimer={setIsAcceptDisclaimer} />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}