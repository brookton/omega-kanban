{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-header.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nfunction CardHeader(props) {\n  _s();\n\n  var _useState = useState(props.currentCard.isCardCompleted),\n      isCardCompleted = _useState[0],\n      setIsCardCompleted = _useState[1];\n\n  var handleCardComplete = function handleCardComplete() {\n    //props.completeCard(props.currentColumn._id, props.currentCard._id);\n    var newCard = {\n      _id: props.currentCard._id,\n      cardTitle: undefined,\n      note: undefined,\n      isCardCompleted: true,\n      isArchived: undefined,\n      dueDate: null\n    };\n    props.updateCard(props.currentColumn._id, newCard);\n    setIsCardCompleted(true);\n  };\n\n  var daysDifference = function daysDifference(d0, d1) {\n    var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);\n    var result = 'a day';\n    var diffNum = Math.round(diff / 8.64e7);\n\n    if (diffNum > 1 && diffNum < 2) {\n      result = 'two days';\n    } else if (diffNum >= 2 && diffNum < 30) {\n      result = \"\".concat(diffNum, \" days\");\n    } else if (diffNum >= 30 && diffNum < 32) {\n      result = \"a month\";\n    } else if (diffNum >= 32 && diffNum < 62) {\n      result = \"one month and \".concat(diffNum - 31, \" days\");\n    } else if (diffNum >= 62 && diffNum < 365) {\n      result = \"\".concat(Math.floor(diffNum / 30), \" months and \").concat(diffNum - 30 * Math.floor(diffNum / 30), \" days\");\n    }\n\n    return result;\n  };\n\n  return __jsx(\"div\", {\n    className: \"card-detail-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, props.currentCard.isArchived ? __jsx(\"div\", {\n    className: \"card-modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: \"archive-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Archived\"), __jsx(\"div\", {\n    className: \"card-modal-header-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"text-green fas fa-check-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Completed on \".concat(props.convertDate(props.currentCard.updatedAt))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Time to complete : \".concat(daysDifference(props.currentCard.updatedAt, props.currentCard.createdAt))))) : isCardCompleted ? __jsx(\"div\", {\n    className: \"card-modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      props.setCategory('archive');\n      props.handleOpen();\n    },\n    className: \"archive-btn cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Archive\"), __jsx(\"div\", {\n    className: \"card-modal-header-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"text-green fas fa-check-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Completed on \".concat(props.convertDate(props.currentCard.updatedAt))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Time to complete: \".concat(daysDifference(props.currentCard.updatedAt, props.currentCard.createdAt))))) : __jsx(\"div\", {\n    className: \"card-modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return handleCardComplete();\n    },\n    className: \"complete-btn cursor-pointer border-none bg-head-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Complete\")), __jsx(\"div\", {\n    onClick: function onClick() {\n      return props.handleModalClose();\n    },\n    className: \"card-detail-close float-right cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(CardHeader, \"0y1T7trct/R+jxCijJyiXPuOa8I=\");\n\n_c = CardHeader;\nexport default CardHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardHeader\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-header.tsx"],"names":["React","useState","CardHeader","props","currentCard","isCardCompleted","setIsCardCompleted","handleCardComplete","newCard","_id","cardTitle","undefined","note","isArchived","dueDate","updateCard","currentColumn","daysDifference","d0","d1","diff","Date","setHours","result","diffNum","Math","round","floor","convertDate","updatedAt","createdAt","setCategory","handleOpen","handleModalClose"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ICommonProps from './interfaces/icommonprops';\n\ninterface CardHeaderProps extends ICommonProps {\n  updateCard: (columnId: string, card: INewCard) => void;\n  convertDate: (date: Date) => string;\n  handleOpen: () => void;\n  setCategory: (category: string) => void;\n  handleModalClose: () => void;\n}\n\nfunction CardHeader(props: CardHeaderProps) {\n  const [isCardCompleted, setIsCardCompleted] = useState(\n    props.currentCard.isCardCompleted\n  );\n\n  const handleCardComplete = () => {\n    //props.completeCard(props.currentColumn._id, props.currentCard._id);\n    const newCard = {\n      _id: props.currentCard._id,\n      cardTitle: undefined,\n      note: undefined,\n      isCardCompleted: true,\n      isArchived: undefined,\n      dueDate: null,\n    };\n    props.updateCard(props.currentColumn._id, newCard);\n    setIsCardCompleted(true);\n  };\n\n  const daysDifference = (d0: Date, d1: Date) => {\n    let diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);\n    let result = 'a day';\n    const diffNum = Math.round(diff / 8.64e7);\n    if (diffNum > 1 && diffNum < 2) {\n      result = 'two days';\n    } else if (diffNum >= 2 && diffNum < 30) {\n      result = `${diffNum} days`;\n    } else if (diffNum >= 30 && diffNum < 32) {\n      result = `a month`;\n    } else if (diffNum >= 32 && diffNum < 62) {\n      result = `one month and ${diffNum - 31} days`;\n    } else if (diffNum >= 62 && diffNum < 365) {\n      result = `${Math.floor(diffNum / 30)} months and ${\n        diffNum - 30 * Math.floor(diffNum / 30)\n      } days`;\n    }\n    return result;\n  };\n  return (\n    <div className=\"card-detail-header\">\n      {props.currentCard.isArchived ? (\n        <div className=\"card-modal-header\">\n          <button className=\"archive-btn\">Archived</button>\n          <div className=\"card-modal-header-check\">\n            <i className=\"text-green fas fa-check-circle\"></i>\n          </div>\n          <div>\n            <div className=\"text-grey\">{`Completed on ${props.convertDate(\n              props.currentCard.updatedAt\n            )}`}</div>\n            <div>{`Time to complete : ${daysDifference(\n              props.currentCard.updatedAt,\n              props.currentCard.createdAt\n            )}`}</div>\n          </div>\n        </div>\n      ) : isCardCompleted ? (\n        <div className=\"card-modal-header\">\n          <button\n            onClick={() => {\n              props.setCategory('archive');\n              props.handleOpen();\n            }}\n            className=\"archive-btn cursor-pointer\"\n          >\n            Archive\n          </button>\n          <div className=\"card-modal-header-check\">\n            <i className=\"text-green fas fa-check-circle\"></i>\n          </div>\n          <div>\n            <div className=\"text-grey\">{`Completed on ${props.convertDate(\n              props.currentCard.updatedAt\n            )}`}</div>\n            <div>{`Time to complete: ${daysDifference(\n              props.currentCard.updatedAt,\n              props.currentCard.createdAt\n            )}`}</div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"card-modal-header\">\n          <button\n            onClick={() => handleCardComplete()}\n            className=\"complete-btn cursor-pointer border-none bg-head-1\"\n          >\n            Complete\n          </button>\n        </div>\n      )}\n      <div\n        onClick={() => props.handleModalClose()}\n        className=\"card-detail-close float-right cursor-pointer\"\n      >\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  );\n}\nexport default CardHeader;\n"]},"metadata":{},"sourceType":"module"}