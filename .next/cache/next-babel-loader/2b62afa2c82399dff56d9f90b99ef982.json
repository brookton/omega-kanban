{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-header.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nfunction CardHeader(props) {\n  _s();\n\n  var _useState = useState(props.currentCard.isCardCompleted),\n      isCardCompleted = _useState[0],\n      setIsCardCompleted = _useState[1];\n\n  function daysDifference(d0, d1) {\n    var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);\n    var result = 'a day';\n    var diffNum = Math.round(diff / 8.64e7);\n\n    if (diffNum > 1 && diffNum < 2) {\n      result = 'two days';\n    } else if (diffNum >= 2 && diffNum < 32) {\n      result = 'two days';\n    }\n\n    return result;\n  }\n\n  return __jsx(\"div\", {\n    className: \"card-detail-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, isCardCompleted ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"card-modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"archive-btn cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Archive\"), __jsx(\"div\", {\n    className: \"card-modal-header-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"text-green fas fa-check-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, \"Completed on \".concat(props.convertDate(props.currentCard.updatedAt))), __jsx(\"div\", {\n    className: \"text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"Time to complete : \".concat(daysDifference(props.currentCard.updatedAt, props.currentCard.createdAt)))))) : __jsx(\"button\", {\n    onClick: function onClick() {\n      return setIsCardCompleted(true);\n    },\n    className: \"complete-btn cursor-pointer border-none bg-head-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Complete\"), __jsx(\"div\", {\n    onClick: function onClick() {\n      return props.handleModalClose();\n    },\n    className: \"card-detail-close float-right cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(CardHeader, \"0y1T7trct/R+jxCijJyiXPuOa8I=\");\n\n_c = CardHeader;\nexport default CardHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardHeader\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-header.tsx"],"names":["React","useState","CardHeader","props","currentCard","isCardCompleted","setIsCardCompleted","daysDifference","d0","d1","diff","Date","setHours","result","diffNum","Math","round","convertDate","updatedAt","createdAt","handleModalClose"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAAgC;AAAA;;AAAA,kBACgBF,QAAQ,CACpDE,KAAK,CAACC,WAAN,CAAkBC,eADkC,CADxB;AAAA,MACvBA,eADuB;AAAA,MACNC,kBADM;;AAI9B,WAASC,cAAT,CAAwBC,EAAxB,EAAkCC,EAAlC,EAA4C;AAC1C,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,EAAV,EAAcG,QAAd,CAAuB,EAAvB,IAA6B,IAAID,IAAJ,CAAS,CAACH,EAAV,EAAcI,QAAd,CAAuB,EAAvB,CAAxC;AACA,QAAIC,MAAM,GAAG,OAAb;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,MAAlB,CAAhB;;AACA,QAAII,OAAO,GAAG,CAAV,IAAeA,OAAO,GAAG,CAA7B,EAAgC;AAC9BD,MAAAA,MAAM,GAAG,UAAT;AACD,KAFD,MAEO,IAAIC,OAAO,IAAI,CAAX,IAAgBA,OAAO,GAAG,EAA9B,EAAkC;AACvCD,MAAAA,MAAM,GAAG,UAAT;AACD;;AACD,WAAOA,MAAP;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,eAAe,GACd,4BACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,4BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA4CF,KAAK,CAACc,WAAN,CAC1Cd,KAAK,CAACC,WAAN,CAAkBc,SADwB,CAA5C,EADF,EAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAkDX,cAAc,CAC9DJ,KAAK,CAACC,WAAN,CAAkBc,SAD4C,EAE9Df,KAAK,CAACC,WAAN,CAAkBe,SAF4C,CAAhE,EAJF,CALF,CADF,CADc,GA8Bd;AACE,IAAA,OAAO,EAAE;AAAA,aAAMb,kBAAkB,CAAC,IAAD,CAAxB;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,mDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ,EAsCE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMH,KAAK,CAACiB,gBAAN,EAAN;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,8CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAtCF,CADF;AA+CD;;GA9DQlB,U;;KAAAA,U;AA+DT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction CardHeader(props: any) {\n  const [isCardCompleted, setIsCardCompleted] = useState(\n    props.currentCard.isCardCompleted\n  );\n  function daysDifference(d0: Date, d1: Date) {\n    let diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);\n    let result = 'a day';\n    const diffNum = Math.round(diff / 8.64e7);\n    if (diffNum > 1 && diffNum < 2) {\n      result = 'two days';\n    } else if (diffNum >= 2 && diffNum < 32) {\n      result = 'two days';\n    }\n    return result;\n  }\n  return (\n    <div className=\"card-detail-header\">\n      {isCardCompleted ? (\n        <>\n          <div className=\"card-modal-header\">\n            <button className=\"archive-btn cursor-pointer\">Archive</button>\n            <div className=\"card-modal-header-check\">\n              <i className=\"text-green fas fa-check-circle\"></i>\n            </div>\n            <div>\n              <div className=\"text-grey\">{`Completed on ${props.convertDate(\n                props.currentCard.updatedAt\n              )}`}</div>\n              <div className=\"text-grey\">{`Time to complete : ${daysDifference(\n                props.currentCard.updatedAt,\n                props.currentCard.createdAt\n              )}`}</div>\n            </div>\n          </div>\n          {/* <div className=\"card-modal-header-second\">\n            <div>\n              <i className=\"far fa-clock\"></i>\n            </div>\n            <div>\n              <div>{`Time to complete`}</div>\n              <div>{`${props.convertDate(\n                props.currentCard.createdAt - props.currentCard.updatedAt\n              )}`}</div>\n            </div>\n          </div> */}\n        </>\n      ) : (\n        <button\n          onClick={() => setIsCardCompleted(true)}\n          className=\"complete-btn cursor-pointer border-none bg-head-1\"\n        >\n          Complete\n        </button>\n      )}\n      <div\n        onClick={() => props.handleModalClose()}\n        className=\"card-detail-close float-right cursor-pointer\"\n      >\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  );\n}\nexport default CardHeader;\n"]},"metadata":{},"sourceType":"module"}