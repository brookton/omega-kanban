{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport Column from './column';\nimport AddSection from './add-section';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Board(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState({\n    columns: {\n      'column-0': {\n        id: 'column-0',\n        title: 'Plan',\n        cards: [],\n        colorIndex: 0\n      },\n      'column-1': {\n        id: 'column-1',\n        title: 'Progress',\n        cards: [],\n        colorIndex: 1\n      },\n      'column-2': {\n        id: 'column-2',\n        title: 'Complete',\n        cards: [],\n        colorIndex: 2\n      }\n    },\n    columnOrder: ['column-0', 'column-1', 'column-2']\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(0),\n      colorIndex = _useState2[0],\n      setColorIndex = _useState2[1];\n\n  useEffect(function () {\n    setColorIndex(columnOrder.length);\n  }, []);\n\n  var addCard = function addCard(columnId, cardTitle) {\n    var newCard = {\n      id: uuidv4(),\n      cardTitle: cardTitle\n    };\n    state.columns[columnId].cards.push(newCard);\n    setState(_objectSpread({}, state));\n  };\n\n  var addSection = function addSection(sectionTitle) {\n    var newSection = {\n      id: uuidv4(),\n      title: sectionTitle,\n      cards: [],\n      colorIndex: state.columnOrder.length\n    };\n    state.columns[newSection.id] = newSection;\n    state.columnOrder.push(newSection.id);\n    setState(_objectSpread({}, state));\n  };\n\n  var updateSectionTitle = function updateSectionTitle(id, sectionTitle) {\n    state.columns[id].title = sectionTitle;\n    setState(_objectSpread({}, state));\n  };\n\n  var deleteColumn = function deleteColumn(id) {\n    delete state.columns[id];\n    state.columnOrder.splice(state.columnOrder.indexOf(id), 1);\n    setState(_objectSpread({}, state));\n  };\n\n  var onDragEnd = function onDragEnd(result) {\n    var _objectSpread3;\n\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === 'column') {\n      var _columnOrder = reorder(state.columnOrder, result.source.index, result.destination.index);\n\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        columnOrder: _columnOrder\n      }));\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      var column = state.columns[result.source.droppableId];\n      var cards = reorder(column.cards, result.source.index, result.destination.index);\n\n      var _newState = _objectSpread(_objectSpread({}, state), {}, {\n        columns: _objectSpread(_objectSpread({}, state.columns), {}, _defineProperty({}, column.id, _objectSpread(_objectSpread({}, column), {}, {\n          cards: cards\n        })))\n      });\n\n      setState(_newState);\n      return;\n    }\n\n    var sourceColumn = state.columns[result.source.droppableId];\n    var destinationColumn = state.columns[result.destination.droppableId];\n    var card = sourceColumn.cards[result.source.index];\n\n    var newSourceColumn = _objectSpread(_objectSpread({}, sourceColumn), {}, {\n      cards: _toConsumableArray(sourceColumn.cards)\n    });\n\n    newSourceColumn.cards.splice(result.source.index, 1);\n\n    var newDestinationColumn = _objectSpread(_objectSpread({}, destinationColumn), {}, {\n      cards: _toConsumableArray(destinationColumn.cards)\n    });\n\n    newDestinationColumn.cards.splice(result.destination.index, 0, card);\n\n    var newState = _objectSpread(_objectSpread({}, state), {}, {\n      columns: _objectSpread(_objectSpread({}, state.columns), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, newSourceColumn.id, newSourceColumn), _defineProperty(_objectSpread3, newDestinationColumn.id, newDestinationColumn), _objectSpread3))\n    });\n\n    setState(newState);\n  };\n\n  var getItemStyle = function getItemStyle(isDragging, draggableStyle) {\n    return _objectSpread({\n      display: 'flex',\n      flexDirection: 'row'\n    }, draggableStyle);\n  };\n\n  var reorder = function reorder(list, startIndex, endIndex) {\n    var result = Array.from(list);\n\n    var _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = _slicedToArray(_result$splice, 1),\n        removed = _result$splice2[0];\n\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Top, {\n    setView: props.setView,\n    setProjectName: props.setProjectName,\n    projectName: props.projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, __jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, __jsx(Droppable, {\n    direction: \"horizontal\",\n    droppableId: \"all-droppables\",\n    type: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      style: getItemStyle(snapshot.isDragging, provided.droppableProps.style),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }), state.columnOrder.map(function (columnId, index) {\n      return __jsx(Column, {\n        key: columnId,\n        column: state.columns[columnId],\n        index: index,\n        reorder: reorder,\n        addCard: addCard,\n        updateSectionTitle: updateSectionTitle,\n        deleteColumn: deleteColumn,\n        onDragEnd: onDragEnd,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      });\n    }), provided.placeholder);\n  })), __jsx(AddSection, {\n    colorIndex: state.columnOrder.length,\n    addSection: addSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Board, \"BfIphA/QtKh65T9LeoC5Va7g/fI=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx"],"names":["React","useState","useEffect","DragDropContext","Droppable","Top","Column","AddSection","v4","uuidv4","Board","props","columns","id","title","cards","colorIndex","columnOrder","state","setState","setColorIndex","length","addCard","columnId","cardTitle","newCard","push","addSection","sectionTitle","newSection","updateSectionTitle","deleteColumn","splice","indexOf","onDragEnd","result","destination","type","reorder","source","index","droppableId","column","newState","sourceColumn","destinationColumn","card","newSourceColumn","newDestinationColumn","getItemStyle","isDragging","draggableStyle","display","flexDirection","list","startIndex","endIndex","Array","from","removed","setView","setProjectName","projectName","provided","snapshot","innerRef","droppableProps","style","map","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport Column from './column';\nimport AddSection from './add-section';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Board(props: any) {\n  const [state, setState] = useState({\n    columns: {\n      'column-0': {\n        id: 'column-0',\n        title: 'Plan',\n        cards: [],\n        colorIndex: 0,\n      },\n      'column-1': {\n        id: 'column-1',\n        title: 'Progress',\n        cards: [],\n        colorIndex: 1,\n      },\n      'column-2': {\n        id: 'column-2',\n        title: 'Complete',\n        cards: [],\n        colorIndex: 2,\n      },\n    },\n    columnOrder: ['column-0', 'column-1', 'column-2'],\n  } as any);\n  const [colorIndex, setColorIndex] = useState(0);\n  useEffect(() => {\n    setColorIndex(columnOrder.length);\n  }, []);\n  const addCard = (columnId: any, cardTitle: any) => {\n    const newCard = {\n      id: uuidv4(),\n      cardTitle,\n    };\n    state.columns[columnId].cards.push(newCard);\n    setState({\n      ...state,\n    } as any);\n  };\n\n  const addSection = (sectionTitle: any) => {\n    const newSection = {\n      id: uuidv4(),\n      title: sectionTitle,\n      cards: [],\n      colorIndex: state.columnOrder.length,\n    };\n    state.columns[newSection.id] = newSection;\n    state.columnOrder.push(newSection.id);\n    setState({\n      ...state,\n    } as any);\n  };\n\n  const updateSectionTitle = (id: any, sectionTitle: any) => {\n    state.columns[id].title = sectionTitle;\n    setState({\n      ...state,\n    } as any);\n  };\n\n  const deleteColumn = (id: any) => {\n    delete state.columns[id];\n    state.columnOrder.splice(state.columnOrder.indexOf(id), 1);\n    setState({\n      ...state,\n    } as any);\n  };\n\n  const onDragEnd = (result: any) => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === 'column') {\n      const columnOrder = reorder(\n        state.columnOrder,\n        result.source.index,\n        result.destination.index\n      );\n      setState({\n        ...state,\n        columnOrder,\n      } as any);\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      const column = state.columns[result.source.droppableId];\n      const cards = reorder(\n        column.cards,\n        result.source.index,\n        result.destination.index\n      );\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [column.id]: {\n            ...column,\n            cards,\n          },\n        },\n      };\n      setState(newState);\n      return;\n    }\n\n    const sourceColumn = state.columns[result.source.droppableId];\n    const destinationColumn = state.columns[result.destination.droppableId];\n    const card = sourceColumn.cards[result.source.index];\n\n    const newSourceColumn = {\n      ...sourceColumn,\n      cards: [...sourceColumn.cards],\n    };\n    newSourceColumn.cards.splice(result.source.index, 1);\n\n    const newDestinationColumn = {\n      ...destinationColumn,\n      cards: [...destinationColumn.cards],\n    };\n    newDestinationColumn.cards.splice(result.destination.index, 0, card);\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newSourceColumn.id]: newSourceColumn,\n        [newDestinationColumn.id]: newDestinationColumn,\n      },\n    };\n\n    setState(newState);\n  };\n\n  const getItemStyle = (isDragging: any, draggableStyle: any) => ({\n    display: 'flex',\n    flexDirection: 'row',\n    ...draggableStyle,\n  });\n\n  const reorder = (list: any, startIndex: any, endIndex: any) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  return (\n    <>\n      <Top\n        setView={props.setView}\n        setProjectName={props.setProjectName}\n        projectName={props.projectName}\n      />\n      <div className=\"board\">\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable\n            direction=\"horizontal\"\n            droppableId=\"all-droppables\"\n            type=\"column\"\n          >\n            {(provided: any, snapshot: any) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.droppableProps.style\n                )}\n              >\n                {state.columnOrder.map((columnId: any, index: any) => {\n                  return (\n                    <Column\n                      key={columnId}\n                      column={state.columns[columnId]}\n                      index={index}\n                      reorder={reorder}\n                      addCard={addCard}\n                      updateSectionTitle={updateSectionTitle}\n                      deleteColumn={deleteColumn}\n                      onDragEnd={onDragEnd}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <AddSection\n          colorIndex={state.columnOrder.length}\n          addSection={addSection}\n        />\n      </div>\n    </>\n  );\n}\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}