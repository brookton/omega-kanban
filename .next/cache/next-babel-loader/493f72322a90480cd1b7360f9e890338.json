{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nfunction CardNote(props) {\n  const {\n    0: note,\n    1: setNote\n  } = useState(props.currentCard.note);\n  const {\n    0: isNoting,\n    1: setIsNoting\n  } = useState(false);\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      const newCard = {\n        _id: props.currentCard._id,\n        columnId: undefined,\n        cardTitle: undefined,\n        note: note,\n        isCardCompleted: undefined,\n        isArchived: undefined,\n        dueDate: null\n      };\n      props.updateCard(props.currentColumn._id, newCard);\n      setIsNoting(false);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"card-deatil-note-box\"\n  }, props.currentCard.isArchived ? note.length < 1 ? __jsx(\"div\", {\n    className: \"card-detail-note\"\n  }, \"This task has no notes.\") : __jsx(\"div\", {\n    className: \"card-detail-note\"\n  }, note.length > 70 ? note.substr(0, 40) + '...' : note) : isNoting ? __jsx(\"input\", {\n    id: props.currentCard._id,\n    className: \"card-deatil-note-input border-none\",\n    type: \"text\",\n    autoFocus: true,\n    onChange: e => setNote(e.target.value),\n    value: note,\n    onBlur: () => setIsNoting(false),\n    onKeyDown: e => handleKeyDown(e)\n  }) : note.length < 1 ? __jsx(\"div\", {\n    onClick: () => setIsNoting(true),\n    className: \"card-detail-note cursor-text\"\n  }, \"This task has no notes.\") : __jsx(\"div\", {\n    onClick: () => setIsNoting(true),\n    className: \"card-detail-note cursor-text\"\n  }, note.length > 70 ? note.substr(0, 40) + '...' : note));\n}\n\nexport default CardNote;","map":null,"metadata":{},"sourceType":"module"}