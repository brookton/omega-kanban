{"ast":null,"code":"import Activity from '../../middleware/models/activity';\n\nrequire('../../middleware/db/mongoose');\n\nexport default (async (request, response) => {\n  const {\n    cardId,\n    activity\n  } = request.body;\n\n  try {\n    const newActivity = new Activity({\n      cardId,\n      activity\n    });\n    await newActivity.save();\n\n    try {\n      return response.status(200).json({\n        success: true,\n        data: newActivity\n      });\n    } catch (e) {\n      return response.status(500).json({\n        success: false,\n        message: 'failed to add an activity'\n      });\n    }\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to add an activity'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/pages/api/add-activity.tsx"],"names":["Activity","require","request","response","cardId","activity","body","newActivity","save","status","json","success","data","e","message"],"mappings":"AACA,OAAOA,QAAP,MAAqB,kCAArB;;AACAC,OAAO,CAAC,8BAAD,CAAP;;AAEA,gBAAe,OAAOC,OAAP,EAAgCC,QAAhC,KAA8D;AAC3E,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBH,OAAO,CAACI,IAArC;;AACA,MAAI;AACF,UAAMC,WAAW,GAAG,IAAIP,QAAJ,CAAa;AAAEI,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAb,CAApB;AACA,UAAME,WAAW,CAACC,IAAZ,EAAN;;AACA,QAAI;AACF,aAAOL,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,IAAI,EAAEL;AAAvB,OAA1B,CAAP;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACV,aAAOV,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BC,QAAAA,OAAO,EAAE,KADsB;AAE/BG,QAAAA,OAAO,EAAE;AAFsB,OAA1B,CAAP;AAID;AACF,GAXD,CAWE,OAAOD,CAAP,EAAU;AACV,WAAOV,QAAQ,CACZM,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBG,MAAAA,OAAO,EAAE;AAA3B,KAFD,CAAP;AAGD;AACF,CAlBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport Activity from '../../middleware/models/activity';\nrequire('../../middleware/db/mongoose');\n\nexport default async (request: NextApiRequest, response: NextApiResponse) => {\n  const { cardId, activity } = request.body;\n  try {\n    const newActivity = new Activity({ cardId, activity });\n    await newActivity.save();\n    try {\n      return response.status(200).json({ success: true, data: newActivity });\n    } catch (e) {\n      return response.status(500).json({\n        success: false,\n        message: 'failed to add an activity',\n      });\n    }\n  } catch (e) {\n    return response\n      .status(500)\n      .json({ success: false, message: 'failed to add an activity' });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}