{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Main from '../../components/main';\nimport IndexPage from '../../components/index-page';\nimport { SnackbarProvider } from 'notistack';\nimport { useRouter } from 'next/router';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport default function Index() {\n  const {\n    0: isValid,\n    1: setIsValid\n  } = useState(false);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const router = useRouter();\n  const {\n    _id,\n    project\n  } = router.query;\n  useEffect(() => {\n    if (_id) getRouter(_id);\n  }, [_id]);\n\n  const getRouter = _id => {\n    fetch(`/api/get-router`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setIsValid(true);\n      } else {\n        setTimeout(() => {\n          router.replace('/');\n        }, 500);\n        setMessage('URL is not valid.');\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while getting a route:${err.message}`);\n    });\n  };\n\n  return __jsx(SnackbarProvider, {\n    maxSnack: 3\n  }, __jsx(IndexPage, null), isValid ? _id && project ? __jsx(Main, {\n    _id: _id,\n    projectName: project\n  }) : __jsx(\"div\", {\n    style: {\n      backgroundColor: 'rgb(95, 188, 190)',\n      width: '100%',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, __jsx(CircularProgress, null)) : __jsx(\"div\", {\n    style: {\n      backgroundColor: 'rgb(95, 188, 190)',\n      width: '100%',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, __jsx(\"div\", null, message)));\n}","map":null,"metadata":{},"sourceType":"module"}