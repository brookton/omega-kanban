{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/checklistitem.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nfunction ChecklistItem(props) {\n  const {\n    0: checklist,\n    1: setChecklist\n  } = useState(props.checklist.checklist);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n\n  const handleChecklistSubmit = e => {\n    if (e.key === 'Enter') {\n      props.updateChecklist(props.currentColumn.id, props.currentCard.id, props.checklist.id, checklist);\n    }\n  };\n\n  const handleCompleteChecklist = () => {\n    props.completeChecklist(props.currentColumn.id, props.currentCard.id, props.checklist.id, !isChecked);\n  };\n\n  return __jsx(\"div\", {\n    id: props.checklist.id,\n    className: \"display-flex checklist-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"checklist-circle cursor-pointer\",\n    onClick: () => handleCompleteChecklist(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, isChecked ? __jsx(\"i\", {\n    className: \"far fa-check-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }) : __jsx(\"i\", {\n    className: \"far fa-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  })), __jsx(\"input\", {\n    value: checklist,\n    onChange: e => setChecklist(e.target.value),\n    onKeyDown: e => handleChecklistSubmit(e),\n    className: \"checklist-content border-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ChecklistItem;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/checklistitem.tsx"],"names":["React","useState","ChecklistItem","props","checklist","setChecklist","isChecked","setIsChecked","handleChecklistSubmit","e","key","updateChecklist","currentColumn","id","currentCard","handleCompleteChecklist","completeChecklist","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;AACjC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BJ,QAAQ,CAACE,KAAK,CAACC,SAAN,CAAgBA,SAAjB,CAA1C;AACA,QAAM;AAAA,OAACE,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMO,qBAAqB,GAAIC,CAAD,IAAY;AACxC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBP,MAAAA,KAAK,CAACQ,eAAN,CACER,KAAK,CAACS,aAAN,CAAoBC,EADtB,EAEEV,KAAK,CAACW,WAAN,CAAkBD,EAFpB,EAGEV,KAAK,CAACC,SAAN,CAAgBS,EAHlB,EAIET,SAJF;AAMD;AACF,GATD;;AAUA,QAAMW,uBAAuB,GAAG,MAAM;AACpCZ,IAAAA,KAAK,CAACa,iBAAN,CACEb,KAAK,CAACS,aAAN,CAAoBC,EADtB,EAEEV,KAAK,CAACW,WAAN,CAAkBD,EAFpB,EAGEV,KAAK,CAACC,SAAN,CAAgBS,EAHlB,EAIE,CAACP,SAJH;AAMD,GAPD;;AAQA,SACE;AAAK,IAAA,EAAE,EAAEH,KAAK,CAACC,SAAN,CAAgBS,EAAzB;AAA6B,IAAA,SAAS,EAAC,4BAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,OAAO,EAAE,MAAME,uBAAuB,EAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGT,SAAS,GACR;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGR;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF,EAWE;AACE,IAAA,KAAK,EAAEF,SADT;AAEE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,YAAY,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF/B;AAGE,IAAA,SAAS,EAAGT,CAAD,IAAOD,qBAAqB,CAACC,CAAD,CAHzC;AAIE,IAAA,SAAS,EAAC,+BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAoBD;;AACD,eAAeP,aAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction ChecklistItem(props: any) {\n  const [checklist, setChecklist] = useState(props.checklist.checklist);\n  const [isChecked, setIsChecked] = useState(false);\n  const handleChecklistSubmit = (e: any) => {\n    if (e.key === 'Enter') {\n      props.updateChecklist(\n        props.currentColumn.id,\n        props.currentCard.id,\n        props.checklist.id,\n        checklist\n      );\n    }\n  };\n  const handleCompleteChecklist = () => {\n    props.completeChecklist(\n      props.currentColumn.id,\n      props.currentCard.id,\n      props.checklist.id,\n      !isChecked\n    );\n  };\n  return (\n    <div id={props.checklist.id} className=\"display-flex checklist-row\">\n      <div\n        className=\"checklist-circle cursor-pointer\"\n        onClick={() => handleCompleteChecklist()}\n      >\n        {isChecked ? (\n          <i className=\"far fa-check-circle\"></i>\n        ) : (\n          <i className=\"far fa-circle\"></i>\n        )}\n      </div>\n      <input\n        value={checklist}\n        onChange={(e) => setChecklist(e.target.value)}\n        onKeyDown={(e) => handleChecklistSubmit(e)}\n        className=\"checklist-content border-none\"\n      ></input>\n    </div>\n  );\n}\nexport default ChecklistItem;\n"]},"metadata":{},"sourceType":"module"}