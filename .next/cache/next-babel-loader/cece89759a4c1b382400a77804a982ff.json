{"ast":null,"code":"import Column from '../../middleware/models/column';\n\nrequire('../../middleware/db/mongoose');\n\nexport default (async (request, response) => {\n  const {\n    projectId,\n    title,\n    colorIndex\n  } = request.body;\n\n  try {\n    const newColumn = new Column({\n      projectId,\n      title,\n      colorIndex\n    });\n    await newColumn.save();\n\n    try {\n      return response.status(200).json({\n        success: true,\n        data: newColumn\n      });\n    } catch (e) {\n      return response.status(500).json({\n        success: false,\n        message: 'failed to add a column'\n      });\n    }\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to add a column'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/pages/api/add-column.tsx"],"names":["Column","require","request","response","projectId","title","colorIndex","body","newColumn","save","status","json","success","data","e","message"],"mappings":"AACA,OAAOA,MAAP,MAAmB,gCAAnB;;AACAC,OAAO,CAAC,8BAAD,CAAP;;AAEA,gBAAe,OAAOC,OAAP,EAAgCC,QAAhC,KAA8D;AAC3E,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAAmCJ,OAAO,CAACK,IAAjD;;AACA,MAAI;AACF,UAAMC,SAAS,GAAG,IAAIR,MAAJ,CAAW;AAC3BI,MAAAA,SAD2B;AAE3BC,MAAAA,KAF2B;AAG3BC,MAAAA;AAH2B,KAAX,CAAlB;AAKA,UAAME,SAAS,CAACC,IAAV,EAAN;;AACA,QAAI;AACF,aAAON,QAAQ,CAACO,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,IAAI,EAAEL;AAAvB,OAA1B,CAAP;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACV,aAAOX,QAAQ,CAACO,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BC,QAAAA,OAAO,EAAE,KADsB;AAE/BG,QAAAA,OAAO,EAAE;AAFsB,OAA1B,CAAP;AAID;AACF,GAfD,CAeE,OAAOD,CAAP,EAAU;AACV,WAAOX,QAAQ,CACZO,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBG,MAAAA,OAAO,EAAE;AAA3B,KAFD,CAAP;AAGD;AACF,CAtBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport Column from '../../middleware/models/column';\nrequire('../../middleware/db/mongoose');\n\nexport default async (request: NextApiRequest, response: NextApiResponse) => {\n  const { projectId, title, colorIndex } = request.body;\n  try {\n    const newColumn = new Column({\n      projectId,\n      title,\n      colorIndex,\n    });\n    await newColumn.save();\n    try {\n      return response.status(200).json({ success: true, data: newColumn });\n    } catch (e) {\n      return response.status(500).json({\n        success: false,\n        message: 'failed to add a column',\n      });\n    }\n  } catch (e) {\n    return response\n      .status(500)\n      .json({ success: false, message: 'failed to add a column' });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}