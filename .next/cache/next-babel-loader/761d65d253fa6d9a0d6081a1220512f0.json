{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-modal.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Checklist from './checklist';\nimport CardHeader from './card-header';\nimport CardNote from './card-note';\nimport DueDate from './due-date';\nimport CardInfo from './card-info';\nimport CardDetailHead from './card-detail-head';\nimport Activity from './activity';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => createStyles({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  backdrop: {\n    backgroundColor: 'rgb(144,144,144,0.6)'\n  }\n}));\n\nfunction CardModal(props) {\n  const classes = useStyles();\n  const {\n    0: category,\n    1: setCategory\n  } = useState('delete');\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setCategory('delete');\n    setOpen(false);\n  };\n\n  const handleDeleteBtn = () => {\n    props.deleteCard(props.currentColumn.id, props.currentCard.id);\n    handleClose();\n    props.handleModalClose();\n  };\n\n  const handleArchiveBtn = () => {\n    props.archiveCard(props.currentColumn.id, props.currentCard.id);\n    handleClose();\n    props.handleModalClose();\n  };\n\n  let modalElement = null;\n\n  switch (category) {\n    case 'archive':\n      modalElement = __jsx(\"div\", {\n        className: \"modal-delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"delete-btn-desc text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, \"You cannot redo this.\"), __jsx(\"div\", {\n        className: \"delete-btn-desc text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, \"Do you want to archive this card?\"), __jsx(\"div\", {\n        className: \"delete-btn-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        onClick: () => handleArchiveBtn(),\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, \"Archive\"), __jsx(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: () => handleClose(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"Cancel\")));\n      break;\n\n    default:\n      modalElement = __jsx(\"div\", {\n        className: \"modal-delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"delete-btn-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, \"Do you want to delete this card?\"), __jsx(\"div\", {\n        className: \"delete-btn-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        onClick: () => handleDeleteBtn(),\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, \"Delete\"), __jsx(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: () => handleClose(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, \"Cancel\")));\n      break;\n  }\n\n  return __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: props.open,\n    onClose: props.handleModalClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500,\n      classes: {\n        root: classes.backdrop\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, __jsx(Fade, {\n    in: props.open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"modal-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, __jsx(CardHeader, _extends({}, props, {\n    setCategory: setCategory,\n    handleOpen: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"card-detail-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"card-detail-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, __jsx(CardDetailHead, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, __jsx(CardNote, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  })), __jsx(Checklist, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  })), __jsx(Activity, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  })))), __jsx(\"div\", {\n    className: \"card-detail-right bg-grey-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, __jsx(DueDate, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  })), __jsx(CardInfo, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })), !props.currentCard.isArchived && __jsx(\"div\", {\n    className: \"flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, __jsx(\"button\", {\n    onClick: () => handleOpen(),\n    className: \"delete-card-btn border-none text-red cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"Delete\"))))), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, __jsx(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, modalElement)))));\n}\n\nexport default CardModal;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-modal.tsx"],"names":["React","useState","Checklist","CardHeader","CardNote","DueDate","CardInfo","CardDetailHead","Activity","Modal","Backdrop","Fade","makeStyles","createStyles","Button","useStyles","theme","modal","display","alignItems","justifyContent","backdrop","backgroundColor","CardModal","props","classes","category","setCategory","open","setOpen","handleOpen","handleClose","handleDeleteBtn","deleteCard","currentColumn","id","currentCard","handleModalClose","handleArchiveBtn","archiveCard","modalElement","timeout","root","isArchived"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,EAA4BC,YAA5B,QAAgD,0BAAhD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,IAC3BH,YAAY,CAAC;AACXI,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,cAAc,EAAE;AAHX,GADI;AAMXC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE;AADT;AANC,CAAD,CADc,CAA5B;;AAaA,SAASC,SAAT,CAAmBC,KAAnB,EAA2C;AACzC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAA0B1B,QAAQ,CAAC,QAAD,CAAxC;AACA,QAAM;AAAA,OAAC2B,IAAD;AAAA,OAAOC;AAAP,MAAkB5B,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAM6B,UAAU,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBJ,IAAAA,WAAW,CAAC,QAAD,CAAX;AACAE,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAKA,QAAMG,eAAe,GAAG,MAAM;AAC5BR,IAAAA,KAAK,CAACS,UAAN,CAAiBT,KAAK,CAACU,aAAN,CAAoBC,EAArC,EAAyCX,KAAK,CAACY,WAAN,CAAkBD,EAA3D;AACAJ,IAAAA,WAAW;AACXP,IAAAA,KAAK,CAACa,gBAAN;AACD,GAJD;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC7Bd,IAAAA,KAAK,CAACe,WAAN,CAAkBf,KAAK,CAACU,aAAN,CAAoBC,EAAtC,EAA0CX,KAAK,CAACY,WAAN,CAAkBD,EAA5D;AACAJ,IAAAA,WAAW;AACXP,IAAAA,KAAK,CAACa,gBAAN;AACD,GAJD;;AAMA,MAAIG,YAAY,GAAG,IAAnB;;AACA,UAAQd,QAAR;AACE,SAAK,SAAL;AACEc,MAAAA,YAAY,GACV;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAIE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJF,EAOE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMF,gBAAgB,EADjC;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EASE,MAAC,MAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,OAAO,EAAE,MAAMP,WAAW,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAPF,CADF;AA2BA;;AACF;AACES,MAAAA,YAAY,GACV;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAIE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMR,eAAe,EADhC;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,KAAK,EAAC,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EASE,MAAC,MAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,OAAO,EAAE,MAAMD,WAAW,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAJF,CADF;AAwBA;AAvDJ;;AA0DA,SACE,MAAC,KAAD;AACE,uBAAgB,wBADlB;AAEE,wBAAiB,8BAFnB;AAGE,IAAA,SAAS,EAAEN,OAAO,CAACR,KAHrB;AAIE,IAAA,IAAI,EAAEO,KAAK,CAACI,IAJd;AAKE,IAAA,OAAO,EAAEJ,KAAK,CAACa,gBALjB;AAME,IAAA,oBAAoB,MANtB;AAOE,IAAA,iBAAiB,EAAE3B,QAPrB;AAQE,IAAA,aAAa,EAAE;AACb+B,MAAAA,OAAO,EAAE,GADI;AAEbhB,MAAAA,OAAO,EAAE;AACPiB,QAAAA,IAAI,EAAEjB,OAAO,CAACJ;AADP;AAFI,KARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEG,KAAK,CAACI,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,eACMJ,KADN;AAEE,IAAA,WAAW,EAAEG,WAFf;AAGE,IAAA,UAAU,EAAEG,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAME;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD,eAAoBN,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGE,MAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHF,CAFF,CADF,EASE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD,eAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGG,CAACA,KAAK,CAACY,WAAN,CAAkBO,UAAnB,IACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAMb,UAAU,EAD3B;AAEE,IAAA,SAAS,EAAC,qDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJJ,CATF,CANF,CADF,EAgCE,MAAC,KAAD;AACE,uBAAgB,wBADlB;AAEE,wBAAiB,8BAFnB;AAGE,IAAA,SAAS,EAAEL,OAAO,CAACR,KAHrB;AAIE,IAAA,IAAI,EAAEW,IAJR;AAKE,IAAA,oBAAoB,MALtB;AAME,IAAA,iBAAiB,EAAElB,QANrB;AAOE,IAAA,aAAa,EAAE;AACb+B,MAAAA,OAAO,EAAE;AADI,KAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEb,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBY,YAAjB,CAXF,CAhCF,CADF,CAfF,CADF;AAkED;;AACD,eAAejB,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport Checklist from './checklist';\nimport CardHeader from './card-header';\nimport CardNote from './card-note';\nimport DueDate from './due-date';\nimport CardInfo from './card-info';\nimport CardDetailHead from './card-detail-head';\nimport Activity from './activity';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ICardModalProps from './interfaces/icardmodalprops';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    backdrop: {\n      backgroundColor: 'rgb(144,144,144,0.6)',\n    },\n  })\n);\n\nfunction CardModal(props: ICardModalProps) {\n  const classes = useStyles();\n  const [category, setCategory] = useState('delete');\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setCategory('delete');\n    setOpen(false);\n  };\n\n  const handleDeleteBtn = () => {\n    props.deleteCard(props.currentColumn.id, props.currentCard.id);\n    handleClose();\n    props.handleModalClose();\n  };\n\n  const handleArchiveBtn = () => {\n    props.archiveCard(props.currentColumn.id, props.currentCard.id);\n    handleClose();\n    props.handleModalClose();\n  };\n\n  let modalElement = null;\n  switch (category) {\n    case 'archive':\n      modalElement = (\n        <div className=\"modal-delete\">\n          <div className=\"delete-btn-desc text-center\">\n            You cannot redo this.\n          </div>\n          <div className=\"delete-btn-desc text-center\">\n            Do you want to archive this card?\n          </div>\n          <div className=\"delete-btn-box\">\n            <Button\n              onClick={() => handleArchiveBtn()}\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Archive\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => handleClose()}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      );\n      break;\n    default:\n      modalElement = (\n        <div className=\"modal-delete\">\n          <div className=\"delete-btn-desc\">\n            Do you want to delete this card?\n          </div>\n          <div className=\"delete-btn-box\">\n            <Button\n              onClick={() => handleDeleteBtn()}\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n            >\n              Delete\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => handleClose()}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      );\n      break;\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={props.open}\n      onClose={props.handleModalClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n        classes: {\n          root: classes.backdrop,\n        },\n      }}\n    >\n      <Fade in={props.open}>\n        <>\n          <div className=\"modal-paper\">\n            <CardHeader\n              {...props}\n              setCategory={setCategory}\n              handleOpen={handleOpen}\n            />\n            <div className=\"card-detail-body\">\n              <div className=\"card-detail-left\">\n                <CardDetailHead {...props} />\n                <div>\n                  <CardNote {...props} />\n                  <Checklist {...props} />\n                  <Activity {...props} />\n                </div>\n              </div>\n              <div className=\"card-detail-right bg-grey-1\">\n                <DueDate {...props} />\n                <CardInfo {...props} />\n                {!props.currentCard.isArchived && (\n                  <div className=\"flex-center\">\n                    <button\n                      onClick={() => handleOpen()}\n                      className=\"delete-card-btn border-none text-red cursor-pointer\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n              timeout: 500,\n            }}\n          >\n            <Fade in={open}>{modalElement}</Fade>\n          </Modal>\n        </>\n      </Fade>\n    </Modal>\n  );\n}\nexport default CardModal;\n"]},"metadata":{},"sourceType":"module"}