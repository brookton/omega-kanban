{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/main.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport ProjectName from './project-name';\nimport Disclaimer from './disclaimer';\nimport Board from './board';\nexport default function Main(props) {\n  const {\n    0: view,\n    1: setView\n  } = useState('project-name');\n  const [projectName, setProjectName] = React.useState('');\n  const {\n    0: isAcceptDisclaimer,\n    1: setIsAcceptDisclaimer\n  } = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem('omegakanbanaccept')) {\n      setIsAcceptDisclaimer(true);\n    }\n  });\n  let element = null;\n\n  switch (view) {\n    case 'project-name':\n      element = __jsx(ProjectName, {\n        setView: setView,\n        setProjectName: setProjectName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      });\n      break;\n\n    case 'board':\n      element = __jsx(Board, {\n        setView: setView,\n        setProjectName: setProjectName,\n        projectName: projectName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      });\n      break;\n  }\n\n  return __jsx(React.Fragment, null, element, !isAcceptDisclaimer && __jsx(Disclaimer, {\n    setIsAcceptDisclaimer: setIsAcceptDisclaimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/main.tsx"],"names":["React","useState","useEffect","ProjectName","Disclaimer","Board","Main","props","view","setView","projectName","setProjectName","isAcceptDisclaimer","setIsAcceptDisclaimer","localStorage","getItem","element"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA0B;AACvC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,cAAD,CAAhC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM;AAAA,OAACW,kBAAD;AAAA,OAAqBC;AAArB,MAA8CZ,QAAQ,CAAC,KAAD,CAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAJ,EAA+C;AAC7CF,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;AACF,GAJQ,CAAT;AAMA,MAAIG,OAAO,GAAG,IAAd;;AACA,UAAQR,IAAR;AACE,SAAK,cAAL;AACEQ,MAAAA,OAAO,GACL,MAAC,WAAD;AAAa,QAAA,OAAO,EAAEP,OAAtB;AAA+B,QAAA,cAAc,EAAEE,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGA;;AACF,SAAK,OAAL;AACEK,MAAAA,OAAO,GACL,MAAC,KAAD;AACE,QAAA,OAAO,EAAEP,OADX;AAEE,QAAA,cAAc,EAAEE,cAFlB;AAGE,QAAA,WAAW,EAAED,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOA;AAdJ;;AAiBA,SACE,4BACGM,OADH,EAEG,CAACJ,kBAAD,IACC,MAAC,UAAD;AAAY,IAAA,qBAAqB,EAAEC,qBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF;AAQD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectName from './project-name';\nimport Disclaimer from './disclaimer';\nimport Board from './board';\n\nexport default function Main(props: any) {\n  const [view, setView] = useState('project-name' as string);\n  const [projectName, setProjectName] = React.useState('' as any);\n  const [isAcceptDisclaimer, setIsAcceptDisclaimer] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem('omegakanbanaccept')) {\n      setIsAcceptDisclaimer(true);\n    }\n  });\n\n  let element = null;\n  switch (view) {\n    case 'project-name':\n      element = (\n        <ProjectName setView={setView} setProjectName={setProjectName} />\n      );\n      break;\n    case 'board':\n      element = (\n        <Board\n          setView={setView}\n          setProjectName={setProjectName}\n          projectName={projectName}\n        />\n      );\n      break;\n  }\n\n  return (\n    <>\n      {element}\n      {!isAcceptDisclaimer && (\n        <Disclaimer setIsAcceptDisclaimer={setIsAcceptDisclaimer} />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}