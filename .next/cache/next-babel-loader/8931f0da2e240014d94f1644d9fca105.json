{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction CardBody(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      isAdding = _useState[0],\n      setIsAdding = _useState[1];\n\n  var _useState2 = useState(false),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n\n  var _useState3 = useState(''),\n      cardTitle = _useState3[0],\n      setCardTitle = _useState3[1];\n\n  var handleAddCard = function handleAddCard() {\n    setIsAdding(true);\n  };\n\n  var handleAddCardBlur = function handleAddCardBlur() {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  var handleKeyDownForAddCard = function handleKeyDownForAddCard(event) {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  var handleCardTitleSubmit = function handleCardTitleSubmit() {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column._id, cardTitle);\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  console.log(props.column._id);\n  return __jsx(React.Fragment, null, props.column._id === 'archive' ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, props.column.cards.map(function (card) {\n    return __jsx(\"div\", {\n      key: card._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, __jsx(Card, _extends({\n      provided: undefined,\n      isDragging: false,\n      card: card\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    })));\n  })) : __jsx(Droppable, {\n    droppableId: props.column._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), props.column.cards.map(function (card, index) {\n      return __jsx(Draggable, {\n        key: card._id,\n        draggableId: card._id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, function (provided, snapshot) {\n        return __jsx(Card, _extends({\n          card: card,\n          provided: provided,\n          isDragging: snapshot.isDragging\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 23\n          }\n        }));\n      });\n    }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n      \"in\": isAdding,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"h-top mt-5px flex-center mb-25px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, __jsx(\"input\", {\n      className: \"box-shadow-1 w-100per add-card-title\",\n      value: cardTitle,\n      autoFocus: true,\n      onBlur: function onBlur() {\n        return handleAddCardBlur();\n      },\n      onKeyDown: function onKeyDown(event) {\n        return handleKeyDownForAddCard(event);\n      },\n      onChange: function onChange(e) {\n        return setCardTitle(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }))) : __jsx(\"div\", {\n      className: \"h-top flex-center mb-25px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, __jsx(Tooltip, {\n      title: \"Click to add a card\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, __jsx(\"i\", {\n      onClick: function onClick() {\n        return handleAddCard();\n      },\n      className: \"add-card-icon box-shadow-1 fas fa-plus cursor-pointer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }))), !isAdding && props.column.cards.length === 0 && __jsx(\"div\", {\n      className: \"no-task flex-center flex-column\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, __jsx(\"i\", {\n      className: \"no-task-check text-grey far fa-check-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"no-task-title text-grey\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, \"No Task\"), __jsx(\"div\", {\n      className: \"no-task-desc text-grey\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, \"Drag tasks here\"), __jsx(\"div\", {\n      className: \"no-task-desc text-grey\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, \"or click + to add new tasks\")), provided.placeholder);\n  }));\n}\n\n_s(CardBody, \"9nh3/Fb5fTSaOX5aoNDvBd3dE7Y=\");\n\n_c = CardBody;\nexport default CardBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardBody\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx"],"names":["React","useState","Droppable","Draggable","Card","Zoom","Tooltip","CardBody","props","isAdding","setIsAdding","isDragging","setIsDragging","cardTitle","setCardTitle","handleAddCard","handleAddCardBlur","length","handleKeyDownForAddCard","event","key","handleCardTitleSubmit","addCard","column","_id","console","log","cards","map","card","undefined","provided","snapshot","innerRef","droppableProps","index","e","target","value","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, KeyboardEvent } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IColumnProps from './interfaces/icolumnprops';\n\nfunction CardBody(props: IColumnProps) {\n  const [isAdding, setIsAdding] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cardTitle, setCardTitle] = useState('');\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = (event: KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column._id, cardTitle);\n      setCardTitle('');\n    }\n    setIsAdding(false);\n  };\n  console.log(props.column._id);\n  return (\n    <>\n      {props.column._id === 'archive' ? (\n        <div>\n          {props.column.cards.map((card) => {\n            return (\n              <div key={card._id}>\n                <Card\n                  provided={undefined}\n                  isDragging={false}\n                  card={card}\n                  {...props}\n                />\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <Droppable droppableId={props.column._id}>\n          {(provided: any, snapshot: any) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {props.column.cards.map((card, index: number) => {\n                return (\n                  <Draggable\n                    key={card._id}\n                    draggableId={card._id}\n                    index={index}\n                  >\n                    {(provided: any, snapshot: any) => (\n                      <Card\n                        card={card}\n                        provided={provided}\n                        isDragging={snapshot.isDragging}\n                        {...props}\n                      />\n                    )}\n                  </Draggable>\n                );\n              })}\n              {isDragging ? (\n                ''\n              ) : isAdding ? (\n                <Zoom in={isAdding}>\n                  <div className=\"h-top mt-5px flex-center mb-25px\">\n                    <input\n                      className=\"box-shadow-1 w-100per add-card-title\"\n                      value={cardTitle}\n                      autoFocus\n                      onBlur={() => handleAddCardBlur()}\n                      onKeyDown={(event) => handleKeyDownForAddCard(event)}\n                      onChange={(e) => setCardTitle(e.target.value)}\n                    ></input>\n                  </div>\n                </Zoom>\n              ) : (\n                <div className=\"h-top flex-center mb-25px\">\n                  <Tooltip title=\"Click to add a card\" arrow>\n                    <i\n                      onClick={() => handleAddCard()}\n                      className=\"add-card-icon box-shadow-1 fas fa-plus cursor-pointer\"\n                    ></i>\n                  </Tooltip>\n                </div>\n              )}\n              {!isAdding && props.column.cards.length === 0 && (\n                <div className=\"no-task flex-center flex-column\">\n                  <div>\n                    <i className=\"no-task-check text-grey far fa-check-circle\"></i>\n                  </div>\n                  <div className=\"no-task-title text-grey\">No Task</div>\n                  <div className=\"no-task-desc text-grey\">Drag tasks here</div>\n                  <div className=\"no-task-desc text-grey\">\n                    or click + to add new tasks\n                  </div>\n                </div>\n              )}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      )}\n    </>\n  );\n}\nexport default CardBody;\n"]},"metadata":{},"sourceType":"module"}