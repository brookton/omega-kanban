{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props) {\n  // const [cards, setCards] = useState([]);\n  var _useState = useState(false),\n      isAdding = _useState[0],\n      setIsAdding = _useState[1];\n\n  var _useState2 = useState(false),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n\n  var _useState3 = useState(''),\n      cardTitle = _useState3[0],\n      setCardTitle = _useState3[1];\n\n  var handleAddCard = function handleAddCard() {\n    setIsAdding(true);\n  };\n\n  var handleAddCardBlur = function handleAddCardBlur() {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  var handleKeyDownForAddCard = function handleKeyDownForAddCard(event) {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  var handleCardTitleSubmit = function handleCardTitleSubmit() {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column.id, cardTitle);\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  return __jsx(React.Fragment, null, props.column.id === 'archive' ? __jsx(\"div\", null, props.column.cards.map(function (card, index) {\n    return __jsx(\"div\", {\n      key: card.id\n    }, __jsx(Card, {\n      card: card,\n      setOpen: props.setOpen,\n      column: props.column,\n      setCardForOpen: props.setCardForOpen,\n      convertDate: props.convertDate\n    }));\n  })) : __jsx(Droppable, {\n    droppableId: props.column.id\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps), props.column.cards.map(function (card, index) {\n      return __jsx(Draggable, {\n        key: card.id,\n        draggableId: card.id,\n        index: index\n      }, function (provided, snapshot) {\n        return __jsx(Card, {\n          card: card,\n          setOpen: props.setOpen,\n          column: props.column,\n          provided: provided,\n          isDragging: snapshot.isDragging,\n          setCardForOpen: props.setCardForOpen,\n          convertDate: props.convertDate\n        });\n      });\n    }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n      \"in\": isAdding\n    }, __jsx(\"div\", {\n      className: \"h-top mt-5px flex-center mb-25px\"\n    }, __jsx(\"input\", {\n      className: \"box-shadow-1 w-100per add-card-title\",\n      value: cardTitle,\n      autoFocus: true,\n      onBlur: function onBlur() {\n        return handleAddCardBlur();\n      },\n      onKeyDown: function onKeyDown(event) {\n        return handleKeyDownForAddCard(event);\n      },\n      onChange: function onChange(e) {\n        return setCardTitle(e.target.value);\n      }\n    }))) : __jsx(\"div\", {\n      className: \"h-top flex-center mb-25px cursor-pointer\"\n    }, __jsx(\"i\", {\n      onClick: function onClick() {\n        return handleAddCard();\n      },\n      className: \"add-card-icon box-shadow-1 fas fa-plus\"\n    })), !isAdding && props.column.cards.length === 0 && __jsx(\"div\", {\n      className: \"no-task flex-center flex-column\"\n    }, __jsx(\"div\", null, __jsx(\"i\", {\n      className: \"no-task-check text-grey far fa-check-circle\"\n    })), __jsx(\"div\", {\n      className: \"no-task-title text-grey\"\n    }, \"No Task\"), __jsx(\"div\", {\n      className: \"no-task-desc text-grey\"\n    }, \"Drag tasks here\"), __jsx(\"div\", {\n      className: \"no-task-desc text-grey\"\n    }, \"or click + to add new tasks\")), provided.placeholder);\n  }));\n}\n\nexport default CardBody;","map":null,"metadata":{},"sourceType":"module"}