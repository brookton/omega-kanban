{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Checklist from './checklist';\nimport CardHeader from './card-header';\nimport CardNote from './card-note';\nimport DueDate from './due-date';\nimport CardInfo from './card-info';\nimport CardDetailHead from './card-detail-head';\nimport Activity from './activity';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => createStyles({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  backdrop: {\n    backgroundColor: 'rgb(144,144,144,0.6)'\n  }\n}));\n\nfunction CardModal(props) {\n  const classes = useStyles();\n  const {\n    0: category,\n    1: setCategory\n  } = useState('delete');\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setCategory('delete');\n    setOpen(false);\n  };\n\n  const handleDeleteBtn = () => {\n    props.deleteCard(props.currentColumn.id, props.currentCard.id);\n    handleClose();\n    props.handleModalClose();\n  };\n\n  const handleArchiveBtn = () => {\n    props.archiveCard(props.currentColumn.id, props.currentCard.id);\n    handleClose();\n    props.handleModalClose();\n  };\n\n  let modalElement = null;\n\n  switch (category) {\n    case 'archive':\n      modalElement = __jsx(\"div\", {\n        className: \"modal-delete\"\n      }, __jsx(\"div\", {\n        className: \"delete-btn-desc text-center\"\n      }, \"You cannot redo this.\"), __jsx(\"div\", {\n        className: \"delete-btn-desc text-center\"\n      }, \"Do you want to archive this card?\"), __jsx(\"div\", {\n        className: \"delete-btn-box\"\n      }, __jsx(Button, {\n        onClick: () => handleArchiveBtn(),\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"primary\"\n      }, \"Archive\"), __jsx(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: () => handleClose()\n      }, \"Cancel\")));\n      break;\n\n    default:\n      modalElement = __jsx(\"div\", {\n        className: \"modal-delete\"\n      }, __jsx(\"div\", {\n        className: \"delete-btn-desc\"\n      }, \"Do you want to delete this card?\"), __jsx(\"div\", {\n        className: \"delete-btn-box\"\n      }, __jsx(Button, {\n        onClick: () => handleDeleteBtn(),\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"secondary\"\n      }, \"Delete\"), __jsx(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: () => handleClose()\n      }, \"Cancel\")));\n      break;\n  }\n\n  return __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: props.open,\n    onClose: props.handleModalClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500,\n      classes: {\n        root: classes.backdrop\n      }\n    }\n  }, __jsx(Fade, {\n    in: props.open\n  }, __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"modal-paper\"\n  }, __jsx(CardHeader, {\n    currentColumn: props.currentColumn,\n    currentCard: props.currentCard,\n    convertDate: props.convertDate,\n    handleModalClose: props.handleModalClose,\n    completeCard: props.completeCard,\n    setCategory: setCategory,\n    handleOpen: handleOpen\n  }), __jsx(\"div\", {\n    className: \"card-detail-body\"\n  }, __jsx(\"div\", {\n    className: \"card-detail-left\"\n  }, __jsx(CardDetailHead, {\n    currentColumn: props.currentColumn,\n    currentCard: props.currentCard,\n    updateCardTitle: props.updateCardTitle,\n    columns: props.columns\n  }), __jsx(\"div\", null, __jsx(CardNote, {\n    currentColumn: props.currentColumn,\n    currentCard: props.currentCard,\n    updateCardNote: props.updateCardNote\n  }), __jsx(Checklist, {\n    currentCard: props.currentCard,\n    currentColumn: props.currentColumn,\n    addChecklist: props.addChecklist,\n    updateChecklist: props.updateChecklist,\n    addActivity: props.addActivity,\n    completeChecklist: props.completeChecklist,\n    deleteChecklist: props.deleteChecklist\n  }), __jsx(Activity, {\n    currentCard: props.currentCard,\n    currentColumn: props.currentColumn,\n    addActivity: props.addActivity,\n    updateDate: props.updateDate\n  }))), __jsx(\"div\", {\n    className: \"card-detail-right bg-grey-1\"\n  }, __jsx(DueDate, {\n    currentCard: props.currentCard,\n    currentColumn: props.currentColumn,\n    setDueDate: props.setDueDate,\n    convertDate: props.convertDate\n  }), __jsx(CardInfo, {\n    projectName: props.projectName,\n    currentCard: props.currentCard,\n    currentColumn: props.currentColumn,\n    convertDate: props.convertDate\n  }), !props.currentCard.isArchived && __jsx(\"div\", {\n    className: \"flex-center\"\n  }, __jsx(\"button\", {\n    onClick: () => handleOpen(),\n    className: \"delete-card-btn border-none text-red cursor-pointer\"\n  }, \"Delete\"))))), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    }\n  }, __jsx(Fade, {\n    in: open\n  }, modalElement)))));\n}\n\nexport default CardModal;","map":null,"metadata":{},"sourceType":"module"}