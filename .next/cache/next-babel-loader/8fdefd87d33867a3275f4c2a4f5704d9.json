{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport Column from './column';\nimport AddSection from './add-section';\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nconst useStyles = makeStyles(theme => createStyles({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Board(props) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: {\n      'column-0': {\n        id: 'column-0',\n        title: 'Plan',\n        cards: [],\n        colorIndex: 0\n      },\n      'column-1': {\n        id: 'column-1',\n        title: 'Progress',\n        cards: [],\n        colorIndex: 1\n      },\n      'column-2': {\n        id: 'column-2',\n        title: 'Complete',\n        cards: [],\n        colorIndex: 2\n      }\n    },\n    columnOrder: ['column-0', 'column-1', 'column-2']\n  });\n  const {\n    0: colorIndex,\n    1: setColorIndex\n  } = useState(0);\n  useEffect(() => {\n    setColorIndex(state.columnOrder.length - 1);\n  }, []);\n\n  const addCard = (columnId, cardTitle) => {\n    const newCard = {\n      id: uuidv4(),\n      cardTitle\n    };\n    state.columns[columnId].cards.push(newCard);\n    setState(_objectSpread({}, state));\n  };\n\n  const addSection = sectionTitle => {\n    const newSection = {\n      id: uuidv4(),\n      title: sectionTitle,\n      cards: [],\n      colorIndex: colorIndex + 1\n    };\n    setColorIndex(colorIndex + 1);\n    state.columns[newSection.id] = newSection;\n    state.columnOrder.push(newSection.id);\n    setState(_objectSpread({}, state));\n  };\n\n  const updateSectionTitle = (id, sectionTitle) => {\n    state.columns[id].title = sectionTitle;\n    setState(_objectSpread({}, state));\n  };\n\n  const deleteColumn = id => {\n    delete state.columns[id];\n    state.columnOrder.splice(state.columnOrder.indexOf(id), 1);\n    setState(_objectSpread({}, state));\n  };\n\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === 'column') {\n      const columnOrder = reorder(state.columnOrder, result.source.index, result.destination.index);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        columnOrder\n      }));\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      const column = state.columns[result.source.droppableId];\n      const cards = reorder(column.cards, result.source.index, result.destination.index);\n\n      const newState = _objectSpread(_objectSpread({}, state), {}, {\n        columns: _objectSpread(_objectSpread({}, state.columns), {}, {\n          [column.id]: _objectSpread(_objectSpread({}, column), {}, {\n            cards\n          })\n        })\n      });\n\n      setState(newState);\n      return;\n    }\n\n    const sourceColumn = state.columns[result.source.droppableId];\n    const destinationColumn = state.columns[result.destination.droppableId];\n    const card = sourceColumn.cards[result.source.index];\n\n    const newSourceColumn = _objectSpread(_objectSpread({}, sourceColumn), {}, {\n      cards: [...sourceColumn.cards]\n    });\n\n    newSourceColumn.cards.splice(result.source.index, 1);\n\n    const newDestinationColumn = _objectSpread(_objectSpread({}, destinationColumn), {}, {\n      cards: [...destinationColumn.cards]\n    });\n\n    newDestinationColumn.cards.splice(result.destination.index, 0, card);\n\n    const newState = _objectSpread(_objectSpread({}, state), {}, {\n      columns: _objectSpread(_objectSpread({}, state.columns), {}, {\n        [newSourceColumn.id]: newSourceColumn,\n        [newDestinationColumn.id]: newDestinationColumn\n      })\n    });\n\n    setState(newState);\n  };\n\n  const getItemStyle = (isDragging, draggableStyle) => _objectSpread({\n    display: 'flex',\n    flexDirection: 'row'\n  }, draggableStyle);\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }; //for modal\n\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleModalOpen = () => {\n    setOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Top, {\n    setView: props.setView,\n    setProjectName: props.setProjectName,\n    projectName: props.projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, __jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, __jsx(Droppable, {\n    direction: \"horizontal\",\n    droppableId: \"all-droppables\",\n    type: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    style: getItemStyle(snapshot.isDragging, provided.droppableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }), state.columnOrder.map((columnId, index) => {\n    return __jsx(Column, {\n      key: columnId,\n      column: state.columns[columnId],\n      index: index,\n      reorder: reorder,\n      addCard: addCard,\n      handleModalOpen: handleModalOpen,\n      updateSectionTitle: updateSectionTitle,\n      deleteColumn: deleteColumn,\n      onDragEnd: onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    });\n  }), provided.placeholder))), __jsx(AddSection, {\n    colorIndex: colorIndex,\n    addSection: addSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  })), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleModalClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, __jsx(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    id: \"transition-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"Transition modal\"), __jsx(\"p\", {\n    id: \"transition-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"react-transition-group animates me.\")))));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx"],"names":["React","useState","useEffect","DragDropContext","Droppable","Top","Column","AddSection","v4","uuidv4","makeStyles","createStyles","Modal","Backdrop","Fade","useStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Board","props","state","setState","columns","id","title","cards","colorIndex","columnOrder","setColorIndex","length","addCard","columnId","cardTitle","newCard","push","addSection","sectionTitle","newSection","updateSectionTitle","deleteColumn","splice","indexOf","onDragEnd","result","destination","type","reorder","source","index","droppableId","column","newState","sourceColumn","destinationColumn","card","newSourceColumn","newDestinationColumn","getItemStyle","isDragging","draggableStyle","flexDirection","list","startIndex","endIndex","Array","from","removed","classes","open","setOpen","handleModalOpen","handleModalClose","setView","setProjectName","projectName","provided","snapshot","innerRef","droppableProps","style","map","placeholder","timeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport Column from './column';\nimport AddSection from './add-section';\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nfunction Board(props: any) {\n  const [state, setState] = useState({\n    columns: {\n      'column-0': {\n        id: 'column-0',\n        title: 'Plan',\n        cards: [],\n        colorIndex: 0,\n      },\n      'column-1': {\n        id: 'column-1',\n        title: 'Progress',\n        cards: [],\n        colorIndex: 1,\n      },\n      'column-2': {\n        id: 'column-2',\n        title: 'Complete',\n        cards: [],\n        colorIndex: 2,\n      },\n    },\n    columnOrder: ['column-0', 'column-1', 'column-2'],\n  } as any);\n  const [colorIndex, setColorIndex] = useState(0);\n  useEffect(() => {\n    setColorIndex(state.columnOrder.length - 1);\n  }, []);\n  const addCard = (columnId: any, cardTitle: any) => {\n    const newCard = {\n      id: uuidv4(),\n      cardTitle,\n    };\n    state.columns[columnId].cards.push(newCard);\n    setState({\n      ...state,\n    } as any);\n  };\n\n  const addSection = (sectionTitle: any) => {\n    const newSection = {\n      id: uuidv4(),\n      title: sectionTitle,\n      cards: [],\n      colorIndex: colorIndex + 1,\n    };\n    setColorIndex(colorIndex + 1);\n    state.columns[newSection.id] = newSection;\n    state.columnOrder.push(newSection.id);\n    setState({\n      ...state,\n    } as any);\n  };\n\n  const updateSectionTitle = (id: any, sectionTitle: any) => {\n    state.columns[id].title = sectionTitle;\n    setState({\n      ...state,\n    } as any);\n  };\n\n  const deleteColumn = (id: any) => {\n    delete state.columns[id];\n    state.columnOrder.splice(state.columnOrder.indexOf(id), 1);\n    setState({\n      ...state,\n    } as any);\n  };\n\n  const onDragEnd = (result: any) => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === 'column') {\n      const columnOrder = reorder(\n        state.columnOrder,\n        result.source.index,\n        result.destination.index\n      );\n      setState({\n        ...state,\n        columnOrder,\n      } as any);\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      const column = state.columns[result.source.droppableId];\n      const cards = reorder(\n        column.cards,\n        result.source.index,\n        result.destination.index\n      );\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [column.id]: {\n            ...column,\n            cards,\n          },\n        },\n      };\n      setState(newState);\n      return;\n    }\n\n    const sourceColumn = state.columns[result.source.droppableId];\n    const destinationColumn = state.columns[result.destination.droppableId];\n    const card = sourceColumn.cards[result.source.index];\n\n    const newSourceColumn = {\n      ...sourceColumn,\n      cards: [...sourceColumn.cards],\n    };\n    newSourceColumn.cards.splice(result.source.index, 1);\n\n    const newDestinationColumn = {\n      ...destinationColumn,\n      cards: [...destinationColumn.cards],\n    };\n    newDestinationColumn.cards.splice(result.destination.index, 0, card);\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newSourceColumn.id]: newSourceColumn,\n        [newDestinationColumn.id]: newDestinationColumn,\n      },\n    };\n\n    setState(newState);\n  };\n\n  const getItemStyle = (isDragging: any, draggableStyle: any) => ({\n    display: 'flex',\n    flexDirection: 'row',\n    ...draggableStyle,\n  });\n\n  const reorder = (list: any, startIndex: any, endIndex: any) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  //for modal\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleModalOpen = () => {\n    setOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Top\n        setView={props.setView}\n        setProjectName={props.setProjectName}\n        projectName={props.projectName}\n      />\n      <div className=\"board\">\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable\n            direction=\"horizontal\"\n            droppableId=\"all-droppables\"\n            type=\"column\"\n          >\n            {(provided: any, snapshot: any) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.droppableProps.style\n                )}\n              >\n                {state.columnOrder.map((columnId: any, index: any) => {\n                  return (\n                    <Column\n                      key={columnId}\n                      column={state.columns[columnId]}\n                      index={index}\n                      reorder={reorder}\n                      addCard={addCard}\n                      handleModalOpen={handleModalOpen}\n                      updateSectionTitle={updateSectionTitle}\n                      deleteColumn={deleteColumn}\n                      onDragEnd={onDragEnd}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <AddSection colorIndex={colorIndex} addSection={addSection} />\n      </div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\n            <p id=\"transition-modal-description\">\n              react-transition-group animates me.\n            </p>\n          </div>\n        </Fade>\n      </Modal>\n    </>\n  );\n}\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}