{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/column.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport CardBox from './card-box';\nimport { Draggable } from 'react-beautiful-dnd';\n\nfunction Column(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      isCardBoxTileChanging = _useState[0],\n      setIsCardBoxTileChanging = _useState[1];\n\n  var _useState2 = useState(''),\n      cardBoxTitle = _useState2[0],\n      setCardBoxTitle = _useState2[1];\n\n  var handleCardBoxTitleBlur = function handleCardBoxTitleBlur() {};\n\n  var handleKeyDownForCardBoxTitle = function handleKeyDownForCardBoxTitle(event) {\n    if (event.key === 'Enter') {\n      handleCardBoxTitleSubmit();\n    }\n  };\n\n  var handleCardBoxTitleSubmit = function handleCardBoxTitleSubmit() {\n    if (cardBoxTitle.trim().length > 0) {// do something\n    }\n\n    setIsCardBoxTileChanging(false);\n  };\n\n  return __jsx(Draggable, {\n    draggableId: props.column.id,\n    index: props.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      className: \"column\"\n    }, provided.draggableProps, {\n      ref: provided.innerRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"card-box\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"subtitle-box h-top bg-skyblue text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", _extends({}, provided.dragHandleProps, {\n      className: \"icon-box\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }), __jsx(\"i\", {\n      className: \"far fa-lightbulb\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      onClick: function onClick() {\n        return setIsCardBoxTileChanging(true);\n      },\n      className: \"project-title w-65per h-top cursor-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, isCardBoxTileChanging ? __jsx(\"div\", {\n      className: \"h-top flex-center w-90per\",\n      onBlur: function onBlur() {\n        return handleCardBoxTitleBlur();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, __jsx(\"input\", {\n      className: \"w-100per change-project-title\",\n      value: cardBoxTitle,\n      autoFocus: true,\n      onKeyDown: function onKeyDown(event) {\n        return handleKeyDownForCardBoxTitle(event);\n      },\n      onBlur: function onBlur() {\n        return setIsCardBoxTileChanging(false);\n      },\n      onChange: function onChange(e) {\n        if (e.target.value.trim().length < 1) {\n          setCardBoxTitle(e.target.value.trim());\n        } else {\n          setCardBoxTitle(e.target.value);\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    })) : __jsx(\"div\", {\n      className: \"p-10px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, props.column.title)), __jsx(\"div\", {\n      className: \"cards-num flex-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, props.column.length)), __jsx(CardBox, {\n      reorder: props.reorder,\n      column: props.column,\n      index: props.index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })));\n  });\n}\n\n_s(Column, \"xZf3ZPOunqKP+r8xXBxcUXNdt6g=\");\n\n_c = Column;\nexport default Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/column.tsx"],"names":["React","useState","CardBox","Draggable","Column","props","isCardBoxTileChanging","setIsCardBoxTileChanging","cardBoxTitle","setCardBoxTitle","handleCardBoxTitleBlur","handleKeyDownForCardBoxTitle","event","key","handleCardBoxTitleSubmit","trim","length","column","id","index","provided","snapshot","draggableProps","innerRef","dragHandleProps","e","target","value","title","reorder"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAAqCC,SAArC,QAAsD,qBAAtD;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAAA;;AAAA;;AAAA,kBACgCJ,QAAQ,CAAC,KAAD,CADxC;AAAA,MACnBK,qBADmB;AAAA,MACIC,wBADJ;;AAAA,mBAEcN,QAAQ,CAAC,EAAD,CAFtB;AAAA,MAEnBO,YAFmB;AAAA,MAELC,eAFK;;AAI1B,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM,CAAE,CAAvC;;AACA,MAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,KAAD,EAAgB;AACnD,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBC,MAAAA,wBAAwB;AACzB;AACF,GAJD;;AAKA,MAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC,QAAIN,YAAY,CAACO,IAAb,GAAoBC,MAApB,GAA6B,CAAjC,EAAoC,CAClC;AACD;;AACDT,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACD,GALD;;AAMA,SACE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAEF,KAAK,CAACY,MAAN,CAAaC,EAArC;AAAyC,IAAA,KAAK,EAAEb,KAAK,CAACc,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACC,QAAD,EAAgBC,QAAhB;AAAA,WACC;AACE,MAAA,SAAS,EAAC;AADZ,OAEMD,QAAQ,CAACE,cAFf;AAGE,MAAA,GAAG,EAAEF,QAAQ,CAACG,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,0BAASH,QAAQ,CAACI,eAAlB;AAAmC,MAAA,SAAS,EAAC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AACE,MAAA,OAAO,EAAE;AAAA,eAAMjB,wBAAwB,CAAC,IAAD,CAA9B;AAAA,OADX;AAEE,MAAA,SAAS,EAAC,yCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGD,qBAAqB,GACpB;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,MAAM,EAAE;AAAA,eAAMI,sBAAsB,EAA5B;AAAA,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AACE,MAAA,SAAS,EAAC,+BADZ;AAEE,MAAA,KAAK,EAAEF,YAFT;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,SAAS,EAAE,mBAACI,KAAD;AAAA,eAAWD,4BAA4B,CAACC,KAAD,CAAvC;AAAA,OAJb;AAKE,MAAA,MAAM,EAAE;AAAA,eAAML,wBAAwB,CAAC,KAAD,CAA9B;AAAA,OALV;AAME,MAAA,QAAQ,EAAE,kBAACkB,CAAD,EAAO;AACf,YAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeZ,IAAf,GAAsBC,MAAtB,GAA+B,CAAnC,EAAsC;AACpCP,UAAAA,eAAe,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeZ,IAAf,EAAD,CAAf;AACD,SAFD,MAEO;AACLN,UAAAA,eAAe,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD;AACF,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADoB,GAqBpB;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBtB,KAAK,CAACY,MAAN,CAAaW,KAAtC,CAzBJ,CAJF,EAgCE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCvB,KAAK,CAACY,MAAN,CAAaD,MAArD,CAhCF,CADF,EAmCE,MAAC,OAAD;AACE,MAAA,OAAO,EAAEX,KAAK,CAACwB,OADjB;AAEE,MAAA,MAAM,EAAExB,KAAK,CAACY,MAFhB;AAGE,MAAA,KAAK,EAAEZ,KAAK,CAACc,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,CALF,CADD;AAAA,GADH,CADF;AAqDD;;GArEQf,M;;KAAAA,M;AAsET,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport CardBox from './card-box';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nfunction Column(props: any) {\n  const [isCardBoxTileChanging, setIsCardBoxTileChanging] = useState(false);\n  const [cardBoxTitle, setCardBoxTitle] = useState('');\n\n  const handleCardBoxTitleBlur = () => {};\n  const handleKeyDownForCardBoxTitle = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardBoxTitleSubmit();\n    }\n  };\n  const handleCardBoxTitleSubmit = () => {\n    if (cardBoxTitle.trim().length > 0) {\n      // do something\n    }\n    setIsCardBoxTileChanging(false);\n  };\n  return (\n    <Draggable draggableId={props.column.id} index={props.index}>\n      {(provided: any, snapshot: any) => (\n        <div\n          className=\"column\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <div className=\"card-box\">\n            <div className=\"subtitle-box h-top bg-skyblue text-white\">\n              <div {...provided.dragHandleProps} className=\"icon-box\">\n                <i className=\"far fa-lightbulb\"></i>\n              </div>\n              <div\n                onClick={() => setIsCardBoxTileChanging(true)}\n                className=\"project-title w-65per h-top cursor-text\"\n              >\n                {isCardBoxTileChanging ? (\n                  <div\n                    className=\"h-top flex-center w-90per\"\n                    onBlur={() => handleCardBoxTitleBlur()}\n                  >\n                    <input\n                      className=\"w-100per change-project-title\"\n                      value={cardBoxTitle}\n                      autoFocus\n                      onKeyDown={(event) => handleKeyDownForCardBoxTitle(event)}\n                      onBlur={() => setIsCardBoxTileChanging(false)}\n                      onChange={(e) => {\n                        if (e.target.value.trim().length < 1) {\n                          setCardBoxTitle(e.target.value.trim());\n                        } else {\n                          setCardBoxTitle(e.target.value);\n                        }\n                      }}\n                    ></input>\n                  </div>\n                ) : (\n                  <div className=\"p-10px\">{props.column.title}</div>\n                )}\n              </div>\n              <div className=\"cards-num flex-center\">{props.column.length}</div>\n            </div>\n            <CardBox\n              reorder={props.reorder}\n              column={props.column}\n              index={props.index}\n            />\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}