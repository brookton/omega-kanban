{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Zoom from '@material-ui/core/Zoom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nvar StyledMenu = withStyles({\n  paper: {\n    border: '1px solid rgb(239, 243, 244)'\n  }\n})(function (props) {\n  return __jsx(Menu, _extends({\n    elevation: 0,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    }\n  }, props));\n});\n\nfunction ChecklistItem(props) {\n  var _useState = useState(props.checklist.checklist),\n      checklist = _useState[0],\n      setChecklist = _useState[1];\n\n  var _useState2 = useState(false),\n      showAngle = _useState2[0],\n      setShowAngle = _useState2[1];\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var handleChecklistSubmit = function handleChecklistSubmit(e) {\n    if (e.key === 'Enter') {\n      var newChecklist = {\n        _id: props.checklist._id,\n        checklist: checklist,\n        isChecked: undefined\n      };\n      props.updateChecklist(props.currentColumn._id, props.currentCard._id, newChecklist);\n    }\n  };\n\n  var handleCompleteChecklist = function handleCompleteChecklist() {\n    var newChecklist = {\n      _id: props.checklist._id,\n      checklist: undefined,\n      isChecked: !props.checklist.isChecked\n    };\n    props.updateChecklist(props.currentColumn._id, props.currentCard._id, newChecklist);\n  };\n\n  var handleDeleteColClick = function handleDeleteColClick() {\n    props.deleteChecklist(props.currentColumn._id, props.currentCard._id, props.checklist._id);\n  };\n\n  return __jsx(React.Fragment, null, props.currentCard.isArchived ? __jsx(\"div\", {\n    className: \"display-flex checklist-row-no-hover\"\n  }, __jsx(\"div\", {\n    className: \"checklist-circle\"\n  }, props.checklist.isChecked ? __jsx(\"i\", {\n    className: \"far fa-check-circle\"\n  }) : __jsx(\"i\", {\n    className: \"far fa-circle\"\n  })), props.checklist.isChecked ? __jsx(\"div\", {\n    className: \"checklist-content\"\n  }, __jsx(\"s\", null, checklist)) : __jsx(\"input\", {\n    value: checklist,\n    disabled: true,\n    className: \"checklist-content border-none\"\n  })) : __jsx(\"div\", {\n    // id={props.checklist.id}\n    onMouseOver: function onMouseOver() {\n      return setShowAngle(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setShowAngle(false);\n    },\n    className: \"display-flex checklist-row\"\n  }, __jsx(\"div\", {\n    className: \"checklist-circle cursor-pointer\",\n    onClick: function onClick() {\n      return handleCompleteChecklist();\n    }\n  }, props.checklist && props.checklist.isChecked ? __jsx(Zoom, {\n    \"in\": true\n  }, __jsx(\"i\", {\n    className: \"far fa-check-circle\"\n  })) : __jsx(\"i\", {\n    className: \"far fa-circle\"\n  })), props.checklist && props.checklist.isChecked ? __jsx(\"div\", {\n    className: \"checklist-content\"\n  }, __jsx(\"s\", null, checklist)) : __jsx(\"input\", {\n    value: checklist,\n    onChange: function onChange(e) {\n      return setChecklist(e.target.value);\n    },\n    onKeyDown: function onKeyDown(e) {\n      return handleChecklistSubmit(e);\n    },\n    className: \"checklist-content border-none\"\n  }), __jsx(\"div\", {\n    className: \"card-head-angle cursor-pointer\"\n  }, checklist && showAngle && __jsx(React.Fragment, null, __jsx(\"i\", {\n    onClick: handleClick,\n    className: \"fas fa-angle-down\"\n  })), __jsx(StyledMenu, {\n    id: \"delete-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, __jsx(MenuItem, {\n    onClick: function onClick() {\n      return handleDeleteColClick();\n    }\n  }, __jsx(ListItemText, {\n    primary: \"Delete\"\n  }))))));\n}\n\nexport default ChecklistItem;","map":null,"metadata":{},"sourceType":"module"}