{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport ProjectName from './project-name';\nimport Disclaimer from './disclaimer';\nimport Board from './board';\nexport default function Main() {\n  var _useState = useState('project-name'),\n      view = _useState[0],\n      setView = _useState[1];\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      projectName = _React$useState2[0],\n      setProjectName = _React$useState2[1];\n\n  var _useState2 = useState(false),\n      isAcceptDisclaimer = _useState2[0],\n      setIsAcceptDisclaimer = _useState2[1];\n\n  useEffect(function () {\n    if (localStorage.getItem('omegakanbanaccept')) {\n      setIsAcceptDisclaimer(true);\n    }\n  });\n  var element = null;\n\n  switch (view) {\n    case 'project-name':\n      element = __jsx(ProjectName, {\n        setView: setView,\n        setProjectName: setProjectName,\n        projectName: projectName\n      });\n      break;\n\n    case 'board':\n      element = __jsx(Board, {\n        setView: setView,\n        setProjectName: setProjectName,\n        projectName: projectName\n      });\n      break;\n  }\n\n  return __jsx(React.Fragment, null, element, !isAcceptDisclaimer && __jsx(Disclaimer, {\n    setIsAcceptDisclaimer: setIsAcceptDisclaimer\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}