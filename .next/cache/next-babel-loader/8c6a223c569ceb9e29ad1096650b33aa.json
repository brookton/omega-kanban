{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props) {\n  // const [cards, setCards] = useState([]);\n  const {\n    0: isAdding,\n    1: setIsAdding\n  } = useState(false);\n  const {\n    0: isDragging,\n    1: setIsDragging\n  } = useState(false);\n  const {\n    0: cardTitle,\n    1: setCardTitle\n  } = useState('');\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = event => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column.id, cardTitle);\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  return __jsx(React.Fragment, null, props.column.id === 'archive' ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, props.column.cards.map((card, index) => {\n    return __jsx(Draggable, {\n      key: card.id,\n      draggableId: card.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, (provided, snapshot) => __jsx(Card, {\n      card: card,\n      setOpen: props.setOpen,\n      column: props.column,\n      provided: provided,\n      isDragging: snapshot.isDragging,\n      setCardForOpen: props.setCardForOpen,\n      convertDate: props.convertDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }));\n  })) : __jsx(Droppable, {\n    droppableId: props.column.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), props.column.cards.map((card, index) => {\n    return __jsx(Draggable, {\n      key: card.id,\n      draggableId: card.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, (provided, snapshot) => __jsx(Card, {\n      card: card,\n      setOpen: props.setOpen,\n      column: props.column,\n      provided: provided,\n      isDragging: snapshot.isDragging,\n      setCardForOpen: props.setCardForOpen,\n      convertDate: props.convertDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }\n    }));\n  }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n    in: isAdding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"h-top mt-5px flex-center mb-25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    className: \"box-shadow-1 w-100per add-card-title\",\n    value: cardTitle,\n    autoFocus: true,\n    onBlur: () => handleAddCardBlur(),\n    onKeyDown: event => handleKeyDownForAddCard(event),\n    onChange: e => setCardTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }))) : __jsx(\"div\", {\n    className: \"h-top flex-center mb-25px cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    onClick: () => handleAddCard(),\n    className: \"add-card-icon box-shadow-1 fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  })), !isAdding && props.column.cards.length === 0 && __jsx(\"div\", {\n    className: \"no-task flex-center flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, __jsx(\"i\", {\n    className: \"no-task-check text-grey far fa-check-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"no-task-title text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, \"No Task\"), __jsx(\"div\", {\n    className: \"no-task-desc text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, \"Drag tasks here\"), __jsx(\"div\", {\n    className: \"no-task-desc text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, \"or click + to add new tasks\")), provided.placeholder)));\n}\n\nexport default CardBody;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx"],"names":["React","useState","Droppable","Draggable","Card","Zoom","CardBody","props","isAdding","setIsAdding","isDragging","setIsDragging","cardTitle","setCardTitle","handleAddCard","handleAddCardBlur","length","handleKeyDownForAddCard","event","key","handleCardTitleSubmit","addCard","column","id","cards","map","card","index","provided","snapshot","setOpen","setCardForOpen","convertDate","innerRef","droppableProps","e","target","value","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props: any) {\n  // const [cards, setCards] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cardTitle, setCardTitle] = useState('');\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      props.addCard(props.column.id, cardTitle);\n      setCardTitle('');\n    }\n    setIsAdding(false);\n  };\n\n  return (\n    <>\n      {props.column.id === 'archive' ? (\n        <div>\n          {props.column.cards.map((card: any, index: any) => {\n            return (\n              <Draggable key={card.id} draggableId={card.id} index={index}>\n                {(provided: any, snapshot: any) => (\n                  <Card\n                    card={card}\n                    setOpen={props.setOpen}\n                    column={props.column}\n                    provided={provided}\n                    isDragging={snapshot.isDragging}\n                    setCardForOpen={props.setCardForOpen}\n                    convertDate={props.convertDate}\n                  />\n                )}\n              </Draggable>\n            );\n          })}\n        </div>\n      ) : (\n        <Droppable droppableId={props.column.id}>\n          {(provided: any, snapshot: any) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {props.column.cards.map((card: any, index: any) => {\n                return (\n                  <Draggable key={card.id} draggableId={card.id} index={index}>\n                    {(provided: any, snapshot: any) => (\n                      <Card\n                        card={card}\n                        setOpen={props.setOpen}\n                        column={props.column}\n                        provided={provided}\n                        isDragging={snapshot.isDragging}\n                        setCardForOpen={props.setCardForOpen}\n                        convertDate={props.convertDate}\n                      />\n                    )}\n                  </Draggable>\n                );\n              })}\n              {isDragging ? (\n                ''\n              ) : isAdding ? (\n                <Zoom in={isAdding}>\n                  <div className=\"h-top mt-5px flex-center mb-25px\">\n                    <input\n                      className=\"box-shadow-1 w-100per add-card-title\"\n                      value={cardTitle}\n                      autoFocus\n                      onBlur={() => handleAddCardBlur()}\n                      onKeyDown={(event) => handleKeyDownForAddCard(event)}\n                      onChange={(e) => setCardTitle(e.target.value)}\n                    ></input>\n                  </div>\n                </Zoom>\n              ) : (\n                <div className=\"h-top flex-center mb-25px cursor-pointer\">\n                  <i\n                    onClick={() => handleAddCard()}\n                    className=\"add-card-icon box-shadow-1 fas fa-plus\"\n                  ></i>\n                </div>\n              )}\n              {!isAdding && props.column.cards.length === 0 && (\n                <div className=\"no-task flex-center flex-column\">\n                  <div>\n                    <i className=\"no-task-check text-grey far fa-check-circle\"></i>\n                  </div>\n                  <div className=\"no-task-title text-grey\">No Task</div>\n                  <div className=\"no-task-desc text-grey\">Drag tasks here</div>\n                  <div className=\"no-task-desc text-grey\">\n                    or click + to add new tasks\n                  </div>\n                </div>\n              )}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      )}\n    </>\n  );\n}\nexport default CardBody;\n"]},"metadata":{},"sourceType":"module"}