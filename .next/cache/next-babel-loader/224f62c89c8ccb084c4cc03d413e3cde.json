{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-box.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\n\nfunction CardBox(props) {\n  const getItemStyle = (isDragging, draggableStyle) => _objectSpread({\n    userSelect: 'none',\n    padding: '15px',\n    margin: '10px',\n    border: isDragging ? '2px solid rgb(0, 170, 255)' : '1px solid rgb(225,225,225)',\n    borderRadius: '10px',\n    boxShadow: '1px 1px rgb(234, 234, 234)',\n    background: isDragging ? 'rgb(241,255,252)' : 'white'\n  }, draggableStyle);\n\n  const onDragEnd = result => {// dropped outside the list\n  };\n\n  return __jsx(\"div\", _extends({}, props.draggableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"card-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"subtitle-box h-top bg-skyblue text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", _extends({\n    ref: props.innerRef\n  }, props.dragHandleProps, {\n    className: \"icon-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), __jsx(\"i\", {\n    className: \"far fa-lightbulb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"project-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Open\"), __jsx(\"div\", {\n    className: \"cards-num\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"2\")), __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(Droppable, {\n    droppableId: \"droppable-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(Draggable, {\n    key: 0,\n    draggableId: \"0\",\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }))), __jsx(Draggable, {\n    key: 1,\n    draggableId: \"1\",\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }\n  }), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }))), __jsx(Draggable, {\n    key: 2,\n    draggableId: \"2\",\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }\n  }), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }))), provided.placeholder))))));\n}\n\nexport default CardBox;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-box.tsx"],"names":["React","DragDropContext","Droppable","Draggable","Card","CardBox","props","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","border","borderRadius","boxShadow","background","onDragEnd","result","draggableProps","innerRef","dragHandleProps","provided","snapshot","droppableProps","style","placeholder"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\n\nfunction CardBox(props: any) {\n  const getItemStyle = (isDragging: any, draggableStyle: any) => ({\n    userSelect: 'none',\n    padding: '15px',\n    margin: '10px',\n    border: isDragging\n      ? '2px solid rgb(0, 170, 255)'\n      : '1px solid rgb(225,225,225)',\n    borderRadius: '10px',\n    boxShadow: '1px 1px rgb(234, 234, 234)',\n    background: isDragging ? 'rgb(241,255,252)' : 'white',\n    ...draggableStyle,\n  });\n  const onDragEnd = (result: any) => {\n    // dropped outside the list\n  };\n\n  return (\n    <div {...props.draggableProps}>\n      <div className=\"card-box\">\n        <div className=\"subtitle-box h-top bg-skyblue text-white\">\n          <div\n            ref={props.innerRef}\n            {...props.dragHandleProps}\n            className=\"icon-box\"\n          >\n            <i className=\"far fa-lightbulb\"></i>\n          </div>\n          <div className=\"project-subtitle\">Open</div>\n          <div className=\"cards-num\">2</div>\n        </div>\n        <div className=\"card-body\">\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable-2\">\n              {(provided: any, snapshot: any) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  <Draggable key={0} draggableId=\"0\" index={0}>\n                    {(provided: any, snapshot: any) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        <Card />\n                      </div>\n                    )}\n                  </Draggable>\n                  <Draggable key={1} draggableId=\"1\" index={1}>\n                    {(provided: any, snapshot: any) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        <Card />\n                      </div>\n                    )}\n                  </Draggable>\n                  <Draggable key={2} draggableId=\"2\" index={2}>\n                    {(provided: any, snapshot: any) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        <Card />\n                      </div>\n                    )}\n                  </Draggable>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default CardBox;\n"]},"metadata":{},"sourceType":"module"}