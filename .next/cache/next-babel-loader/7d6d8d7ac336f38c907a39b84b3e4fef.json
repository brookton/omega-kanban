{"ast":null,"code":"import Column from '../../middleware/models/column';\n\nrequire('../../middleware/db/mongoose');\n\nexport default (async (request, response) => {\n  const {\n    _id\n  } = request.body;\n\n  try {\n    const columns = await Column.find({\n      projectId: _id\n    }).populate('cards.columnId').populate('checklists.cardId').populate('activities.cardId').exec();\n\n    if (!columns) {\n      return response.status(404).json({\n        success: false,\n        message: 'data not found'\n      });\n    }\n\n    console.log(columns);\n    return response.status(200).json({\n      success: true,\n      data: columns\n    });\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to get a board data'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/pages/api/get-columns.tsx"],"names":["Column","require","request","response","_id","body","columns","find","projectId","populate","exec","status","json","success","message","console","log","data","e"],"mappings":"AACA,OAAOA,MAAP,MAAmB,gCAAnB;;AACAC,OAAO,CAAC,8BAAD,CAAP;;AAEA,gBAAe,OAAOC,OAAP,EAAgCC,QAAhC,KAA8D;AAC3E,QAAM;AAAEC,IAAAA;AAAF,MAAUF,OAAO,CAACG,IAAxB;;AACA,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMN,MAAM,CAACO,IAAP,CAAY;AAAEC,MAAAA,SAAS,EAAEJ;AAAb,KAAZ,EACnBK,QADmB,CACV,gBADU,EAEnBA,QAFmB,CAEV,mBAFU,EAGnBA,QAHmB,CAGV,mBAHU,EAInBC,IAJmB,EAAtB;;AAKA,QAAI,CAACJ,OAAL,EAAc;AACZ,aAAOH,QAAQ,CAACQ,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BC,QAAAA,OAAO,EAAE,KADsB;AAE/BC,QAAAA,OAAO,EAAE;AAFsB,OAA1B,CAAP;AAID;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACA,WAAOH,QAAQ,CAACQ,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBI,MAAAA,IAAI,EAAEX;AAAvB,KAA1B,CAAP;AACD,GAdD,CAcE,OAAOY,CAAP,EAAU;AACV,WAAOf,QAAQ,CACZQ,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAFD,CAAP;AAGD;AACF,CArBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport Column from '../../middleware/models/column';\nrequire('../../middleware/db/mongoose');\n\nexport default async (request: NextApiRequest, response: NextApiResponse) => {\n  const { _id } = request.body;\n  try {\n    const columns = await Column.find({ projectId: _id })\n      .populate('cards.columnId')\n      .populate('checklists.cardId')\n      .populate('activities.cardId')\n      .exec();\n    if (!columns) {\n      return response.status(404).json({\n        success: false,\n        message: 'data not found',\n      });\n    }\n    console.log(columns);\n    return response.status(200).json({ success: true, data: columns });\n  } catch (e) {\n    return response\n      .status(500)\n      .json({ success: false, message: 'failed to get a board data' });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}