{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/pages/[_id]/[project].tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Main from '../../components/main';\nimport IndexPage from '../../components/index-page';\nimport { SnackbarProvider } from 'notistack';\nimport { useRouter } from 'next/router';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport default function Index() {\n  const {\n    0: isValid,\n    1: setIsValid\n  } = useState(false);\n  const router = useRouter();\n  const {\n    _id,\n    project\n  } = router.query;\n  useEffect(() => {\n    console.log(_id);\n    if (_id) getRouter(_id);\n  }, []);\n\n  const getRouter = _id => {\n    fetch(`/api/get-router`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        console.log(data.data);\n        setIsValid(true);\n      } else {}\n    }).catch(err => {\n      console.error(`Something wrong happened while getting a route:${err.message}`);\n    });\n  };\n\n  return __jsx(SnackbarProvider, {\n    maxSnack: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(IndexPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), isValid ? __jsx(Main, {\n    _id: _id,\n    projectName: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }) : __jsx(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      width: '100%',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/pages/[_id]/[project].tsx"],"names":["React","useState","useEffect","Main","IndexPage","SnackbarProvider","useRouter","CircularProgress","Index","isValid","setIsValid","router","_id","project","query","console","log","getRouter","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","catch","err","error","message","backgroundColor","width","height","display","flexDirection","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAGA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMU,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAmBF,MAAM,CAACG,KAAhC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,QAAIA,GAAJ,EAASK,SAAS,CAACL,GAAD,CAAT;AACV,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMK,SAAS,GAAIL,GAAD,IAAiB;AACjCM,IAAAA,KAAK,CAAE,iBAAF,EAAoB;AACvBC,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFc;AAKvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBX,QAAAA;AADmB,OAAf;AALiB,KAApB,CAAL,CASGY,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSG,IAAD,IAAuB;AAC3B,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBb,QAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACA,IAAjB;AACAjB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAHD,MAGO,CACN;AACF,KAhBH,EAiBGmB,KAjBH,CAiBUC,GAAD,IAAS;AACdf,MAAAA,OAAO,CAACgB,KAAR,CACG,kDAAiDD,GAAG,CAACE,OAAQ,EADhE;AAGD,KArBH;AAsBD,GAvBD;;AAyBA,SACE,MAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGvB,OAAO,GACN,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEG,GAAX;AAA0B,IAAA,WAAW,EAAEC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN;AACE,IAAA,KAAK,EAAE;AACLoB,MAAAA,eAAe,EAAE,OADZ;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,MAAM,EAAE,OAHH;AAILC,MAAAA,OAAO,EAAE,MAJJ;AAKLC,MAAAA,aAAa,EAAE,QALV;AAMLC,MAAAA,UAAU,EAAE,QANP;AAOLC,MAAAA,cAAc,EAAE;AAPX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CALJ,CADF;AAsBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Main from '../../components/main';\nimport IndexPage from '../../components/index-page';\nimport { SnackbarProvider } from 'notistack';\nimport { useRouter } from 'next/router';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IRouterData from '../../components/interfaces/irouterdata';\n\nexport default function Index() {\n  const [isValid, setIsValid] = useState(false);\n  const router = useRouter();\n  const { _id, project } = router.query;\n\n  useEffect(() => {\n    console.log(_id);\n    if (_id) getRouter(_id as string);\n  }, []);\n\n  const getRouter = (_id: String) => {\n    fetch(`/api/get-router`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        _id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: IRouterData) => {\n        if (data.success) {\n          console.log(data.data);\n          setIsValid(true);\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting a route:${err.message}`\n        );\n      });\n  };\n\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <IndexPage />\n      {isValid ? (\n        <Main _id={_id as string} projectName={project as string} />\n      ) : (\n        <div\n          style={{\n            backgroundColor: 'white',\n            width: '100%',\n            height: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <CircularProgress />\n        </div>\n      )}\n    </SnackbarProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}