{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport CardBox from './card-box';\nimport AddSection from './add-section';\n\nfunction Board(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([1, 2, 3]),\n      cardBoxes = _useState[0],\n      setCardBoxes = _useState[1];\n\n  var onBeforeCapture = function onBeforeCapture() {\n    /*...*/\n  };\n\n  var onBeforeDragStart = function onBeforeDragStart() {\n    /*...*/\n  };\n\n  var onDragStart = function onDragStart() {\n    /*...*/\n  };\n\n  var onDragUpdate = function onDragUpdate() {\n    /*...*/\n  };\n\n  var onDragEnd = function onDragEnd() {// the only one that is required\n  };\n\n  var createCardBox = function createCardBox(title) {\n    var newCardBox = {\n      title: title\n    };\n    console.log(newCardBox);\n    setCardBoxes([].concat(_toConsumableArray(cardBoxes), [newCardBox]));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Top, {\n    projectName: props.projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(DragDropContext, {\n    onBeforeCapture: onBeforeCapture,\n    onBeforeDragStart: onBeforeDragStart,\n    onDragStart: onDragStart,\n    onDragUpdate: onDragUpdate,\n    onDragEnd: onDragEnd,\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(Droppable, {\n    droppableId: \"droppable-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, function (provided, snapshot) {\n    return __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }), cardBoxes.map(function (cardBox, index) {\n      console.log(cardBox);\n      return __jsx(Draggable, {\n        key: index,\n        draggableId: index.toString(),\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, function (provided, snapshot) {\n        return __jsx(React.Fragment, null, __jsx(CardBox, {\n          cardBoxTitle: cardBox.title,\n          innerRef: provided.innerRef,\n          draggableProps: provided.draggableProps,\n          dragHandleProps: provided.dragHandleProps,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 27\n          }\n        }), provided.placeholder);\n      });\n    }), provided.placeholder);\n  })), __jsx(AddSection, {\n    createCardBox: createCardBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Board, \"p+N0ZLjqcjFeMdGneHZnEHyRyfs=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/board.tsx"],"names":["React","useState","DragDropContext","Droppable","Draggable","Top","CardBox","AddSection","Board","props","cardBoxes","setCardBoxes","onBeforeCapture","onBeforeDragStart","onDragStart","onDragUpdate","onDragEnd","createCardBox","title","newCardBox","console","log","projectName","provided","snapshot","innerRef","droppableProps","map","cardBox","index","toString","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Top from './top';\nimport CardBox from './card-box';\nimport AddSection from './add-section';\n\nfunction Board(props: any) {\n  const [cardBoxes, setCardBoxes] = useState([1, 2, 3]);\n  const onBeforeCapture = () => {\n    /*...*/\n  };\n\n  const onBeforeDragStart = () => {\n    /*...*/\n  };\n\n  const onDragStart = () => {\n    /*...*/\n  };\n  const onDragUpdate = () => {\n    /*...*/\n  };\n  const onDragEnd = () => {\n    // the only one that is required\n  };\n\n  const createCardBox = (title: any) => {\n    const newCardBox = {\n      title,\n    };\n    console.log(newCardBox);\n    setCardBoxes([...cardBoxes, newCardBox] as any);\n  };\n\n  return (\n    <>\n      <Top projectName={props.projectName} />\n      <div className=\"board\">\n        <DragDropContext\n          onBeforeCapture={onBeforeCapture}\n          onBeforeDragStart={onBeforeDragStart}\n          onDragStart={onDragStart}\n          onDragUpdate={onDragUpdate}\n          onDragEnd={onDragEnd}\n          className=\"board\"\n        >\n          <Droppable droppableId=\"droppable-1\">\n            {(provided: any, snapshot: any) => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {cardBoxes.map((cardBox: any, index: any) => {\n                  console.log(cardBox);\n                  return (\n                    <Draggable\n                      key={index}\n                      draggableId={index.toString()}\n                      index={index}\n                    >\n                      {(provided: any, snapshot: any) => (\n                        <>\n                          <CardBox\n                            cardBoxTitle={cardBox.title}\n                            innerRef={provided.innerRef}\n                            draggableProps={provided.draggableProps}\n                            dragHandleProps={provided.dragHandleProps}\n                          />\n                          {provided.placeholder}\n                        </>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <AddSection createCardBox={createCardBox} />\n      </div>\n    </>\n  );\n}\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}