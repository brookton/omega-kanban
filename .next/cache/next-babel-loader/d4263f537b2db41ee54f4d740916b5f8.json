{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props) {\n  const {\n    0: cards,\n    1: setCards\n  } = useState([]);\n  const {\n    0: isAdding,\n    1: setIsAdding\n  } = useState(false);\n  const {\n    0: isDragging,\n    1: setIsDragging\n  } = useState(false);\n  const {\n    0: cardTitle,\n    1: setCardTitle\n  } = useState('');\n  const {\n    0: cardBoxTitle,\n    1: setCardBoxTitle\n  } = useState('');\n  useEffect(() => {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []);\n\n  const onDragStart = result => {\n    setIsDragging(true);\n\n    if (cardTitle.length < 1) {\n      setIsAdding(false);\n    }\n  };\n\n  const onDragEnd = result => {\n    setIsDragging(false);\n    props.onDragEnd(result);\n  };\n\n  const handleAddCard = () => {\n    setIsAdding(true); // setCards([...cards, 1]);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = event => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      // setCards([...cards, { cardTitle }] as any);\n      props.addCard(props.column.id, {\n        cardTitle\n      });\n      setCardTitle('');\n    }\n\n    setIsAdding(false);\n  };\n\n  return __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    onDragStart: onDragStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Droppable, {\n    droppableId: props.column.id,\n    mode: \"virtual\",\n    renderClone: (provided, snapshot, rubric) => __jsx(Card, {\n      provided: provided,\n      isDragging: snapshot.isDragging,\n      card: props.column.cards[rubric.source.index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), props.column.cards.map((card, index) => {\n    return __jsx(Draggable, {\n      key: index,\n      draggableId: index.toString(),\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, (provided, snapshot) => __jsx(Card, {\n      card: card,\n      provided: provided,\n      isDragging: snapshot.isDragging,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }));\n  }), isDragging ? '' : isAdding ? __jsx(Zoom, {\n    in: isAdding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"h-top flex-center mb-25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    className: \"box-shadow-1 w-100per add-card-title\",\n    value: cardTitle,\n    autoFocus: true,\n    onBlur: () => handleAddCardBlur(),\n    onKeyDown: event => handleKeyDownForAddCard(event),\n    onChange: e => setCardTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }))) : __jsx(\"div\", {\n    className: \"h-top flex-center mb-25px cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    onClick: () => handleAddCard(),\n    className: \"add-card-icon box-shadow-1 fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  })), provided.placeholder))));\n}\n\nexport default CardBody;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-body.tsx"],"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Card","Zoom","CardBody","props","cards","setCards","isAdding","setIsAdding","isDragging","setIsDragging","cardTitle","setCardTitle","cardBoxTitle","setCardBoxTitle","onDragStart","result","length","onDragEnd","handleAddCard","handleAddCardBlur","handleKeyDownForAddCard","event","key","handleCardTitleSubmit","addCard","column","id","provided","snapshot","rubric","source","index","innerRef","droppableProps","map","card","toString","e","target","value","placeholder"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;AAC5B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACa,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACe,SAAD;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACiB,YAAD;AAAA,OAAeC;AAAf,MAAkClB,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,KAAK,CAACS,YAAV,EAAwB;AACtBC,MAAAA,eAAe,CAACV,KAAK,CAACS,YAAP,CAAf;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAME,WAAW,GAAIC,MAAD,IAAiB;AACnCN,IAAAA,aAAa,CAAC,IAAD,CAAb;;AACA,QAAIC,SAAS,CAACM,MAAV,GAAmB,CAAvB,EAA0B;AACxBT,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GALD;;AAOA,QAAMU,SAAS,GAAIF,MAAD,IAAiB;AACjCN,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAN,IAAAA,KAAK,CAACc,SAAN,CAAgBF,MAAhB;AACD,GAHD;;AAKA,QAAMG,aAAa,GAAG,MAAM;AAC1BX,IAAAA,WAAW,CAAC,IAAD,CAAX,CAD0B,CAE1B;AACD,GAHD;;AAKA,QAAMY,iBAAiB,GAAG,MAAM;AAC9B,QAAIT,SAAS,CAACM,MAAV,GAAmB,CAAvB,EAA0BT,WAAW,CAAC,KAAD,CAAX;AAC3B,GAFD;;AAIA,QAAMa,uBAAuB,GAAIC,KAAD,IAAgB;AAC9C,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBC,MAAAA,qBAAqB;AACtB;AACF,GAJD;;AAMA,QAAMA,qBAAqB,GAAG,MAAM;AAClC,QAAIb,SAAS,CAACM,MAAV,GAAmB,CAAvB,EAA0B;AACxB;AACAb,MAAAA,KAAK,CAACqB,OAAN,CAAcrB,KAAK,CAACsB,MAAN,CAAaC,EAA3B,EAA+B;AAAEhB,QAAAA;AAAF,OAA/B;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AACDJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAEU,SAA5B;AAAuC,IAAA,WAAW,EAAEH,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,WAAW,EAAEX,KAAK,CAACsB,MAAN,CAAaC,EAD5B;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,WAAW,EAAE,CAACC,QAAD,EAAWC,QAAX,EAAqBC,MAArB,KACX,MAAC,IAAD;AACE,MAAA,QAAQ,EAAEF,QADZ;AAEE,MAAA,UAAU,EAAEC,QAAQ,CAACpB,UAFvB;AAGE,MAAA,IAAI,EAAEL,KAAK,CAACsB,MAAN,CAAarB,KAAb,CAAmByB,MAAM,CAACC,MAAP,CAAcC,KAAjC,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG,CAACJ,QAAD,EAAgBC,QAAhB,KACC;AAAK,IAAA,GAAG,EAAED,QAAQ,CAACK;AAAnB,KAAiCL,QAAQ,CAACM,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACG9B,KAAK,CAACsB,MAAN,CAAarB,KAAb,CAAmB8B,GAAnB,CAAuB,CAACC,IAAD,EAAYJ,KAAZ,KAA2B;AACjD,WACE,MAAC,SAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,WAAW,EAAEA,KAAK,CAACK,QAAN,EAFf;AAGE,MAAA,KAAK,EAAEL,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,CAACJ,QAAD,EAAgBC,QAAhB,KACC,MAAC,IAAD;AACE,MAAA,IAAI,EAAEO,IADR;AAEE,MAAA,QAAQ,EAAER,QAFZ;AAGE,MAAA,UAAU,EAAEC,QAAQ,CAACpB,UAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADF;AAeD,GAhBA,CADH,EAkBGA,UAAU,GACT,EADS,GAEPF,QAAQ,GACV,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,sCADZ;AAEE,IAAA,KAAK,EAAEI,SAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,MAAM,EAAE,MAAMS,iBAAiB,EAJjC;AAKE,IAAA,SAAS,EAAGE,KAAD,IAAWD,uBAAuB,CAACC,KAAD,CAL/C;AAME,IAAA,QAAQ,EAAGgB,CAAD,IAAO1B,YAAY,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADU,GAcV;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAMrB,aAAa,EAD9B;AAEE,IAAA,SAAS,EAAC,wCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlCJ,EAyCGS,QAAQ,CAACa,WAzCZ,CAZJ,CADF,CADF,CADF;AA+DD;;AACD,eAAetC,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from './card';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CardBody(props: any) {\n  const [cards, setCards] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cardTitle, setCardTitle] = useState('');\n  const [cardBoxTitle, setCardBoxTitle] = useState('');\n\n  useEffect(() => {\n    if (props.cardBoxTitle) {\n      setCardBoxTitle(props.cardBoxTitle);\n    }\n  }, []);\n\n  const onDragStart = (result: any) => {\n    setIsDragging(true);\n    if (cardTitle.length < 1) {\n      setIsAdding(false);\n    }\n  };\n\n  const onDragEnd = (result: any) => {\n    setIsDragging(false);\n    props.onDragEnd(result);\n  };\n\n  const handleAddCard = () => {\n    setIsAdding(true);\n    // setCards([...cards, 1]);\n  };\n\n  const handleAddCardBlur = () => {\n    if (cardTitle.length < 1) setIsAdding(false);\n  };\n\n  const handleKeyDownForAddCard = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardTitleSubmit();\n    }\n  };\n\n  const handleCardTitleSubmit = () => {\n    if (cardTitle.length > 0) {\n      // setCards([...cards, { cardTitle }] as any);\n      props.addCard(props.column.id, { cardTitle });\n      setCardTitle('');\n    }\n    setIsAdding(false);\n  };\n\n  return (\n    <div className=\"card-body\">\n      <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\n        <Droppable\n          droppableId={props.column.id}\n          mode=\"virtual\"\n          renderClone={(provided, snapshot, rubric) => (\n            <Card\n              provided={provided}\n              isDragging={snapshot.isDragging}\n              card={props.column.cards[rubric.source.index]}\n            />\n          )}\n        >\n          {(provided: any, snapshot: any) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {props.column.cards.map((card: any, index: any) => {\n                return (\n                  <Draggable\n                    key={index}\n                    draggableId={index.toString()}\n                    index={index}\n                  >\n                    {(provided: any, snapshot: any) => (\n                      <Card\n                        card={card}\n                        provided={provided}\n                        isDragging={snapshot.isDragging}\n                      />\n                    )}\n                  </Draggable>\n                );\n              })}\n              {isDragging ? (\n                ''\n              ) : isAdding ? (\n                <Zoom in={isAdding}>\n                  <div className=\"h-top flex-center mb-25px\">\n                    <input\n                      className=\"box-shadow-1 w-100per add-card-title\"\n                      value={cardTitle}\n                      autoFocus\n                      onBlur={() => handleAddCardBlur()}\n                      onKeyDown={(event) => handleKeyDownForAddCard(event)}\n                      onChange={(e) => setCardTitle(e.target.value)}\n                    ></input>\n                  </div>\n                </Zoom>\n              ) : (\n                <div className=\"h-top flex-center mb-25px cursor-pointer\">\n                  <i\n                    onClick={() => handleAddCard()}\n                    className=\"add-card-icon box-shadow-1 fas fa-plus\"\n                  ></i>\n                </div>\n              )}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n}\nexport default CardBody;\n"]},"metadata":{},"sourceType":"module"}