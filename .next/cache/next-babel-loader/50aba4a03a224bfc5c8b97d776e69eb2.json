{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\n\nfunction Card(props) {\n  var getItemStyle = function getItemStyle(isDragging, draggableStyle) {\n    return _objectSpread(_objectSpread({\n      userSelect: 'none',\n      padding: '15px',\n      margin: '5px 10px',\n      border: isDragging ? '2px solid rgb(0, 170, 255)' : '1px solid rgb(225,225,225)',\n      borderRadius: '10px',\n      boxShadow: 'rgba(0, 0, 0, 0.02) 0px 0px 0px 1px rgba(0, 0, 0, 0.05), 0px 1px 2px 0px, rgba(0, 0, 0, 0.05) 0px 2px 8px 0px',\n      background: isDragging ? 'rgb(241,251,255)' : 'white'\n    }, draggableStyle), {}, {\n      // minHeight: '150px',\n      height: isDragging ? '145px' : '100%'\n    });\n  };\n\n  var expandCard = function expandCard() {\n    console.log(props.column.id, props.card.id);\n    props.setCardForOpen(props.column.id, props.card.id);\n    props.setOpen(true);\n  };\n\n  var checklistStatus = function checklistStatus() {\n    var length = props.card.checklists.length;\n    var completed = props.card.checklists.filter(function (checklist) {\n      return checklist.isChecked;\n    });\n    return \"\".concat(completed.length, \" / \").concat(length);\n  };\n\n  return __jsx(React.Fragment, null, props.card.isArchived ? __jsx(\"div\", {\n    className: \"card-archived\",\n    onClick: function onClick() {\n      return expandCard();\n    }\n  }, props.card.isCardCompleted ? __jsx(\"div\", {\n    className: \"card-completed cursor-pointer\"\n  }, __jsx(\"div\", {\n    className: \"card-completed-head display-flex\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-check-circle\"\n  }), __jsx(\"div\", null, 'Completed')), __jsx(\"div\", {\n    className: \"card-content-title text-grey\"\n  }, __jsx(\"s\", null, props.card.cardTitle)), __jsx(\"div\", {\n    className: \"card-content-bottom text-grey display-flex\"\n  }, __jsx(\"div\", null, __jsx(\"i\", {\n    className: \"card-checklist-icon far fa-calendar-check\"\n  })), __jsx(\"div\", null, props.convertDate(props.card.updatedAt)), __jsx(\"div\", {\n    className: \"ml-10px\"\n  }, __jsx(\"i\", {\n    className: \"card-checklist-icon fas fa-list-ul\"\n  })), __jsx(\"div\", null, checklistStatus()))) : __jsx(\"div\", {\n    className: \"card cursor-pointer\"\n  }, __jsx(\"div\", {\n    className: \"card-content-title\"\n  }, props.card.cardTitle), __jsx(\"div\", {\n    className: \"card-content-note\"\n  }, props.card.note), __jsx(\"div\", {\n    className: \"card-content-bottom display-flex\"\n  }, __jsx(\"div\", null, __jsx(\"i\", {\n    className: \"card-checklist-icon fas fa-list-ul\"\n  })), __jsx(\"div\", null, checklistStatus())))) : __jsx(\"div\", _extends({\n    ref: props.provided.innerRef\n  }, props.provided.draggableProps, props.provided.dragHandleProps, {\n    style: getItemStyle(props.isDragging, props.provided.draggableProps.style),\n    onClick: function onClick() {\n      return expandCard();\n    }\n  }), props.card.isCardCompleted ? __jsx(\"div\", {\n    className: \"card-completed cursor-pointer\"\n  }, __jsx(\"div\", {\n    className: \"card-completed-head display-flex\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-check-circle\"\n  }), __jsx(\"div\", null, 'Completed')), __jsx(\"div\", {\n    className: \"card-content-title text-grey\"\n  }, __jsx(\"s\", null, props.card.cardTitle)), __jsx(\"div\", {\n    className: \"card-content-bottom text-grey display-flex\"\n  }, __jsx(\"div\", null, __jsx(\"i\", {\n    className: \"card-checklist-icon far fa-calendar-check\"\n  })), __jsx(\"div\", null, props.convertDate(props.card.updatedAt)), __jsx(\"div\", {\n    className: \"ml-10px\"\n  }, __jsx(\"i\", {\n    className: \"card-checklist-icon fas fa-list-ul\"\n  })), __jsx(\"div\", null, checklistStatus()))) : __jsx(\"div\", {\n    className: \"card cursor-pointer\"\n  }, __jsx(\"div\", {\n    className: \"card-content-title\"\n  }, props.card.cardTitle), __jsx(\"div\", {\n    className: \"card-content-note\"\n  }, props.card.note), __jsx(\"div\", {\n    className: \"card-content-bottom display-flex\"\n  }, __jsx(\"div\", null, __jsx(\"i\", {\n    className: \"card-checklist-icon fas fa-list-ul\"\n  })), __jsx(\"div\", null, checklistStatus())))));\n}\n\nexport default Card;","map":null,"metadata":{},"sourceType":"module"}