{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nfunction Activity(props) {\n  var _useState = useState(''),\n      activity = _useState[0],\n      setActivity = _useState[1];\n\n  var handleActivitySubmit = function handleActivitySubmit() {\n    if (activity.trim().length > 0) {\n      props.addActivity(props.currentColumn.id, props.currentCard.id, activity);\n      props.updateDate(props.currentColumn.id, props.currentCard.id);\n      setActivity('');\n    }\n  };\n\n  var getTimeMsg = function getTimeMsg(updatedAt) {\n    var createdTime = new Date(updatedAt).valueOf();\n    var currentTime = new Date().valueOf();\n    var second = 60;\n    var minute = 60;\n    var hour = 24;\n    var day = 30;\n    var month = 12;\n    var divider = 1;\n    var timeMsg = '';\n    var diff = (currentTime - createdTime) / 1000;\n\n    if (diff <= second) {\n      timeMsg = 'second';\n    } else if (diff <= second * minute) {\n      divider = second;\n      timeMsg = 'minute';\n    } else if (diff <= second * minute * hour) {\n      divider = second * minute;\n      timeMsg = 'hour';\n    } else if (diff <= second * minute * hour * day) {\n      divider = second * minute * hour;\n      timeMsg = 'day';\n    } else if (diff <= second * minute * hour * day * month) {\n      divider = second * minute * hour * day;\n      timeMsg = 'month';\n    } else {\n      divider = second * minute * hour * day * month;\n      timeMsg = 'year';\n    }\n\n    diff /= divider;\n    var displayTime = Math.abs(Math.round(diff));\n    var plural = displayTime > 1 ? 's' : '';\n    var timeMessage = \"\".concat(displayTime, \" \").concat(timeMsg).concat(plural, \" ago\");\n    return timeMessage;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"card-deatil-title\"\n  }, \"Activity\"), __jsx(\"textarea\", {\n    className: \"card-detail-activity\",\n    placeholder: \"Add Comment\",\n    disabled: props.currentCard.isArchived,\n    onChange: function onChange(e) {\n      return setActivity(e.target.value);\n    },\n    value: activity\n  }, activity), __jsx(\"div\", {\n    className: \"text-right\"\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return handleActivitySubmit();\n    },\n    className: \"\".concat(activity.length < 1 ? 'complete-btn-disabled' : 'complete-btn cursor-pointer', \" border-none\")\n  }, \"Say it\")), __jsx(\"div\", {\n    className: \"activity-log\"\n  }, props.currentCard.activities.map(function (activity) {\n    var iconElement = null;\n    var activityString = activity.activity.toString();\n\n    switch (true) {\n      case activityString.includes('checklist'):\n        iconElement = __jsx(\"i\", {\n          className: \"text-orange far fa-list-alt\"\n        });\n        break;\n\n      case activityString.includes('title'):\n        iconElement = __jsx(\"i\", {\n          className: \"text-purple fas fa-file-signature\"\n        });\n        break;\n\n      case activityString.includes('complete'):\n        iconElement = __jsx(\"i\", {\n          className: \"text-green far fa-check-circle\"\n        });\n        break;\n\n      case activityString.includes('delete'):\n        iconElement = __jsx(\"i\", {\n          className: \"text-red fas fa-file-signature\"\n        });\n        break;\n\n      default:\n        iconElement = __jsx(\"i\", {\n          className: \"text-yellow far fa-comment\"\n        });\n        break;\n    }\n\n    return __jsx(\"div\", {\n      key: activity.id,\n      className: \"activity-row display-flex\"\n    }, __jsx(\"div\", {\n      className: \"activity-icon\"\n    }, iconElement), __jsx(\"div\", {\n      className: \"text-grey activity-content\"\n    }, __jsx(\"div\", {\n      className: \"my-5px text-bolder\"\n    }, getTimeMsg(activity.createdAt)), __jsx(\"div\", {\n      className: \"my-5px activity-log-content\"\n    }, activity.activity.split('||')[0], __jsx(\"b\", null, activity.activity.split('||')[1]))));\n  })));\n}\n\nexport default Activity;","map":null,"metadata":{},"sourceType":"module"}