{"ast":null,"code":"import Card from '../../middleware/models/card';\nexport default (async (request, response) => {\n  const {\n    columnId,\n    cards\n  } = request.body;\n\n  try {\n    cards.map(async (card, index) => {\n      await Card.updateOne({\n        _id: card._id\n      }, {\n        $set: {\n          columnId,\n          order: index\n        }\n      });\n    });\n    return response.status(200).json({\n      success: true\n    });\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to reorder cards in a same column'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/pages/api/reorder-card.tsx"],"names":["Card","request","response","columnId","cards","body","map","card","index","updateOne","_id","$set","order","status","json","success","e","message"],"mappings":"AACA,OAAOA,IAAP,MAAiB,8BAAjB;AAGA,gBAAe,OAAOC,OAAP,EAAgCC,QAAhC,KAA8D;AAC3E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBH,OAAO,CAACI,IAApC;;AACA,MAAI;AACFD,IAAAA,KAAK,CAACE,GAAN,CAAU,OAAOC,IAAP,EAAoBC,KAApB,KAAsC;AAC9C,YAAMR,IAAI,CAACS,SAAL,CACJ;AAAEC,QAAAA,GAAG,EAAEH,IAAI,CAACG;AAAZ,OADI,EAEJ;AAAEC,QAAAA,IAAI,EAAE;AAAER,UAAAA,QAAF;AAAYS,UAAAA,KAAK,EAAEJ;AAAnB;AAAR,OAFI,CAAN;AAID,KALD;AAMA,WAAON,QAAQ,CAACW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA1B,CAAP;AACD,GARD,CAQE,OAAOC,CAAP,EAAU;AACV,WAAOd,QAAQ,CAACW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BC,MAAAA,OAAO,EAAE,KADsB;AAE/BE,MAAAA,OAAO,EAAE;AAFsB,KAA1B,CAAP;AAID;AACF,CAhBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport Card from '../../middleware/models/card';\nimport ICard from '../../components/interfaces/icard';\n\nexport default async (request: NextApiRequest, response: NextApiResponse) => {\n  const { columnId, cards } = request.body;\n  try {\n    cards.map(async (card: ICard, index: number) => {\n      await Card.updateOne(\n        { _id: card._id },\n        { $set: { columnId, order: index } }\n      );\n    });\n    return response.status(200).json({ success: true });\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to reorder cards in a same column',\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}