{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-modal.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => createStyles({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  backdrop: {\n    backgroundColor: 'rgb(144,144,144,0.6)'\n  }\n}));\n\nfunction CardModal(props) {\n  const classes = useStyles();\n  const {\n    0: cardDetailTitle,\n    1: setCardDetailTitle\n  } = useState('');\n  useEffect(() => {\n    setCardDetailTitle(props.currentCard.cardTitle);\n  }, []);\n  const {\n    0: note,\n    1: setNote\n  } = useState('');\n  const {\n    0: isNoting,\n    1: setIsNoting\n  } = useState(false);\n\n  const handleKeyDownForCardDetailTitle = event => {\n    if (event.key === 'Enter') {\n      handleCardBoxTitleSubmit();\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: props.open,\n    onClose: props.handleModalClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500,\n      classes: {\n        root: classes.backdrop\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(Fade, {\n    in: props.open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"card-detail-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"complete-btn cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Complete\")), __jsx(\"div\", {\n    className: \"card-detail-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    id: \"transition-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    className: \"card-deatil-title border-none\",\n    type: \"text\",\n    onChange: e => setCardDetailTitle(e.target.value),\n    value: cardDetailTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, isNoting ? __jsx(\"input\", {\n    className: \"card-deatil-note border-none\",\n    type: \"text\",\n    onChange: e => setNote(e.target.value),\n    value: note,\n    onKeyDown: e => handleKeyDownForCardDetailTitle(e),\n    onBlur: e => handleKeyDownForCardDetailTitle(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }) : __jsx(\"div\", {\n    onClick: () => setIsNoting(true),\n    className: \"card-detail-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, \"This task has no notes.\")))))));\n}\n\nexport default CardModal;","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-modal.tsx"],"names":["React","useState","useEffect","Modal","Backdrop","Fade","makeStyles","createStyles","useStyles","theme","modal","display","alignItems","justifyContent","backdrop","backgroundColor","CardModal","props","classes","cardDetailTitle","setCardDetailTitle","currentCard","cardTitle","note","setNote","isNoting","setIsNoting","handleKeyDownForCardDetailTitle","event","key","handleCardBoxTitleSubmit","open","handleModalClose","timeout","root","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { notEqual } from 'assert';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    backdrop: {\n      backgroundColor: 'rgb(144,144,144,0.6)',\n    },\n  })\n);\n\nfunction CardModal(props: any) {\n  const classes = useStyles();\n  const [cardDetailTitle, setCardDetailTitle] = useState('');\n  useEffect(() => {\n    setCardDetailTitle(props.currentCard.cardTitle);\n  }, []);\n  const [note, setNote] = useState('');\n  const [isNoting, setIsNoting] = useState(false);\n\n  const handleKeyDownForCardDetailTitle = (event: any) => {\n    if (event.key === 'Enter') {\n      handleCardBoxTitleSubmit();\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.open}\n        onClose={props.handleModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n          classes: {\n            root: classes.backdrop,\n          },\n        }}\n      >\n        <Fade in={props.open}>\n          <div className=\"modal-paper\">\n            <div className=\"card-detail-header\">\n              <button className=\"complete-btn cursor-pointer\">Complete</button>\n            </div>\n            <div className=\"card-detail-left\">\n              <div id=\"transition-modal-title\">\n                <input\n                  className=\"card-deatil-title border-none\"\n                  type=\"text\"\n                  onChange={(e) => setCardDetailTitle(e.target.value)}\n                  value={cardDetailTitle}\n                />\n              </div>\n              <div>\n                {isNoting ? (\n                  <input\n                    className=\"card-deatil-note border-none\"\n                    type=\"text\"\n                    onChange={(e) => setNote(e.target.value)}\n                    value={note}\n                    onKeyDown={(e) => handleKeyDownForCardDetailTitle(e)}\n                    onBlur={(e) => handleKeyDownForCardDetailTitle(e)}\n                  />\n                ) : (\n                  <div\n                    onClick={() => setIsNoting(true)}\n                    className=\"card-detail-note\"\n                  >\n                    This task has no notes.\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </>\n  );\n}\nexport default CardModal;\n"]},"metadata":{},"sourceType":"module"}