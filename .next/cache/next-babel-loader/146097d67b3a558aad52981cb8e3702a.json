{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-note.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nfunction CardNote(props) {\n  _s();\n\n  var _useState = useState(props.currentCard.note),\n      note = _useState[0],\n      setNote = _useState[1];\n\n  var _useState2 = useState(false),\n      isNoting = _useState2[0],\n      setIsNoting = _useState2[1];\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      props.updateCardNote(props.currentColumn.id, props.currentCard.id, note);\n      setIsNoting(false);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"card-deatil-note-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, props.currentCard.isArchived ? note.length < 1 ? __jsx(\"div\", {\n    onClick: function onClick() {\n      return setIsNoting(true);\n    },\n    className: \"card-detail-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"This task has no notes.\") : __jsx(\"div\", {\n    onClick: function onClick() {\n      return setIsNoting(true);\n    },\n    className: \"card-detail-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, note.length > 70 ? note.substr(0, 40) + '...' : note) : isNoting ? __jsx(\"input\", {\n    id: props.currentCardId,\n    className: \"card-deatil-note-input border-none\",\n    type: \"text\",\n    autoFocus: true,\n    onChange: function onChange(e) {\n      return setNote(e.target.value);\n    },\n    value: note,\n    onKeyDown: function onKeyDown(e) {\n      return handleKeyDown(e);\n    },\n    onBlur: function onBlur() {\n      return setIsNoting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }) : note.length < 1 ? __jsx(\"div\", {\n    onClick: function onClick() {\n      return setIsNoting(true);\n    },\n    className: \"card-detail-note cursor-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"This task has no notes.\") : __jsx(\"div\", {\n    onClick: function onClick() {\n      return setIsNoting(true);\n    },\n    className: \"card-detail-note cursor-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, note.length > 70 ? note.substr(0, 40) + '...' : note));\n}\n\n_s(CardNote, \"GV8PkHGikU2hG8m1rLyxsv4NA1g=\");\n\n_c = CardNote;\nexport default CardNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardNote\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-kanban/components/card-note.tsx"],"names":["React","useState","CardNote","props","currentCard","note","setNote","isNoting","setIsNoting","handleKeyDown","event","key","updateCardNote","currentColumn","id","isArchived","length","substr","currentCardId","e","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;AAAA;;AAAA,kBACJF,QAAQ,CAACE,KAAK,CAACC,WAAN,CAAkBC,IAAnB,CADJ;AAAA,MACrBA,IADqB;AAAA,MACfC,OADe;;AAAA,mBAEIL,QAAQ,CAAC,KAAD,CAFZ;AAAA,MAErBM,QAFqB;AAAA,MAEXC,WAFW;;AAI5B,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAgB;AACpC,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBR,MAAAA,KAAK,CAACS,cAAN,CAAqBT,KAAK,CAACU,aAAN,CAAoBC,EAAzC,EAA6CX,KAAK,CAACC,WAAN,CAAkBU,EAA/D,EAAmET,IAAnE;AACAG,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACC,WAAN,CAAkBW,UAAlB,GACCV,IAAI,CAACW,MAAL,GAAc,CAAd,GACE;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMR,WAAW,CAAC,IAAD,CAAjB;AAAA,KAAd;AAAuC,IAAA,SAAS,EAAC,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,GAKE;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMA,WAAW,CAAC,IAAD,CAAjB;AAAA,KAAd;AAAuC,IAAA,SAAS,EAAC,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACW,MAAL,GAAc,EAAd,GAAmBX,IAAI,CAACY,MAAL,CAAY,CAAZ,EAAe,EAAf,IAAqB,KAAxC,GAAgDZ,IADnD,CANH,GAUGE,QAAQ,GACV;AACE,IAAA,EAAE,EAAEJ,KAAK,CAACe,aADZ;AAEE,IAAA,SAAS,EAAC,oCAFZ;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,KALZ;AAME,IAAA,KAAK,EAAEhB,IANT;AAOE,IAAA,SAAS,EAAE,mBAACc,CAAD;AAAA,aAAOV,aAAa,CAACU,CAAD,CAApB;AAAA,KAPb;AAQE,IAAA,MAAM,EAAE;AAAA,aAAMX,WAAW,CAAC,KAAD,CAAjB;AAAA,KARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAWRH,IAAI,CAACW,MAAL,GAAc,CAAd,GACF;AACE,IAAA,OAAO,EAAE;AAAA,aAAMR,WAAW,CAAC,IAAD,CAAjB;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,8BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADE,GAQF;AACE,IAAA,OAAO,EAAE;AAAA,aAAMA,WAAW,CAAC,IAAD,CAAjB;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,8BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGH,IAAI,CAACW,MAAL,GAAc,EAAd,GAAmBX,IAAI,CAACY,MAAL,CAAY,CAAZ,EAAe,EAAf,IAAqB,KAAxC,GAAgDZ,IAJnD,CA9BJ,CADF;AAwCD;;GAnDQH,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction CardNote(props: any) {\n  const [note, setNote] = useState(props.currentCard.note);\n  const [isNoting, setIsNoting] = useState(false);\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === 'Enter') {\n      props.updateCardNote(props.currentColumn.id, props.currentCard.id, note);\n      setIsNoting(false);\n    }\n  };\n\n  return (\n    <div className=\"card-deatil-note-box\">\n      {props.currentCard.isArchived ? (\n        note.length < 1 ? (\n          <div onClick={() => setIsNoting(true)} className=\"card-detail-note\">\n            This task has no notes.\n          </div>\n        ) : (\n          <div onClick={() => setIsNoting(true)} className=\"card-detail-note\">\n            {note.length > 70 ? note.substr(0, 40) + '...' : note}\n          </div>\n        )\n      ) : isNoting ? (\n        <input\n          id={props.currentCardId}\n          className=\"card-deatil-note-input border-none\"\n          type=\"text\"\n          autoFocus\n          onChange={(e) => setNote(e.target.value)}\n          value={note}\n          onKeyDown={(e) => handleKeyDown(e)}\n          onBlur={() => setIsNoting(false)}\n        />\n      ) : note.length < 1 ? (\n        <div\n          onClick={() => setIsNoting(true)}\n          className=\"card-detail-note cursor-text\"\n        >\n          This task has no notes.\n        </div>\n      ) : (\n        <div\n          onClick={() => setIsNoting(true)}\n          className=\"card-detail-note cursor-text\"\n        >\n          {note.length > 70 ? note.substr(0, 40) + '...' : note}\n        </div>\n      )}\n    </div>\n  );\n}\nexport default CardNote;\n"]},"metadata":{},"sourceType":"module"}